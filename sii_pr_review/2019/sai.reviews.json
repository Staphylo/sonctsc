[
    {
        "number": 1022,
        "repo": "sai",
        "review_at": "2019-12-12T16:44:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 1022,
        "repo": "sai",
        "latestReview_at": "2019-12-12T16:44:22Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1021,
        "repo": "sai",
        "review_at": "2019-12-13T14:44:34Z",
        "review_author": "lguohan"
    },
    {
        "number": 1021,
        "repo": "sai",
        "latestReview_at": "2019-12-13T14:44:34Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1020,
        "repo": "sai",
        "review_at": "2019-12-07T10:08:11Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1020,
        "repo": "sai",
        "latestReview_at": "2019-12-07T10:08:11Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1019,
        "repo": "sai",
        "comment_at": "2019-12-06T10:35:39Z",
        "comment_author": "kcudnik",
        "comment_body": "please address compilation issues: https://sonic-jenkins.westus2.cloudapp.azure.com/job/sai-meta-pr-build/1826/console"
    },
    {
        "number": 1019,
        "repo": "sai",
        "comment_at": "2019-12-06T23:14:06Z",
        "comment_author": "kcudnik",
        "comment_body": "you have white spaces on line endings, please remove, and add SNR  to acronyms file"
    },
    {
        "number": 1019,
        "repo": "sai",
        "comment_at": "2019-12-07T10:06:11Z",
        "comment_author": "kcudnik",
        "comment_body": "please address compilation errors "
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-06T10:36:16Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-06T10:36:39Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-06T21:35:45Z",
        "review_author": "apogedik"
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-06T21:35:54Z",
        "review_author": "apogedik"
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-10T04:58:28Z",
        "review_author": "apogedik"
    },
    {
        "number": 1019,
        "repo": "sai",
        "review_at": "2019-12-13T14:43:38Z",
        "review_author": "lguohan"
    },
    {
        "number": 1019,
        "repo": "sai",
        "latestReview_at": "2019-12-06T10:36:39Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1019,
        "repo": "sai",
        "latestReview_at": "2019-12-13T14:43:38Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1018,
        "repo": "sai",
        "review_at": "2019-12-04T06:29:21Z",
        "review_author": "atitjain"
    },
    {
        "number": 1018,
        "repo": "sai",
        "review_at": "2019-12-04T14:47:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1018,
        "repo": "sai",
        "review_at": "2019-12-04T14:47:39Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1018,
        "repo": "sai",
        "review_at": "2019-12-05T10:17:40Z",
        "review_author": "atitjain"
    },
    {
        "number": 1018,
        "repo": "sai",
        "review_at": "2019-12-12T16:31:23Z",
        "review_author": "lguohan"
    },
    {
        "number": 1018,
        "repo": "sai",
        "latestReview_at": "2019-12-12T16:31:23Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1018,
        "repo": "sai",
        "latestReview_at": "2019-12-05T10:17:40Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1017,
        "repo": "sai",
        "review_at": "2019-12-12T16:13:01Z",
        "review_author": "lguohan"
    },
    {
        "number": 1017,
        "repo": "sai",
        "latestReview_at": "2019-12-12T16:13:01Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1016,
        "repo": "sai",
        "review_at": "2019-11-23T21:41:03Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1016,
        "repo": "sai",
        "latestReview_at": "2019-11-23T21:41:03Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1014,
        "repo": "sai",
        "comment_at": "2019-11-06T17:14:08Z",
        "comment_author": "AshokDaparthi",
        "comment_body": "Original: https://github.com/opencomputeproject/SAI/pull/1004"
    },
    {
        "number": 1014,
        "repo": "sai",
        "comment_at": "2019-11-06T18:58:36Z",
        "comment_author": "kcudnik",
        "comment_body": "why moved away from original PR?"
    },
    {
        "number": 1014,
        "repo": "sai",
        "review_at": "2019-11-06T18:58:59Z",
        "review_author": "lguohan"
    },
    {
        "number": 1014,
        "repo": "sai",
        "review_at": "2019-11-06T19:00:44Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1014,
        "repo": "sai",
        "review_at": "2019-11-06T19:27:11Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1014,
        "repo": "sai",
        "review_at": "2019-11-06T22:52:30Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1014,
        "repo": "sai",
        "latestReview_at": "2019-11-06T18:58:59Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1014,
        "repo": "sai",
        "latestReview_at": "2019-11-06T19:00:44Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1014,
        "repo": "sai",
        "latestReview_at": "2019-11-06T22:52:30Z",
        "latestReview_author": "SidharajU",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1013,
        "repo": "sai",
        "review_at": "2019-11-05T18:11:16Z",
        "review_author": "lguohan"
    },
    {
        "number": 1013,
        "repo": "sai",
        "review_at": "2019-11-05T18:11:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 1013,
        "repo": "sai",
        "review_at": "2019-11-05T18:11:32Z",
        "review_author": "lguohan"
    },
    {
        "number": 1013,
        "repo": "sai",
        "review_at": "2019-11-05T18:14:03Z",
        "review_author": "lguohan"
    },
    {
        "number": 1013,
        "repo": "sai",
        "review_at": "2019-11-05T18:21:21Z",
        "review_author": "lguohan"
    },
    {
        "number": 1013,
        "repo": "sai",
        "latestReview_at": "2019-11-05T18:21:21Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1012,
        "repo": "sai",
        "comment_at": "2019-11-21T11:23:43Z",
        "comment_author": "kcudnik",
        "comment_body": "should o be, since we want to keep backward compatibility and enum order,  but this topic could be brought up on SAI weekly meeting"
    },
    {
        "number": 1012,
        "repo": "sai",
        "review_at": "2019-11-20T23:28:15Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1012,
        "repo": "sai",
        "latestReview_at": "2019-11-20T23:28:15Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1011,
        "repo": "sai",
        "review_at": "2019-10-31T19:04:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1011,
        "repo": "sai",
        "review_at": "2019-12-05T16:36:57Z",
        "review_author": "lguohan"
    },
    {
        "number": 1011,
        "repo": "sai",
        "latestReview_at": "2019-12-05T16:36:57Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1011,
        "repo": "sai",
        "latestReview_at": "2019-10-31T19:04:05Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-11-06T20:18:49Z",
        "comment_author": "kcudnik",
        "comment_body": "please fix all the errors and warnings https://sonic-jenkins.westus2.cloudapp.azure.com/job/sai-meta-pr-build/1812/console\r\n"
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-11-20T17:26:16Z",
        "comment_author": "DeanKalla",
        "comment_body": "Warnings have been resolved but there is one issue with the build I am not sure how to resolve. I'm new to this codebase and build, could someone help me understand what this metadata build error means?\r\n\r\n> ERROR: FATAL ERROR === MUST FIX === : Could not open file 'xml/xml/union__sai__macsec__auth__key__t.xml' No such file or directory at xmlutils.pm line 163."
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-11-21T04:47:58Z",
        "comment_author": "kcudnik",
        "comment_body": "* change SAI_MACSEC_SA_ATTR_DIRECTION to SAI_MACSEC_SA_ATTR_MASCEC_DIRECTION on condition\r\n* also conditions on stat enums are not supported\r\n* SAI_OBJECT_TYPE_MAX must have consecutive number after SAI_OBJECT_TYPE_MACSEC_SA\r\n* fix spelling\r\n* add SAI_API_MACSEC entry in sai_api_t\r\n* you introduced 4 new types, you will have to add 4 serialize and 4 deserialize methods (look at meta/saiseralise.[ch] and at compiler errors\r\n* change SAI_ATTR_VALUE_TYPE_ACL_FIELD_DATA_SCI to SAI_ATTR_VALUE_TYPE_ACL_FIELD_DATA_MACSEC_SCI\r\n\r\ni added some enhancements to parser to minimize your impact https://github.com/opencomputeproject/SAI/pull/1015\r\n\r\nplease marge and retest and fix errors"
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-11-21T04:48:12Z",
        "comment_author": "kcudnik",
        "comment_body": "retest this please"
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-11-22T07:26:26Z",
        "comment_author": "prafull-brcm",
        "comment_body": "In sai.h header file one change is required to add MACsec APIs.\r\n\r\n    SAI_API_MACSEC           = 43, /**< sai_macsec_api_t */\r\n    SAI_API_MAX              = 44, /**< total number of APIs */\r\n} sai_api_t;"
    },
    {
        "number": 1010,
        "repo": "sai",
        "comment_at": "2019-12-17T20:49:39Z",
        "comment_author": "DeanKalla",
        "comment_body": "Can we merge this PR as-is? We can make more PR for other enhancements."
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-06T18:42:42Z",
        "review_author": "lguohan"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-06T20:14:35Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-06T20:14:54Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-06T20:17:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-06T20:41:25Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-07T16:10:05Z",
        "review_author": "lguohan"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-07T16:23:33Z",
        "review_author": "lguohan"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-07T16:33:31Z",
        "review_author": "DeanKalla"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-11T21:28:55Z",
        "review_author": "sujinmkang"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-22T07:20:47Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-25T23:08:56Z",
        "review_author": "DeanKalla"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:54:43Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:55:58Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:57:18Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:58:49Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:59:12Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T17:59:48Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-11-30T18:02:40Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T18:52:59Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T18:55:51Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T19:19:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T19:35:14Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T22:04:52Z",
        "review_author": "DeanKalla"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-02T23:56:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-04T22:03:36Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-04T22:04:37Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-04T22:10:28Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-05T11:06:43Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-06T12:24:24Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-06T19:37:30Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-06T19:38:17Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-06T20:14:24Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-09T06:34:19Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-10T21:23:35Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-11T03:04:57Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-12T06:08:56Z",
        "review_author": "lguohan"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-12T16:30:14Z",
        "review_author": "tfangit"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-12T19:17:56Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1010,
        "repo": "sai",
        "review_at": "2019-12-18T20:53:07Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-05T11:06:43Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-11-11T21:28:55Z",
        "latestReview_author": "sujinmkang",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-11T03:04:57Z",
        "latestReview_author": "dipankar-ba",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-09T06:34:19Z",
        "latestReview_author": "prafull-brcm",
        "latestReview_state": "CHANGES_REQUESTED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-12T06:08:56Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-12T16:30:14Z",
        "latestReview_author": "tfangit",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-12T19:17:56Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1010,
        "repo": "sai",
        "latestReview_at": "2019-12-18T20:53:07Z",
        "latestReview_author": "SidharajU",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1006,
        "repo": "sai",
        "review_at": "2019-10-21T10:18:27Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1006,
        "repo": "sai",
        "review_at": "2019-10-21T10:18:46Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1006,
        "repo": "sai",
        "review_at": "2019-10-21T15:56:30Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1006,
        "repo": "sai",
        "review_at": "2019-10-21T18:25:53Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1006,
        "repo": "sai",
        "review_at": "2021-09-14T03:13:14Z",
        "review_author": "fengyingling"
    },
    {
        "number": 1006,
        "repo": "sai",
        "latestReview_at": "2021-09-14T03:13:14Z",
        "latestReview_author": "fengyingling",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1006,
        "repo": "sai",
        "latestReview_at": "2019-10-21T18:25:53Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1006,
        "repo": "sai",
        "latestReview_at": "2019-10-21T15:56:30Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-18T15:32:14Z",
        "comment_author": "dgsudharsan",
        "comment_body": "Can someone from Broadcom confirm whether the new attributes would work for their 6 tap filter mechanism? \r\n@ben-gale "
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-19T11:20:25Z",
        "comment_author": "SathishKumarTR-Dell",
        "comment_body": "[1] With this model, it has to be mandated that the host adapter needs to set all the 6 parameters whenever the configuration has to be changed on the port. \r\n[2] Suggest to change the type of the attributes to \"sai_s32_list_t\" \r\n"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-19T14:45:54Z",
        "comment_author": "dgsudharsan",
        "comment_body": "> [1] With this model, it has to be mandated that the host adapter needs to set all the 6 parameters whenever the configuration has to be changed on the port.\r\n\r\nHi Sathish,\r\nThe set attribute API can set only one attribute at a time. Hence setting all 6 together is impossible. Can someone from broadcom confirm if all 6 are required to be set in a single shot or are there APIs to set them individually?"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-20T21:50:15Z",
        "comment_author": "tonytitus",
        "comment_body": "Will it be possible to add below SAI serdes params as well(needed for Innovium chip):\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_PRE1\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_PRE2\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_PRE3\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_ATTN\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_MAIN\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_POST\r\n    SAI_PORT_ATTR_SERDES_TX_EQ_POST2"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-25T18:05:19Z",
        "comment_author": "dgsudharsan",
        "comment_body": "> Will it be possible to add below SAI serdes params as well(needed for Innovium chip):\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_PRE1\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_PRE2\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_PRE3\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_ATTN\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_MAIN\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_POST\r\n> SAI_PORT_ATTR_SERDES_TX_EQ_POST2\r\n\r\nHi,\r\nWhether SAI_PORT_ATTR_SERDES_TX_FIR_MAIN and SAI_PORT_ATTR_SERDES_TX_EQ_MAIN refer the same? Can't we just have one attribute?"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-25T18:08:27Z",
        "comment_author": "tonytitus",
        "comment_body": "> > Will it be possible to add below SAI serdes params as well(needed for Innovium chip):\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_PRE1\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_PRE2\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_PRE3\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_ATTN\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_MAIN\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_POST\r\n> > SAI_PORT_ATTR_SERDES_TX_EQ_POST2\r\n> \r\n> Hi,\r\n> Whether SAI_PORT_ATTR_SERDES_TX_FIR_MAIN and SAI_PORT_ATTR_SERDES_TX_EQ_MAIN refer the same? Can't we just have one attribute?\r\n\r\nWhat does FIR stands for?"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-26T02:47:06Z",
        "comment_author": "dgsudharsan",
        "comment_body": "> > > Will it be possible to add below SAI serdes params as well(needed for Innovium chip):\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_PRE1\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_PRE2\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_PRE3\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_ATTN\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_MAIN\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_POST\r\n> > > SAI_PORT_ATTR_SERDES_TX_EQ_POST2\r\n> > \r\n> > \r\n> > Hi,\r\n> > Whether SAI_PORT_ATTR_SERDES_TX_FIR_MAIN and SAI_PORT_ATTR_SERDES_TX_EQ_MAIN refer the same? Can't we just have one attribute?\r\n> \r\n> What does FIR stands for?\r\n\r\nFinite Impulse Response.\r\nhttps://www.edn.com/Home/PrintView?contentItemId=4458265"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-26T21:25:17Z",
        "comment_author": "tonytitus",
        "comment_body": "Yes, SAI_PORT_ATTR_SERDES_TX_FIR_MAIN works for us.\r\n\r\nFrom: \"Sudharsan D.G\" <notifications@github.com>\r\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\r\nDate: Wednesday, September 25, 2019 at 7:47 PM\r\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\r\nCc: Tony Titus <ttitus@innovium.com>, Comment <comment@noreply.github.com>\r\nSubject: Re: [opencomputeproject/SAI] Defining new serdes attributes (#1002)\r\n\r\n{EXTERNAL}\r\n\r\nWill it be possible to add below SAI serdes params as well(needed for Innovium chip):\r\nSAI_PORT_ATTR_SERDES_TX_EQ_PRE1\r\nSAI_PORT_ATTR_SERDES_TX_EQ_PRE2\r\nSAI_PORT_ATTR_SERDES_TX_EQ_PRE3\r\nSAI_PORT_ATTR_SERDES_TX_EQ_ATTN\r\nSAI_PORT_ATTR_SERDES_TX_EQ_MAIN\r\nSAI_PORT_ATTR_SERDES_TX_EQ_POST\r\nSAI_PORT_ATTR_SERDES_TX_EQ_POST2\r\n\r\nHi,\r\nWhether SAI_PORT_ATTR_SERDES_TX_FIR_MAIN and SAI_PORT_ATTR_SERDES_TX_EQ_MAIN refer the same? Can't we just have one attribute?\r\n\r\nWhat does FIR stands for?\r\n\r\nFinite Impulse Response.\r\nhttps://www.edn.com/Home/PrintView?contentItemId=4458265\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub<https://github.com/opencomputeproject/SAI/pull/1002?email_source=notifications&email_token=ALZA3GNFTSKQGDRIVPPAK73QLQPDFA5CNFSM4IVKIR3KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7UCM5A#issuecomment-535307892>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ALZA3GKQUROVA2LYKEGGNTDQLQPDFANCNFSM4IVKIR3A>.\r\n"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-09-30T20:41:40Z",
        "comment_author": "kcudnik",
        "comment_body": "please take a look at errors and warnings and correct:\r\nhttps://sonic-jenkins.westus2.cloudapp.azure.com/job/sai-meta-pr-build/1779/console"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2019-10-29T19:14:46Z",
        "comment_author": "dgsudharsan",
        "comment_body": "@bandaru-viswanath Can you please let us know if the final changes look good?"
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2020-09-09T01:24:40Z",
        "comment_author": "BrandonCheng0121",
        "comment_body": "> [1] With this model, it has to be mandated that the host adapter needs to set all the 6 parameters whenever the configuration has to be changed on the port.\r\n> \r\n> Hi Sathish,\r\n> The set attribute API can set only one attribute at a time. Hence setting all 6 together is impossible. Can someone from broadcom confirm if all 6 are required to be set in a single shot or are there APIs to set them individually?\r\n\r\nHi dgsudharsan,\r\nIn my experience, broadcom has a API to set all 6 attributes in a single shot. "
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2020-09-09T02:44:40Z",
        "comment_author": "dgsudharsan",
        "comment_body": "> > [1] With this model, it has to be mandated that the host adapter needs to set all the 6 parameters whenever the configuration has to be changed on the port.\r\n> > Hi Sathish,\r\n> > The set attribute API can set only one attribute at a time. Hence setting all 6 together is impossible. Can someone from broadcom confirm if all 6 are required to be set in a single shot or are there APIs to set them individually?\r\n> \r\n> Hi dgsudharsan,\r\n> In my experience, broadcom has a API to set all 6 attributes in a single shot.\r\n\r\nHi Brandon,\r\nYes. That is the final approach taken.  During the discussion it is decided that if serdes settings need to be changed for port, the existing object is deleted and new object is created with new attributes."
    },
    {
        "number": 1002,
        "repo": "sai",
        "comment_at": "2020-09-11T02:34:31Z",
        "comment_author": "BrandonCheng0121",
        "comment_body": "> [1] With this model, it has to be mandated that the host adapter needs to set all the 6 parameters whenever the configuration has to be changed on the port.\r\n> Hi Sathish,\r\n> The set attribute API can set only one attribute at a time. Hence setting all 6 together is impossible. Can someone from broadcom confirm if all 6 are required to be set in a single shot or are there APIs to set them individually?\r\n> \r\n> Hi dgsudharsan,\r\n> In my experience, broadcom has a API to set all 6 attributes in a single shot.\r\n> \r\n> Hi Brandon,\r\n> Yes. That is the final approach taken.  During the discussion it is decided that if serdes settings need to be changed for port, the existing object is deleted and new object is created with new attributes.\r\n\r\nHi dgsudharsan,\r\nIn my experience, when using attribute SAI_PORT_ATTR_SERDES_PREEMPHASIS, the value used by a lane is only 32 bits length. This length may be not enough for 6 tap.  Now some BRCM chips only need 3 tap and each tap value is not very long, which could put 3 tap in a 32 bits value. Now your this pull request has more flexible for each tap to set its own 32 bits value.  \r\n\r\nHowever, if modifying new attributes for a serdes for a port needs to delete and then create serdes object, The sai_set_port_serdes_attribute_fn( ) won't be used anymore, right?"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-09-11T07:56:44Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-09-11T07:57:27Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-09-11T07:59:26Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-09-11T10:51:55Z",
        "review_author": "SathishKumarTR-Dell"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-09-17T08:49:20Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-07T18:04:36Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-07T18:28:27Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-07T18:35:59Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-07T18:44:43Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T03:20:05Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T03:22:29Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T03:37:26Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T06:50:05Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T14:38:40Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-08T14:43:11Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T15:20:34Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T15:23:30Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T15:23:59Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T15:24:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T15:24:40Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-10T17:57:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-22T22:51:55Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-28T15:17:51Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-29T19:21:50Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2019-10-30T15:26:43Z",
        "review_author": "lguohan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-08T10:14:35Z",
        "review_author": "BrandonCheng0121"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-09T02:40:38Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-09T06:00:20Z",
        "review_author": "BrandonCheng0121"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-09T07:23:53Z",
        "review_author": "BrandonCheng0121"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-09T07:51:38Z",
        "review_author": "BrandonCheng0121"
    },
    {
        "number": 1002,
        "repo": "sai",
        "review_at": "2020-09-23T09:51:21Z",
        "review_author": "BrandonCheng0121"
    },
    {
        "number": 1002,
        "repo": "sai",
        "latestReview_at": "2019-09-11T10:51:55Z",
        "latestReview_author": "SathishKumarTR-Dell",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1002,
        "repo": "sai",
        "latestReview_at": "2019-10-10T17:57:28Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1002,
        "repo": "sai",
        "latestReview_at": "2020-09-23T09:51:21Z",
        "latestReview_author": "BrandonCheng0121",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1002,
        "repo": "sai",
        "latestReview_at": "2019-10-30T15:26:43Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1002,
        "repo": "sai",
        "latestReview_at": "2019-10-29T19:21:50Z",
        "latestReview_author": "bandaru-viswanath",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-09-03T19:01:45Z",
        "comment_author": "kcudnik",
        "comment_body": "retest this please"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-09-03T19:02:48Z",
        "comment_author": "kcudnik",
        "comment_body": "since this is 1.4 branch \"-I.\" must be added to Makefile in \"perl parse.pl\" command, please take a look at Master branch for meta/Makefile\r\nthis is because perl version was updated on jenkins build system"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-09-05T15:40:27Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-09-12T04:20:06Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-10-10T15:05:10Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-10-10T15:13:02Z",
        "comment_author": "lguohan",
        "comment_body": "@kcudnik , is this comment for me? do i need to change the jenkins's build script?\r\n\r\n> since this is 1.4 branch \"-I.\" must be added to Makefile in \"perl parse.pl\" command, please take a look at Master branch for meta/Makefile\r\n> this is because perl version was updated on jenkins build system\r\n\r\n"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-10-10T17:51:25Z",
        "comment_author": "kcudnik",
        "comment_body": "no, this is comment to @antony-rheneus , Makefile script needs to be updated as in the master, to add -I., take a look at https://github.com/opencomputeproject/SAI/pull/950/files"
    },
    {
        "number": 999,
        "repo": "sai",
        "comment_at": "2019-10-10T18:32:30Z",
        "comment_author": "antony-rheneus",
        "comment_body": "> no, this is comment to @antony-rheneus , Makefile script needs to be updated as in the master, to add -I., take a look at https://github.com/opencomputeproject/SAI/pull/950/files\r\n\r\nOh, ok thanks, I thought comment was not for me. WIll update Makefile"
    },
    {
        "number": 999,
        "repo": "sai",
        "review_at": "2019-08-13T14:34:06Z",
        "review_author": "kcudnik"
    },
    {
        "number": 999,
        "repo": "sai",
        "review_at": "2019-10-11T17:40:51Z",
        "review_author": "kcudnik"
    },
    {
        "number": 999,
        "repo": "sai",
        "latestReview_at": "2019-10-11T17:40:51Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 998,
        "repo": "sai",
        "comment_at": "2019-08-15T16:01:12Z",
        "comment_author": "wendani",
        "comment_body": "I assume SONiC is the only user of SAI. If this is the case, it should be fine to make this correction as we are still at the high-level design phase to have the sub port interface feature in SONiC.\r\n\r\nhttps://github.com/opencomputeproject/SAI/pull/998#pullrequestreview-275278451"
    },
    {
        "number": 998,
        "repo": "sai",
        "comment_at": "2019-08-28T20:47:04Z",
        "comment_author": "lguohan",
        "comment_body": "@itaibaz , previous spec is a bug, we cannot keep backward compatible when fixing a bug."
    },
    {
        "number": 998,
        "repo": "sai",
        "review_at": "2019-08-12T23:29:55Z",
        "review_author": "prsunny"
    },
    {
        "number": 998,
        "repo": "sai",
        "review_at": "2019-08-15T06:34:13Z",
        "review_author": "itaibaz"
    },
    {
        "number": 998,
        "repo": "sai",
        "review_at": "2019-08-15T15:37:24Z",
        "review_author": "lguohan"
    },
    {
        "number": 998,
        "repo": "sai",
        "review_at": "2019-08-29T01:50:38Z",
        "review_author": "itaibaz"
    },
    {
        "number": 998,
        "repo": "sai",
        "latestReview_at": "2019-08-15T15:37:24Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 998,
        "repo": "sai",
        "latestReview_at": "2019-08-29T01:50:38Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 998,
        "repo": "sai",
        "latestReview_at": "2019-08-12T23:29:55Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 997,
        "repo": "sai",
        "comment_at": "2019-08-13T19:21:08Z",
        "comment_author": "padmanarayana",
        "comment_body": "Including reviewers of #936 @kcudnik  @marian-pritsak @michaelli10 : please review"
    },
    {
        "number": 997,
        "repo": "sai",
        "comment_at": "2019-08-15T16:26:00Z",
        "comment_author": "padmanarayana",
        "comment_body": "w.r.t the clarifications in today's SAI meeting:\r\n\r\n1. The multicast group name length restriction comes from the kernel genetlink infra which limits the family name as well as the multicast group name to 16 chars:\r\nlinux/genetlink.h:\r\n#define GENL_NAMSIZ\t16\t/* length of family name */\r\n\r\ninclude/net/genetlink.h \r\n\r\nstruct genl_multicast_group {\r\n\tchar\t\t\tname[GENL_NAMSIZ];\r\n};\r\n\r\nstruct genl_family {\r\n\tunsigned int\t\tid;\r\n\tunsigned int\t\thdrsize;\r\n\tchar\t\t\tname[GENL_NAMSIZ];\r\n...\r\n\r\n2. The genlmsg_multicast_netns() uses the portid (instead of name). However, from a persistence point of view (after warm/fast reboot), since the id might change (based on the driver implementation / order in which the mc groups are created), it is better to configure the multicast group name instead of id."
    },
    {
        "number": 997,
        "repo": "sai",
        "comment_at": "2019-08-22T13:06:27Z",
        "comment_author": "marian-pritsak",
        "comment_body": "Besides the MC group, how do we pass the PSAMPLE_ATTR_SAMPLE_GROUP group id?"
    },
    {
        "number": 997,
        "repo": "sai",
        "comment_at": "2019-08-22T15:22:54Z",
        "comment_author": "padmanarayana",
        "comment_body": "Currently, bundling flows based on some criteria (say, ACL ) is not defined and hence PSAMPLE_ATTR_SAMPLE_GROUP can be set to a default 1 (since existing sflow agents (hsflowd)) use this default."
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-12T18:31:19Z",
        "review_author": "lguohan"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-12T19:52:22Z",
        "review_author": "prsunny"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-13T19:21:06Z",
        "review_author": "padmanarayana"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-13T19:27:28Z",
        "review_author": "michaelli10"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-15T15:56:20Z",
        "review_author": "lguohan"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-15T15:56:33Z",
        "review_author": "lguohan"
    },
    {
        "number": 997,
        "repo": "sai",
        "review_at": "2019-08-22T16:04:34Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 997,
        "repo": "sai",
        "latestReview_at": "2019-08-15T15:56:33Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 997,
        "repo": "sai",
        "latestReview_at": "2019-08-12T19:52:22Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 997,
        "repo": "sai",
        "latestReview_at": "2019-08-22T16:04:34Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 997,
        "repo": "sai",
        "latestReview_at": "2019-08-13T19:27:28Z",
        "latestReview_author": "michaelli10",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 996,
        "repo": "sai",
        "comment_at": "2019-08-08T04:56:49Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "> I noticed SAI_SWITCH_ATTR_SUPPORTED_OBJECT_TYPE_LIST is also here\r\n> Are these 2 PRs mixed together ?\r\n\r\nThis is my issue. It should not have been here. I will change. Thanks for pointing out.\r\n> \r\n> Also, not that there is really anything against increasing to 64 bits, but is your buffer size really over 4 GB that uint32 covers ? AFAIK, ASIC buffers are in tens of MBs and not 4 GB\r\n\r\nYes. we have some chips that support buffers that 32bits can't hold, more than 4GB as you say."
    },
    {
        "number": 996,
        "repo": "sai",
        "comment_at": "2019-08-08T07:15:08Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "> > I noticed SAI_SWITCH_ATTR_SUPPORTED_OBJECT_TYPE_LIST is also here\r\n> > Are these 2 PRs mixed together ?\r\n> \r\n> This is my issue. It should not have been here. I will change. Thanks for pointing out.\r\n> \r\n\r\nCorrected. Thanks Itai."
    },
    {
        "number": 996,
        "repo": "sai",
        "comment_at": "2019-08-29T01:20:43Z",
        "comment_author": "lguohan",
        "comment_body": "@itaibaz , can you approve?"
    },
    {
        "number": 996,
        "repo": "sai",
        "review_at": "2019-08-07T19:28:58Z",
        "review_author": "kcudnik"
    },
    {
        "number": 996,
        "repo": "sai",
        "review_at": "2019-08-07T20:04:55Z",
        "review_author": "itaibaz"
    },
    {
        "number": 996,
        "repo": "sai",
        "review_at": "2019-08-08T08:22:00Z",
        "review_author": "lguohan"
    },
    {
        "number": 996,
        "repo": "sai",
        "review_at": "2019-08-29T01:50:12Z",
        "review_author": "itaibaz"
    },
    {
        "number": 996,
        "repo": "sai",
        "latestReview_at": "2019-08-08T08:22:00Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 996,
        "repo": "sai",
        "latestReview_at": "2019-08-29T01:50:12Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 996,
        "repo": "sai",
        "latestReview_at": "2019-08-07T19:28:58Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 993,
        "repo": "sai",
        "review_at": "2019-07-31T19:16:40Z",
        "review_author": "kcudnik"
    },
    {
        "number": 993,
        "repo": "sai",
        "review_at": "2019-08-06T10:11:13Z",
        "review_author": "antony-rheneus"
    },
    {
        "number": 993,
        "repo": "sai",
        "review_at": "2019-08-06T15:23:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 993,
        "repo": "sai",
        "latestReview_at": "2019-08-06T15:23:31Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 991,
        "repo": "sai",
        "comment_at": "2019-08-30T13:43:07Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "@marian-pritsak @mickeyspiegel Could you please approve this PR. I believe I have incorporated your feedback from the community discussion. Let me know if you have any further feedback."
    },
    {
        "number": 991,
        "repo": "sai",
        "review_at": "2019-07-29T20:49:19Z",
        "review_author": "kcudnik"
    },
    {
        "number": 991,
        "repo": "sai",
        "review_at": "2019-08-30T14:25:14Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 991,
        "repo": "sai",
        "review_at": "2019-08-30T14:59:28Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 991,
        "repo": "sai",
        "review_at": "2019-08-31T01:34:22Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 991,
        "repo": "sai",
        "review_at": "2019-09-05T15:16:14Z",
        "review_author": "lguohan"
    },
    {
        "number": 991,
        "repo": "sai",
        "latestReview_at": "2019-09-05T15:16:14Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 991,
        "repo": "sai",
        "latestReview_at": "2019-07-29T20:49:19Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 991,
        "repo": "sai",
        "latestReview_at": "2019-08-31T01:34:22Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 990,
        "repo": "sai",
        "review_at": "2019-07-27T00:16:37Z",
        "review_author": "lguohan"
    },
    {
        "number": 990,
        "repo": "sai",
        "latestReview_at": "2019-07-27T00:16:37Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-08-25T06:57:15Z",
        "comment_author": "kcudnik",
        "comment_body": "yes, new api would make sense to me, since to get this list of supported objects you would need to create swtich first, from the other hand what if there are multiple asic units in the SAI and each of them support different set of objects ?\r\n\r\nassuming that depeneding on api/attribute meaning, api would give global support, and attr per asic unit?"
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-08-29T17:15:20Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": " @marian-pritsak , @kcudnik : So are you suggesting we add the API suggested by Marian for 'Global capabilities' where as the one I proposed would be for a per-asic capabilities ?\r\n\r\nI am Okay with and makes sense to me. Please confirm and I will push updates."
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-08-29T19:44:12Z",
        "comment_author": "kcudnik",
        "comment_body": "so in this case there would be 2 apis in total?"
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-08-30T09:44:50Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "Actually I take back my words. \r\nThe API in the saiobject.h file take switch object-id as an input parameter. So there is no such thing as Global capabilities.  Besides, the saiobject.h file is meant to act on an specific object type - they take object type as a parameter and return appropriate values specific to that object type. \r\nIn my proposal, the intent is to get the capabilities in terms of all object types supported by a switch object. I don't think saiobject.h is the right place for it. \r\n@marian-pritsak Could you please suggest a modification/addition to saiobject.h so that I can see why it may be more logical ?"
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-09-19T15:58:51Z",
        "comment_author": "rck-innovium",
        "comment_body": "Vissu,\r\nThe proposed mechanism is a way for syncd to call the SAI adapter to get the list of supported object types and loop through the returned list and do the processing per supported object type.\r\n\r\nThe same thing can be done in syncd by walking through all the sai_api_query's api_method_table and do the processing for API types wherever it has non null callbacks.\r\n"
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-09-19T16:22:04Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "Hi Ravindranath,\r\n\r\nThe proposed mechanism is not meant for syncd to get this attribute and loop through. syncd (in sonic world) is only making the call and returning the SAI returned list back to SONiC. No looping involved.\r\n\r\nAlso, there is no guarantee that the presence non-null callbacks would mean that the corresponding objects can be created. There may be dummy callbacks which would return UNSUPPORTED, to avoid null-pointer dereferencing in syncd. "
    },
    {
        "number": 989,
        "repo": "sai",
        "comment_at": "2019-10-10T15:17:32Z",
        "comment_author": "lguohan",
        "comment_body": "maybe the availability of sai object is conditioned on the switch object. for example, different asics are usually supported by one SAI library. I am ok with current proposal. @marian-pritsak , do you agree?"
    },
    {
        "number": 989,
        "repo": "sai",
        "review_at": "2019-07-27T12:20:29Z",
        "review_author": "kcudnik"
    },
    {
        "number": 989,
        "repo": "sai",
        "review_at": "2019-08-23T09:27:02Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 989,
        "repo": "sai",
        "review_at": "2019-10-10T15:17:43Z",
        "review_author": "lguohan"
    },
    {
        "number": 989,
        "repo": "sai",
        "review_at": "2019-10-10T18:39:39Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 989,
        "repo": "sai",
        "review_at": "2019-10-11T17:42:07Z",
        "review_author": "kcudnik"
    },
    {
        "number": 989,
        "repo": "sai",
        "latestReview_at": "2019-10-10T15:17:43Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 989,
        "repo": "sai",
        "latestReview_at": "2019-10-11T17:42:07Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 989,
        "repo": "sai",
        "latestReview_at": "2019-10-10T18:39:39Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 988,
        "repo": "sai",
        "review_at": "2019-07-24T08:45:02Z",
        "review_author": "kcudnik"
    },
    {
        "number": 988,
        "repo": "sai",
        "review_at": "2019-07-25T15:13:24Z",
        "review_author": "lguohan"
    },
    {
        "number": 988,
        "repo": "sai",
        "review_at": "2019-07-25T15:49:36Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 988,
        "repo": "sai",
        "review_at": "2019-09-05T15:10:27Z",
        "review_author": "lguohan"
    },
    {
        "number": 988,
        "repo": "sai",
        "latestReview_at": "2019-09-05T15:10:27Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 988,
        "repo": "sai",
        "latestReview_at": "2019-07-24T08:45:02Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 986,
        "repo": "sai",
        "comment_at": "2019-07-30T17:56:26Z",
        "comment_author": "lguohan",
        "comment_body": "if we have reserved buffer for both ingress and egress, do we need to recalculate shared buffer by substract both ingress and egress reserved buffer from the the total pool."
    },
    {
        "number": 986,
        "repo": "sai",
        "comment_at": "2019-08-14T23:07:52Z",
        "comment_author": "wendani",
        "comment_body": "yes, this is my understanding. https://github.com/opencomputeproject/SAI/pull/986#issuecomment-516526003"
    },
    {
        "number": 986,
        "repo": "sai",
        "review_at": "2019-07-19T10:22:44Z",
        "review_author": "kcudnik"
    },
    {
        "number": 986,
        "repo": "sai",
        "latestReview_at": "2019-07-19T10:22:44Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-07-18T12:51:36Z",
        "comment_author": "kcudnik",
        "comment_body": "/var/johnar/workspace/sai-meta-pr-build/inc/saidebugcounter.h:124: warning: Found unknown command `\\isresourcetype'\r\n\r\nmissing from doxygen ? or wrong param name \r\n#942 must be previously merged"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-07-18T15:52:55Z",
        "comment_author": "lguohan",
        "comment_body": "@marian-pritsak , it is because the asic may not have so many different counters to count."
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-07-20T00:11:00Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "I am fine with the proposed approach of automatic bind method and Base object : SAI_OBJECT_TYPE_PORT."
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-07-23T20:08:29Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-07-30T09:16:27Z",
        "comment_author": "kcudnik",
        "comment_body": "WARNING: Word 'DMAC' is misspelled or is acronym, add to acronyms.txt? saidebugcounter.h 76:    /** Destination MAC is Reserved (DMAC=01-80-C2-00-00-0x) */\r\n\r\nadd DMAC to acronyms"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-03T14:07:23Z",
        "comment_author": "kcudnik",
        "comment_body": "you can go ahead and remove this IF \ud83d\udc4d https://github.com/opencomputeproject/SAI/blob/master/meta/saisanitycheck.c#L1548\r\n\r\nalso you will need to connect this debug counter somewhere to the graph because right now it's disconnected node"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-13T18:03:51Z",
        "comment_author": "kcudnik",
        "comment_body": "so actually current implementation will not solve disconnected object with readonly attribute since there should be attribute that this counter can be set to dbg_counter, or some attribute on dbg counter that could be set to other object type\r\n\r\ni guess we could make exception for this counter object if no other solution will be implemented"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-19T05:25:53Z",
        "comment_author": "rck-innovium",
        "comment_body": "Say, a given platform uses the same counter to account for multiple drop reasons. For eg, let us consider the case that the underlying device has the same h/w counter for both of the  below reasons:\r\nSAI_PORT_IN_DROP_REASON_FDB_UC_DISCARD.\r\nSAI_PORT_IN_DROP_REASON_FDB_MC_DISCARD\r\n\r\n Now, how does this platform expose this capability using sai_query_attribute_enum_values_capability(). \r\nThe end goal of debug counters should be to avoid silent drops, and hence the SONIC user should know that there exists a counter that would account for both FDB_UC_DISCARD and FDB_MC_DISCARD."
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-20T17:20:02Z",
        "comment_author": "kcudnik",
        "comment_body": "ASSERT FAILED (on line 4166): SAI_OBJECT_TYPE_DEBUG_COUNTER not present on any object list (eg. VLAN_MEMBER is present on SAI_VLAN_ATTR_MEMBER_LIST)\r\n\r\nyou will also need to add exception for iterator for debug counter\r\nalso can you put warning messages in those 2 places where you added exceptions ?"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-20T17:21:33Z",
        "comment_author": "kcudnik",
        "comment_body": "can you have multiple counter objects with the same type sai_debug_counter_type_t??"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-08-20T17:28:28Z",
        "comment_author": "itaibaz",
        "comment_body": "> can you have multiple counter objects with the same type sai_debug_counter_type_t??\r\n\r\nYes you can, please take a look on the example in the MD\r\nEach instance, both of the same type, tracks different reasons"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-09-04T20:33:28Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 985,
        "repo": "sai",
        "comment_at": "2019-09-04T20:35:13Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-07-18T08:44:07Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-07-18T09:47:58Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-07-22T08:29:48Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-07-29T22:03:49Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-07-31T17:08:45Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-03T10:14:02Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-05T20:52:06Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-06T09:33:07Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-06T17:01:09Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-06T20:17:06Z",
        "review_author": "lguohan"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-13T07:41:43Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-13T07:42:18Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-13T18:07:25Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-14T10:32:56Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-14T10:35:25Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-14T10:40:25Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-15T17:16:26Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-15T17:33:28Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-20T16:47:20Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-20T16:53:01Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-20T17:34:32Z",
        "review_author": "kcudnik"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-20T17:40:46Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-27T16:22:13Z",
        "review_author": "daall"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-28T06:38:01Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-28T07:22:14Z",
        "review_author": "itaibaz"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-08-29T15:46:38Z",
        "review_author": "lguohan"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-09-03T17:18:25Z",
        "review_author": "lguohan"
    },
    {
        "number": 985,
        "repo": "sai",
        "review_at": "2019-09-05T15:11:07Z",
        "review_author": "lguohan"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-08-06T09:33:07Z",
        "latestReview_author": "bandaru-viswanath",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-08-28T06:38:01Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-09-05T15:11:07Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-08-20T17:34:32Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-07-18T09:47:58Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 985,
        "repo": "sai",
        "latestReview_at": "2019-08-27T16:22:13Z",
        "latestReview_author": "daall",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 983,
        "repo": "sai",
        "comment_at": "2019-07-09T17:22:47Z",
        "comment_author": "lguohan",
        "comment_body": "@stcheng  to look at"
    },
    {
        "number": 983,
        "repo": "sai",
        "review_at": "2019-07-05T13:37:35Z",
        "review_author": "kcudnik"
    },
    {
        "number": 983,
        "repo": "sai",
        "review_at": "2019-07-09T17:34:24Z",
        "review_author": "stcheng"
    },
    {
        "number": 983,
        "repo": "sai",
        "review_at": "2019-07-11T15:27:48Z",
        "review_author": "lguohan"
    },
    {
        "number": 983,
        "repo": "sai",
        "latestReview_at": "2019-07-11T15:27:48Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 983,
        "repo": "sai",
        "latestReview_at": "2019-07-09T17:34:24Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 983,
        "repo": "sai",
        "latestReview_at": "2019-07-05T13:37:35Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 982,
        "repo": "sai",
        "review_at": "2019-07-02T17:02:41Z",
        "review_author": "lguohan"
    },
    {
        "number": 982,
        "repo": "sai",
        "latestReview_at": "2019-07-02T17:02:41Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 980,
        "repo": "sai",
        "review_at": "2019-06-27T15:21:31Z",
        "review_author": "lguohan"
    },
    {
        "number": 980,
        "repo": "sai",
        "latestReview_at": "2019-06-27T15:21:31Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 979,
        "repo": "sai",
        "comment_at": "2019-06-26T01:45:10Z",
        "comment_author": "MELLANOX-zhichenr",
        "comment_body": "Without the variable declaration, the following error message might appear in the finally block if the traffic test failed.\r\n\r\n======================================================================\r\nERROR: saiacl.L3AclTableGroupTestI\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"SAI_thrift/tests/saiacl.py\", line 1634, in runTest\r\n    self.client.sai_thrift_remove_acl_table_group_member(acl_table_group_member_id1)\r\nUnboundLocalError: local variable 'acl_table_group_member_id1' referenced before assignment\r\n\r\n\r\nThus, adding the declaration can help to get clear error message.\r\n"
    },
    {
        "number": 977,
        "repo": "sai",
        "review_at": "2019-07-02T17:04:27Z",
        "review_author": "lguohan"
    },
    {
        "number": 977,
        "repo": "sai",
        "latestReview_at": "2019-07-02T17:04:27Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 976,
        "repo": "sai",
        "comment_at": "2019-07-10T07:08:22Z",
        "comment_author": "chitra-raghavan",
        "comment_body": "> Other changes look fine to me.\r\n> \r\n> 'rif_id1' should be 'nhop1' in line 1907\r\n\r\nThanks .Addressed comments ."
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-02T21:43:56Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-02T21:50:37Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-02T21:52:04Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T09:46:02Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T12:24:15Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T12:24:32Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T12:24:59Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T12:25:03Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T17:19:55Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-03T20:36:06Z",
        "review_author": "itaibaz"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-05T03:50:10Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-08T20:26:49Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-08T20:28:17Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-10T07:08:38Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 976,
        "repo": "sai",
        "review_at": "2019-07-10T21:23:15Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 976,
        "repo": "sai",
        "latestReview_at": "2019-07-03T20:36:06Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "CHANGES_REQUESTED"
    },
    {
        "number": 976,
        "repo": "sai",
        "latestReview_at": "2019-07-10T21:23:15Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-02T01:42:27Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-02T21:55:11Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T09:15:31Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T09:15:34Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T09:15:49Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T09:15:53Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T09:15:59Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-03T17:26:58Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-04T07:09:23Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 975,
        "repo": "sai",
        "review_at": "2019-07-08T20:15:05Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 975,
        "repo": "sai",
        "latestReview_at": "2019-07-08T20:15:05Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 974,
        "repo": "sai",
        "review_at": "2019-06-27T15:19:26Z",
        "review_author": "lguohan"
    },
    {
        "number": 974,
        "repo": "sai",
        "latestReview_at": "2019-06-27T15:19:26Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 973,
        "repo": "sai",
        "comment_at": "2019-07-03T08:20:48Z",
        "comment_author": "chitra-raghavan",
        "comment_body": "> need to add local routes suggested by zhichen so that test can pass.\r\n\r\nAdded local routes"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-02T01:32:23Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-02T17:10:36Z",
        "review_author": "lguohan"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-03T08:20:06Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-03T17:16:23Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-04T06:47:19Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-08T20:12:39Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-09T21:06:40Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 973,
        "repo": "sai",
        "review_at": "2019-07-16T22:46:32Z",
        "review_author": "lguohan"
    },
    {
        "number": 973,
        "repo": "sai",
        "latestReview_at": "2019-07-16T22:46:32Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 973,
        "repo": "sai",
        "latestReview_at": "2019-07-09T21:06:40Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 972,
        "repo": "sai",
        "review_at": "2019-07-02T01:28:13Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 972,
        "repo": "sai",
        "review_at": "2019-07-02T01:29:43Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 972,
        "repo": "sai",
        "review_at": "2019-07-03T07:31:59Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 972,
        "repo": "sai",
        "review_at": "2019-07-03T17:13:26Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 972,
        "repo": "sai",
        "review_at": "2019-07-08T20:10:43Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 972,
        "repo": "sai",
        "latestReview_at": "2019-07-08T20:10:43Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 971,
        "repo": "sai",
        "comment_at": "2019-06-12T08:29:58Z",
        "comment_author": "lguohan",
        "comment_body": "is there any reason we do not timestamping ptp packets?"
    },
    {
        "number": 971,
        "repo": "sai",
        "comment_at": "2019-06-12T08:38:20Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "> is there any reason we do not timestamping ptp packets?\r\n\r\nYes. It is possible that the switch is set to just switch the PTP packets on some of the ports. It is a valid use case. "
    },
    {
        "number": 971,
        "repo": "sai",
        "comment_at": "2019-06-13T18:49:28Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "Based on the feedback in community meeting today (THU, 06/13), I have made the one-step and two-step time-stamping modes explicit."
    },
    {
        "number": 971,
        "repo": "sai",
        "review_at": "2019-06-20T17:32:08Z",
        "review_author": "itaibaz"
    },
    {
        "number": 971,
        "repo": "sai",
        "latestReview_at": "2019-06-20T17:32:08Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 969,
        "repo": "sai",
        "comment_at": "2019-06-11T20:49:19Z",
        "comment_author": "kcudnik",
        "comment_body": "try adding\r\n#define __STDC_FORMAT_MACROS\r\n#include <inttypes.h>"
    },
    {
        "number": 969,
        "repo": "sai",
        "review_at": "2019-06-11T21:06:30Z",
        "review_author": "kcudnik"
    },
    {
        "number": 969,
        "repo": "sai",
        "latestReview_at": "2019-06-11T21:06:30Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 967,
        "repo": "sai",
        "review_at": "2019-06-04T10:39:18Z",
        "review_author": "atitjain"
    },
    {
        "number": 967,
        "repo": "sai",
        "review_at": "2019-06-04T11:42:21Z",
        "review_author": "kcudnik"
    },
    {
        "number": 967,
        "repo": "sai",
        "latestReview_at": "2019-06-04T10:39:18Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 967,
        "repo": "sai",
        "latestReview_at": "2019-06-04T11:42:21Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 965,
        "repo": "sai",
        "comment_at": "2019-05-24T23:44:39Z",
        "comment_author": "prsunny",
        "comment_body": "@chitra-raghavan , can you take a look?"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-27T06:20:55Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-27T06:23:24Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-28T05:59:59Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-28T06:54:20Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-28T18:35:54Z",
        "review_author": "prsunny"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-28T23:30:17Z",
        "review_author": "prsunny"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T05:27:41Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T06:05:24Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T06:05:25Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T06:06:20Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T06:06:28Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-29T06:06:36Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-30T16:33:39Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-31T07:01:57Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-05-31T09:02:53Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "review_at": "2019-06-04T10:38:06Z",
        "review_author": "atitjain"
    },
    {
        "number": 965,
        "repo": "sai",
        "latestReview_at": "2019-05-30T16:33:39Z",
        "latestReview_author": "dgsudharsan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 965,
        "repo": "sai",
        "latestReview_at": "2019-05-28T23:30:17Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 965,
        "repo": "sai",
        "latestReview_at": "2019-06-04T10:38:06Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 964,
        "repo": "sai",
        "review_at": "2019-05-22T09:25:21Z",
        "review_author": "atitjain"
    },
    {
        "number": 964,
        "repo": "sai",
        "review_at": "2019-05-22T22:26:51Z",
        "review_author": "lguohan"
    },
    {
        "number": 964,
        "repo": "sai",
        "latestReview_at": "2019-05-22T22:26:51Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 964,
        "repo": "sai",
        "latestReview_at": "2019-05-22T09:25:21Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 963,
        "repo": "sai",
        "review_at": "2019-05-17T07:33:39Z",
        "review_author": "atitjain"
    },
    {
        "number": 963,
        "repo": "sai",
        "review_at": "2019-05-17T16:04:59Z",
        "review_author": "prsunny"
    },
    {
        "number": 963,
        "repo": "sai",
        "review_at": "2019-05-21T23:28:14Z",
        "review_author": "kcudnik"
    },
    {
        "number": 963,
        "repo": "sai",
        "latestReview_at": "2019-05-17T07:33:39Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 963,
        "repo": "sai",
        "latestReview_at": "2019-05-21T23:28:14Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 963,
        "repo": "sai",
        "latestReview_at": "2019-05-17T16:04:59Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 962,
        "repo": "sai",
        "comment_at": "2019-05-21T06:32:12Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 962,
        "repo": "sai",
        "review_at": "2019-05-17T01:28:25Z",
        "review_author": "kcudnik"
    },
    {
        "number": 962,
        "repo": "sai",
        "review_at": "2019-05-20T09:02:31Z",
        "review_author": "atitjain"
    },
    {
        "number": 962,
        "repo": "sai",
        "latestReview_at": "2019-05-20T09:02:31Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 962,
        "repo": "sai",
        "latestReview_at": "2019-05-17T01:28:25Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 961,
        "repo": "sai",
        "review_at": "2019-05-15T20:45:54Z",
        "review_author": "prsunny"
    },
    {
        "number": 961,
        "repo": "sai",
        "latestReview_at": "2019-05-15T20:45:54Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 960,
        "repo": "sai",
        "review_at": "2019-05-14T21:51:25Z",
        "review_author": "kcudnik"
    },
    {
        "number": 960,
        "repo": "sai",
        "review_at": "2019-05-27T09:55:52Z",
        "review_author": "kcudnik"
    },
    {
        "number": 960,
        "repo": "sai",
        "review_at": "2019-05-27T12:02:43Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 960,
        "repo": "sai",
        "review_at": "2019-05-27T21:03:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 960,
        "repo": "sai",
        "latestReview_at": "2019-05-27T21:03:31Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 959,
        "repo": "sai",
        "comment_at": "2019-06-05T20:37:11Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 959,
        "repo": "sai",
        "comment_at": "2019-06-05T21:47:17Z",
        "comment_author": "JaiOCP",
        "comment_body": "> retest this please\r\n\r\nFixup and retest done."
    },
    {
        "number": 959,
        "repo": "sai",
        "comment_at": "2019-06-26T20:23:28Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "In sai_tam_collector_attr_t, I would like to see a TC or queue index attribute:\r\n\r\n```\r\n    /**\r\n     * @brief Traffic class used for TAM reports to the collector\r\n     *\r\n     * @type sai_uint8_t\r\n     * @flags CREATE_AND_SET\r\n     * @default 0\r\n     */\r\n    SAI_TAM_COLLECTOR_ATTR_TC,\r\n```"
    },
    {
        "number": 959,
        "repo": "sai",
        "comment_at": "2019-06-26T20:33:41Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "The word doc has markup of all the changes in the last round or two of updates. These changes should all be accepted before finalizing the document.\r\n\r\nAlso there are 3 comments in the word doc that need to be resolved:\r\n\r\n1. Figure 1 is marked \"Broadcom proprietary and confidential\". Please remove the company specific text and logos.\r\n2. The document has an example using the SAI_TAM_TEL_TYPE_ATTR_FLOW_ID attribute which does not exist in the current saitam.h.\r\n3. The microburst detection example describes units of microseconds, but it is not clear where those units came from. The corresponding even threshold used units of nanoseconds.\r\n\r\n"
    },
    {
        "number": 959,
        "repo": "sai",
        "review_at": "2019-05-13T22:00:38Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 959,
        "repo": "sai",
        "review_at": "2019-05-14T17:50:26Z",
        "review_author": "kcudnik"
    },
    {
        "number": 959,
        "repo": "sai",
        "review_at": "2019-06-20T14:51:28Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 959,
        "repo": "sai",
        "review_at": "2019-06-20T15:12:24Z",
        "review_author": "mikelazar"
    },
    {
        "number": 959,
        "repo": "sai",
        "latestReview_at": "2019-06-20T15:12:24Z",
        "latestReview_author": "mikelazar",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 959,
        "repo": "sai",
        "latestReview_at": "2019-05-14T17:50:26Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 959,
        "repo": "sai",
        "latestReview_at": "2019-06-20T14:51:28Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 959,
        "repo": "sai",
        "latestReview_at": "2019-05-13T22:00:38Z",
        "latestReview_author": "mickeyspiegel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 956,
        "repo": "sai",
        "comment_at": "2019-06-25T06:02:11Z",
        "comment_author": "PJHsieh",
        "comment_body": "retest this please"
    },
    {
        "number": 956,
        "repo": "sai",
        "review_at": "2019-07-09T00:44:50Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 956,
        "repo": "sai",
        "latestReview_at": "2019-07-09T00:44:50Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-07T05:36:51Z",
        "review_author": "atitjain"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-10T22:59:22Z",
        "review_author": "kcudnik"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-13T23:57:17Z",
        "review_author": "prsunny"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-15T21:42:47Z",
        "review_author": "lguohan"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-16T12:03:46Z",
        "review_author": "atitjain"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-05-22T05:26:52Z",
        "review_author": "atitjain"
    },
    {
        "number": 953,
        "repo": "sai",
        "review_at": "2019-07-18T16:10:05Z",
        "review_author": "lguohan"
    },
    {
        "number": 953,
        "repo": "sai",
        "latestReview_at": "2019-07-18T16:10:05Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 953,
        "repo": "sai",
        "latestReview_at": "2019-05-22T05:26:52Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 953,
        "repo": "sai",
        "latestReview_at": "2019-05-10T22:59:22Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 950,
        "repo": "sai",
        "review_at": "2019-05-01T23:51:42Z",
        "review_author": "yxieca"
    },
    {
        "number": 950,
        "repo": "sai",
        "review_at": "2019-05-02T01:08:35Z",
        "review_author": "stcheng"
    },
    {
        "number": 950,
        "repo": "sai",
        "review_at": "2019-05-02T14:44:48Z",
        "review_author": "atitjain"
    },
    {
        "number": 950,
        "repo": "sai",
        "latestReview_at": "2019-05-02T01:08:35Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 950,
        "repo": "sai",
        "latestReview_at": "2019-05-02T14:44:48Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 950,
        "repo": "sai",
        "latestReview_at": "2019-05-01T23:51:42Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 949,
        "repo": "sai",
        "comment_at": "2019-06-14T21:07:13Z",
        "comment_author": "wendani",
        "comment_body": "@lguohan "
    },
    {
        "number": 948,
        "repo": "sai",
        "review_at": "2019-04-30T11:03:55Z",
        "review_author": "atitjain"
    },
    {
        "number": 948,
        "repo": "sai",
        "latestReview_at": "2019-04-30T11:03:55Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 947,
        "repo": "sai",
        "review_at": "2019-04-30T11:05:48Z",
        "review_author": "atitjain"
    },
    {
        "number": 947,
        "repo": "sai",
        "latestReview_at": "2019-04-30T11:05:48Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 946,
        "repo": "sai",
        "review_at": "2019-04-30T11:08:54Z",
        "review_author": "atitjain"
    },
    {
        "number": 946,
        "repo": "sai",
        "review_at": "2019-04-30T12:54:28Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 946,
        "repo": "sai",
        "review_at": "2019-05-07T14:00:03Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 946,
        "repo": "sai",
        "review_at": "2019-05-07T14:05:35Z",
        "review_author": "atitjain"
    },
    {
        "number": 946,
        "repo": "sai",
        "review_at": "2019-05-07T18:16:01Z",
        "review_author": "lguohan"
    },
    {
        "number": 946,
        "repo": "sai",
        "latestReview_at": "2019-05-07T14:05:35Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 946,
        "repo": "sai",
        "latestReview_at": "2019-05-07T18:16:01Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 942,
        "repo": "sai",
        "comment_at": "2019-07-11T15:18:17Z",
        "comment_author": "lguohan",
        "comment_body": "can you check the tunnel type? is that needed for counting the resources?"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-15T09:45:29Z",
        "review_author": "atitjain"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-15T10:23:58Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-15T12:22:45Z",
        "review_author": "atitjain"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-15T14:06:33Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-15T16:47:40Z",
        "review_author": "kcudnik"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-18T10:49:47Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-04-18T18:26:35Z",
        "review_author": "kcudnik"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-06-13T12:39:35Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-06-13T16:52:03Z",
        "review_author": "kcudnik"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-07-11T18:17:27Z",
        "review_author": "kcudnik"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-07-18T16:07:49Z",
        "review_author": "lguohan"
    },
    {
        "number": 942,
        "repo": "sai",
        "review_at": "2019-07-18T16:51:45Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 942,
        "repo": "sai",
        "latestReview_at": "2019-04-15T12:22:45Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 942,
        "repo": "sai",
        "latestReview_at": "2019-07-18T16:07:49Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 942,
        "repo": "sai",
        "latestReview_at": "2019-07-11T18:17:27Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 942,
        "repo": "sai",
        "latestReview_at": "2019-07-18T16:51:45Z",
        "latestReview_author": "bandaru-viswanath",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 941,
        "repo": "sai",
        "comment_at": "2019-04-11T14:00:59Z",
        "comment_author": "marian-pritsak",
        "comment_body": "L3_VXLAN table entry is iused instead of fdb in cases, where the overlay destination MAC is global for all VTEPs"
    },
    {
        "number": 941,
        "repo": "sai",
        "comment_at": "2019-04-15T09:48:53Z",
        "comment_author": "atitjain",
        "comment_body": "> L3_VXLAN table entry is iused instead of fdb in cases, where the overlay destination MAC is global for all VTEPs\r\n\r\nWhat is being achieved here, is it for routing the vxlan tunnel packet out of the gateway instead of switching it?"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-13T16:00:21Z",
        "review_author": "lguohan"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T06:00:55Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T08:52:44Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T09:28:11Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T10:03:38Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T10:03:42Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-14T10:05:30Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-17T17:08:31Z",
        "review_author": "tushar-ty"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-17T17:09:15Z",
        "review_author": "tushar-ty"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-18T10:30:27Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-18T10:31:57Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-18T10:59:00Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-18T16:33:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-19T09:23:47Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 939,
        "repo": "sai",
        "review_at": "2019-06-20T16:23:40Z",
        "review_author": "lguohan"
    },
    {
        "number": 939,
        "repo": "sai",
        "latestReview_at": "2019-06-17T17:09:15Z",
        "latestReview_author": "tushar-ty",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 939,
        "repo": "sai",
        "latestReview_at": "2019-06-18T16:33:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 939,
        "repo": "sai",
        "latestReview_at": "2019-06-20T16:23:40Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 939,
        "repo": "sai",
        "latestReview_at": "2019-06-18T10:59:00Z",
        "latestReview_author": "bandaru-viswanath",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-04-09T16:49:42Z",
        "comment_author": "lguohan",
        "comment_body": "as a general comments, we need a markdown file to describe the scope of the proposal and allow example code to demonstrate how to use the APIs"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-04-09T16:52:07Z",
        "comment_author": "lguohan",
        "comment_body": "we also need to define the NAT module in the SAI behavior model/pipeline. Where the NAT module is in the pipeline."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-04-09T16:59:07Z",
        "comment_author": "JaiOCP",
        "comment_body": "Spec is not yet complete. Its an early commit for others to start looking at it.\n\n \n\nFrom: lguohan <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, April 9, 2019 at 9:49 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] SAI NAT Proposal (#937)\n\n \n\nas a general comments, we need a markdown file to describe the scope of the proposal and allow example code to demonstrate how to use the APIs\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-04-09T16:59:15Z",
        "comment_author": "JaiOCP",
        "comment_body": "Ack.\n\n \n\nFrom: lguohan <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, April 9, 2019 at 9:52 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] SAI NAT Proposal (#937)\n\n \n\nwe also need to define the NAT module in the SAI behavior model/pipeline. Where the NAT module is in the pipeline.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-04-16T23:08:04Z",
        "comment_author": "JaiOCP",
        "comment_body": "> Can you please also add NAT in the pipeline object model\r\n> https://github.com/opencomputeproject/SAI/tree/master/doc/object-model\r\n> \r\n> In addition, it seems there is no ACL based NAT with updated proposal ?\r\n\r\nYes, I will be updating the behavioral model soon. \r\nThere is no ACL based NAT in this proposal. NAT entries can be mapped to ACL if there is such a need in the SAI driver."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-06-22T03:28:07Z",
        "comment_author": "hongrun007",
        "comment_body": "Hi, all,\r\nIs it necessary for us to support NAT for IPv6"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-06-22T11:32:29Z",
        "comment_author": "hesingh",
        "comment_body": "At first glance, since IPv6 has enough address space, including ULA, IPv6 has no need for NAT.  Also NAT is discouraged by the IETF due to many issues.  However, NAT has its uses, including NAT66.  Please read second paragraph in section 3 of https://tools.ietf.org/html/draft-mrw-behave-nat66-01"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-07-19T09:02:12Z",
        "comment_author": "marian-pritsak",
        "comment_body": "How do we configure DNAT Pool?"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-07-19T10:19:12Z",
        "comment_author": "marian-pritsak",
        "comment_body": "Need to add new ACL binding points - PRE_NAT and POST_NAT (before DNAT and after SNAT)"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T10:05:09Z",
        "comment_author": "rck-innovium",
        "comment_body": "> > Is the pipeline file here the latest version reflecting all changes discussed so far?\r\n> \r\n> Latest submitted file has the changes\r\n\r\nShould ingress security ACLs that match on say srcIP or dstIP addresses match on the translated addresses or before NAT?"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T10:21:45Z",
        "comment_author": "rck-innovium",
        "comment_body": "> > > Is the pipeline file here the latest version reflecting all changes discussed so far?\r\n> > \r\n> > \r\n> > Latest submitted file has the changes\r\n> \r\n> Should ingress security ACLs that match on say srcIP or dstIP addresses match on the translated addresses or before NAT?\r\n\r\nIn the pipeline, Policy-Based-Forwarding ACLs happen after DNAT/(SNAT+DNAT). However, SNAT happens after all ingress ACLs. There seems to be some inconsistency w.r.t ACLs. \r\n1) For packets that are either DNAT or double-NAT, ingress ACL lookup happens on translated DIP, SIP. \r\n2) For packets that are just SNAT, ingress ACL lookup happens before NAT translation.\r\nSo the behavior for ACLs mating on SIP is different for  double-NAT vs SNAT."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T17:30:37Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > > Is the pipeline file here the latest version reflecting all changes discussed so far?\r\n> > \r\n> > \r\n> > Latest submitted file has the changes\r\n> \r\n> Should ingress security ACLs that match on say srcIP or dstIP addresses match on the translated addresses or before NAT?\r\n\r\nIngress ACL rules should be applied consistently for a given translation domain/zone. This gets tricky in NAT as the reverse traffic SIP/DIP will appear in the outer zone i.e. translated address. This gets even more tricky with dynamic xlations. Having said the pipeline is structured in way where ACL can be applied on original SIP/DIP and/or xlated SIP/DIP"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T17:37:12Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > > > Is the pipeline file here the latest version reflecting all changes discussed so far?\r\n> > > \r\n> > > \r\n> > > Latest submitted file has the changes\r\n> > \r\n> > \r\n> > Should ingress security ACLs that match on say srcIP or dstIP addresses match on the translated addresses or before NAT?\r\n> \r\n> In the pipeline, Policy-Based-Forwarding ACLs happen after DNAT/(SNAT+DNAT). However, SNAT happens after all ingress ACLs. There seems to be some inconsistency w.r.t ACLs.\r\n> \r\n> 1. For packets that are either DNAT or double-NAT, ingress ACL lookup happens on translated DIP, SIP.\r\n> 2. For packets that are just SNAT, ingress ACL lookup happens before NAT translation.\r\n>    So the behavior for ACLs mating on SIP is different for  double-NAT vs SNAT.\r\n\r\nThere are two ACL blocks, one pre NAT and other post NAT. Post NAT block also is responsible for any PBR like functions.\r\nPost NAT block is not reflected for SNAT, I will add it in pipeline. Good catch."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T19:07:34Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "Marian made a comment towards the end of the meeting yesterday morning about the representation of the NAT miss counters in the pipeline. Looking into this further, I assume that these are just the normal actions and trap counters. As described in the pipeline, the SAI_HOSTIF_TRAP_TYPE_NAT_HAIRPIN, SAI_HOSTIF_TRAP_TYPE_DNAT_MISS, and SAI_HOSTIF_TRAP_TYPE_SNAT_MISS traps may be triggered. Counters will be associated with those traps only if SAI_HOSTIF_TRAP_ATTR_COUNTER_ID is set (at creation time or later) in the corresponding hostif_trap object. The action associated with the trap (e.g. drop or trap) is specified by SAI_HOSTIF_TRAP_ATTR_PACKET_ACTION. Is this correct?\r\n\r\nWhat Marian was objecting to was the representation of the counters in the pipeline diagram. Regardless of whether the action associated with the trap is drop or trap, it is the same counter. By calling it \"DNAT_MISS counter\" and \"DNAT_MISS_DROP counter\", it implies that there are two counters for DNAT_MISS traps, when in fact there is only one. We should either just remove all the stuff about \"disable\" and \"enable\" traps and trap counters since it is just normal trap logic, or adjust the terminology to something like \"trap_packet_action == drop\" and \"trap_packet_action == trap\" and move the counter up a block to the trap itself."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T20:28:57Z",
        "comment_author": "JaiOCP",
        "comment_body": "> Marian made a comment towards the end of the meeting yesterday morning about the representation of the NAT miss counters in the pipeline. Looking into this further, I assume that these are just the normal actions and trap counters. As described in the pipeline, the SAI_HOSTIF_TRAP_TYPE_NAT_HAIRPIN, SAI_HOSTIF_TRAP_TYPE_DNAT_MISS, and SAI_HOSTIF_TRAP_TYPE_SNAT_MISS traps may be triggered. Counters will be associated with those traps only if SAI_HOSTIF_TRAP_ATTR_COUNTER_ID is set (at creation time or later) in the corresponding hostif_trap object. The action associated with the trap (e.g. drop or trap) is specified by SAI_HOSTIF_TRAP_ATTR_PACKET_ACTION. Is this correct?\r\n> \r\n> What Marian was objecting to was the representation of the counters in the pipeline diagram. Regardless of whether the action associated with the trap is drop or trap, it is the same counter. By calling it \"DNAT_MISS counter\" and \"DNAT_MISS_DROP counter\", it implies that there are two counters for DNAT_MISS traps, when in fact there is only one. We should either just remove all the stuff about \"disable\" and \"enable\" traps and trap counters since it is just normal trap logic, or adjust the terminology to something like \"trap_packet_action == drop\" and \"trap_packet_action == trap\" and move the counter up a block to the trap itself.\r\n\r\nThanks Mickey,\r\nYes this didn't got captured in the meeting minutes.\r\n@marian-pritsak - We will do as Mickey is suggesting. Let us know if you still have question"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-02T20:32:27Z",
        "comment_author": "JaiOCP",
        "comment_body": "Mickey,\n\n \n\nMinor clarification.\n\nFunctionally traps are enabled/disabled and trap action corresponding to it will be punt/drop. Point about being single counter attached is correct. If the action is drop then counter maintains the drop counter else it is the punt (or trap) count. I will update the language as suggested.\n\n \n\n-Jai\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Friday, August 2, 2019 at 12:07 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, State change <state_change@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] SAI NAT Proposal (#937)\n\n \n\nMarian made a comment towards the end of the meeting yesterday morning about the representation of the NAT miss counters in the pipeline. Looking into this further, I assume that these are just the normal actions and trap counters. As described in the pipeline, the SAI_HOSTIF_TRAP_TYPE_NAT_HAIRPIN, SAI_HOSTIF_TRAP_TYPE_DNAT_MISS, and SAI_HOSTIF_TRAP_TYPE_SNAT_MISS traps may be triggered. Counters will be associated with those traps only if SAI_HOSTIF_TRAP_ATTR_COUNTER_ID is set (at creation time or later) in the corresponding hostif_trap object. The action associated with the trap (e.g. drop or trap) is specified by SAI_HOSTIF_TRAP_ATTR_PACKET_ACTION. Is this correct?\n\nWhat Marian was objecting to was the representation of the counters in the pipeline diagram. Regardless of whether the action associated with the trap is drop or trap, it is the same counter. By calling it \"DNAT_MISS counter\" and \"DNAT_MISS_DROP counter\", it implies that there are two counters for DNAT_MISS traps, when in fact there is only one. We should either just remove all the stuff about \"disable\" and \"enable\" traps and trap counters since it is just normal trap logic, or adjust the terminology to something like \"trap_packet_action == drop\" and \"trap_packet_action == trap\" and move the counter up a block to the trap itself.\n\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-03T04:13:19Z",
        "comment_author": "ritalhui",
        "comment_body": "> Is the pipeline file here the latest version reflecting all changes discussed so far?\r\n> \r\n> Latest submitted file has the changes\r\n> \r\n> Should ingress security ACLs that match on say srcIP or dstIP addresses match on the translated addresses or before NAT?\r\n> \r\n> In the pipeline, Policy-Based-Forwarding ACLs happen after DNAT/(SNAT+DNAT). However, SNAT happens after all ingress ACLs. There seems to be some inconsistency w.r.t ACLs.\r\n> \r\n> For packets that are either DNAT or double-NAT, ingress ACL lookup happens on translated DIP, SIP.\r\n> For packets that are just SNAT, ingress ACL lookup happens before NAT translation.\r\n> So the behavior for ACLs mating on SIP is different for  double-NAT vs SNAT.\r\n> \r\n> \r\n> There are two ACL blocks, one pre NAT and other post NAT. Post NAT block also is responsible for any PBR like functions.\r\n> Post NAT block is not reflected for SNAT, I will add it in pipeline. Good catch.\r\n\r\nHi Jai, we should also ensure ACL can be applied on original source address for double NAT case.  If we look at the \"ingress router flow\" at pipeline_v6.pdf page 4, there's an ACL block in between VRF table block and router table block.  The same ACL block can be reused as for no_nat table.  This ACL block can also be applied for regular ACL on original addresses (can include orig DIP too.) "
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-05T20:58:07Z",
        "comment_author": "JaiOCP",
        "comment_body": "> Thanks a lot Jai. I think we should still have a diagram to show how the new NAT block starts/integrates with existing pipeline. E.g. what is the previous block that'd point to \"ingress zone table\"? After NAT block is added, router flow on page 4 in pipeline_v6.pdf is no longer the latest. The page (and perhaps few other router flow pages) need to be updated to indicate at which point that the \"global_nat_enable\" flag is checked leading to a detour to an additional NAT processing.\r\n\r\nRita, Yes there is a preNAT block between VRF and router block and then a post NAT ACL block. This takes care of any pre NAT ACL (SNAT/DNAT/Double NAT or NoNAT) and as well post NAT after translations"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-23T15:12:11Z",
        "comment_author": "kcudnik",
        "comment_body": "retest this please"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-29T21:39:33Z",
        "comment_author": "JaiOCP",
        "comment_body": "> Three major comments:\r\n> \r\n> 1. Why are FROM_ZONE and TO_ZONE attributes included in sai_nat_entry_attr? I thought we agreed to remove them. The pipeline does not describe what an implementation is expected to do with these attributes.\r\n> 2. The pipeline says that the DNAT table sets \"vrf\" in addition to \"dip\" and \"dport\", but there is no attribute specifying the virtual router to use after DNAT translation. How is a switch supposed to know which \"vrf\" to use for the subsequent router table lookup?\r\n> 3. The pipeline says that the DNAT pool prefix lookup is only based on \"vrf\" and \"dip\", but SAI-NAT-API.md has an example that specifies l4_dst_port and proto. These should be removed.\r\n> \r\n> The other comments are minor.\r\n\r\n1. Removed FROM_ZONE and TO_ZONE from sai_nat_entry_attr.\r\n2. Added SAI_NAT_ENTRY_ATTR_VR_ID attribute only for dnat or double nat entry type.\r\n3. Cleaned up the spec"
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-30T02:17:34Z",
        "comment_author": "lguohan",
        "comment_body": "@JaiOCP , thanks for the efforts for developing this nat spec. can you also write a document to explain the pipeline? when I look at the pipeline graph along, still have many questions. It will be good if you can have a document to describe the pipeline."
    },
    {
        "number": 937,
        "repo": "sai",
        "comment_at": "2019-08-30T18:53:14Z",
        "comment_author": "JaiOCP",
        "comment_body": "> @JaiOCP , thanks for the efforts for developing this nat spec. can you also write a document to explain the pipeline? when I look at the pipeline graph along, still have many questions. It will be good if you can have a document to describe the pipeline.\r\n\r\n@lguohan Committed a document explaining the pipeline. "
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-15T09:52:53Z",
        "review_author": "atitjain"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-15T09:54:37Z",
        "review_author": "atitjain"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T21:44:12Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T21:44:36Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T22:01:39Z",
        "review_author": "itaibaz"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:01:03Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:02:22Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:05:31Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:05:49Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:31:53Z",
        "review_author": "itaibaz"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:33:53Z",
        "review_author": "itaibaz"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-16T23:35:58Z",
        "review_author": "itaibaz"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-17T00:33:00Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-17T00:34:43Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-17T01:04:51Z",
        "review_author": "itaibaz"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-17T03:32:50Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-17T05:32:45Z",
        "review_author": "atitjain"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-18T18:24:54Z",
        "review_author": "kcudnik"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-25T16:33:10Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-04-25T16:34:26Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-07-19T08:55:10Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T08:29:41Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T15:01:44Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:04:40Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:04:55Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:11:32Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:26:54Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:27:34Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T16:28:06Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:36:31Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:37:46Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:38:29Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:39:25Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:40:14Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:48:35Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-01T18:48:49Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-02T02:16:36Z",
        "review_author": "ritalhui"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-05T18:49:25Z",
        "review_author": "lguohan"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-05T20:23:18Z",
        "review_author": "kcudnik"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-05T20:24:19Z",
        "review_author": "kcudnik"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-05T20:45:21Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-05T20:56:15Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-08T15:58:31Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-08T22:14:07Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-08T22:36:09Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-22T10:54:15Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-23T15:13:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-26T07:08:11Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:31:54Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:32:23Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:34:46Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:35:38Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:36:40Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:37:57Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T21:42:53Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T22:32:37Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:18:44Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:19:26Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:32:08Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:32:20Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:32:28Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:32:35Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:32:42Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:33:30Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:33:41Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:33:49Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:39:45Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:41:15Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-29T23:48:04Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 937,
        "repo": "sai",
        "review_at": "2019-08-30T01:51:28Z",
        "review_author": "ritalhui"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-05T18:49:25Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-04-17T01:04:51Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-04-17T05:32:45Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-08T15:58:31Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-23T15:13:01Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-22T10:54:15Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-29T23:48:04Z",
        "latestReview_author": "mickeyspiegel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 937,
        "repo": "sai",
        "latestReview_at": "2019-08-30T01:51:28Z",
        "latestReview_author": "ritalhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-04T11:08:04Z",
        "comment_author": "atitjain",
        "comment_body": "> A netdev tunnel channel is proposed where an application can create a virtual tunnel interface (over a loopback) to receive trapped packets/buffers from the SAI driver. This can be used as an alternative to callback/FD based mechanisms.\r\n\r\nIn practice, the tunnel is created by using one of the loopback interfaces only and in that case, it's used to terminate the data traffic itself. So I couldn't quite get the use case you are trying. "
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-09T07:05:37Z",
        "comment_author": "kcudnik",
        "comment_body": "couple issues to fix:\r\n\r\nWARNING: coment is ending without space saihostif.h 890:    /** Receive packets via GRE/ERSPAN Type 2*/\r\n\r\nWARNING: @brief should start with capital letter: saihostif.h 899: * @brief hostif tunnel attributes\r\n\r\nWARNING: @brief should start with capital letter: saihostif.h 942:     * @brief meta header valid\r\n\r\nWARNING: Word 'hostif' is misspelled saihostif.h 899: * @brief hostif tunnel attributes\r\n\r\nWARNING: Value SAI_HOSTIF_TABLE_CHANNEL_ENCAP_TYPE_ERSPAN_TYPE_II of sai_hostif_channel_encap_type_t is not prefixed as SAI_HOSTIF_CHANNEL_ENCAP_TYPE_\r\n\r\nWARNING: Value SAI_HOSTIF_TABLE_CHANNEL_ENCAP_TYPE_UDP of sai_hostif_channel_encap_type_t is not prefixed as SAI_HOSTIF_CHANNEL_ENCAP_TYPE_\r\n\r\nERROR: enum sai_hostif_table_entry_channel_encap_type_t has no typedef enum sai_hostif_table_entry_channel_encap_type_t\r\n\r\nWARNING: Value SAI_HOSTIF_TABLE_CHANNEL_ENCAP_TYPE_ERSPAN_TYPE_II of sai_hostif_channel_encap_type_t is not prefixed as SAI_HOSTIF_CHANNEL_ENCAP_TYPE_\r\n\r\nWARNING: Value SAI_HOSTIF_TABLE_CHANNEL_ENCAP_TYPE_UDP of sai_hostif_channel_encap_type_t is not prefixed as SAI_HOSTIF_CHANNEL_ENCAP_TYPE_"
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-09T16:51:14Z",
        "comment_author": "lguohan",
        "comment_body": "I think we need example and scope in the documents."
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-11T10:01:52Z",
        "comment_author": "kcudnik",
        "comment_body": "you added sai_hostif_tunnel_attr_t structure attributes but there is missing SAI_OBJECT_TYPE_HOSTIF_TUNNEL object type in sai_object_type_t"
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-11T15:18:49Z",
        "comment_author": "kcudnik",
        "comment_body": "you introduced new object type, but there are not api's to create/remove/set/get for this object type in sai_hostif_api_t, you need to add 4 new api's:\r\n \r\ncreate_hostif_tunnel,\r\nremove_hostif_tunnel\r\nset_hostif_tunnel_attribute\r\nget_hostif_tunnel_attribute\r\n\r\nyou can also try building metadata localy, just go to SAI/meta directory and type \"make\" to see if everything compiles "
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-18T10:41:14Z",
        "comment_author": "marian-pritsak",
        "comment_body": "Did you consider using the existing psample infrastructure in Linux as an alternative to protobuf? It allows you to carry metadata along with the packet and is already a part of the mainline kernel."
    },
    {
        "number": 936,
        "repo": "sai",
        "comment_at": "2019-04-22T15:55:56Z",
        "comment_author": "sflow-rt",
        "comment_body": "+1 for using psample netlink channel to deliver packet samples. \r\n\r\npsample is a generic (subsystem independent) method of delivering packet samples and associated metadata. It is also extensible so additional metadata can easily be added in future (queue depth, queuing delay, etc.) \r\n\r\npsample is supported by the open source [Host sFlow](https://sflow.net/) agent."
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-04T11:00:39Z",
        "review_author": "atitjain"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-04T11:02:01Z",
        "review_author": "atitjain"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-11T14:29:09Z",
        "review_author": "padmanarayana"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-11T14:29:42Z",
        "review_author": "padmanarayana"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-15T10:19:16Z",
        "review_author": "atitjain"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-18T15:06:00Z",
        "review_author": "padmanarayana"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-04-18T18:23:23Z",
        "review_author": "kcudnik"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-05-30T22:22:39Z",
        "review_author": "prsunny"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-06-04T08:38:14Z",
        "review_author": "kcudnik"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-07-04T09:19:45Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-07-11T15:07:13Z",
        "review_author": "padmanarayana"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-07-11T15:31:33Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 936,
        "repo": "sai",
        "review_at": "2019-07-11T16:26:03Z",
        "review_author": "michaelli10"
    },
    {
        "number": 936,
        "repo": "sai",
        "latestReview_at": "2019-04-15T10:19:16Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 936,
        "repo": "sai",
        "latestReview_at": "2019-06-04T08:38:14Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 936,
        "repo": "sai",
        "latestReview_at": "2019-05-30T22:22:39Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 936,
        "repo": "sai",
        "latestReview_at": "2019-07-11T15:31:33Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 936,
        "repo": "sai",
        "latestReview_at": "2019-07-11T16:26:03Z",
        "latestReview_author": "michaelli10",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-02T16:00:29Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-08T11:20:07Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-08T11:20:19Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-09T00:03:43Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-09T06:35:55Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-09T06:45:23Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-09T15:47:22Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-09T15:57:58Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-10T05:49:58Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-10T05:52:51Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-10T21:28:17Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-10T21:30:49Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-11T06:22:51Z",
        "review_author": "mdak1909"
    },
    {
        "number": 935,
        "repo": "sai",
        "review_at": "2019-07-11T18:21:27Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 935,
        "repo": "sai",
        "latestReview_at": "2019-07-11T18:21:27Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 934,
        "repo": "sai",
        "comment_at": "2019-06-19T21:59:51Z",
        "comment_author": "lguohan",
        "comment_body": "can you provide the test log?"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-05-07T12:15:37Z",
        "review_author": "atitjain"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-05-13T05:39:39Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-05-13T06:00:51Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-02T01:39:07Z",
        "review_author": "itaibaz"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-03T06:28:57Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-08T20:34:46Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-08T21:13:01Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-09T06:22:16Z",
        "review_author": "AfraMariyam"
    },
    {
        "number": 934,
        "repo": "sai",
        "review_at": "2019-07-09T15:52:44Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 934,
        "repo": "sai",
        "latestReview_at": "2019-07-02T01:39:07Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 934,
        "repo": "sai",
        "latestReview_at": "2019-05-07T12:15:37Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 934,
        "repo": "sai",
        "latestReview_at": "2019-07-09T15:52:44Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 934,
        "repo": "sai",
        "latestReview_at": "2019-07-03T06:28:57Z",
        "latestReview_author": "chitra-raghavan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 933,
        "repo": "sai",
        "comment_at": "2019-07-02T17:15:12Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-05-13T06:38:26Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-05-13T07:01:25Z",
        "review_author": "kattamamatha"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-05-13T07:01:48Z",
        "review_author": "kattamamatha"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-02T01:39:47Z",
        "review_author": "itaibaz"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-03T06:23:44Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-08T20:36:54Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-08T21:23:27Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-09T12:28:49Z",
        "review_author": "kattamamatha"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-09T12:29:02Z",
        "review_author": "kattamamatha"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-09T12:29:15Z",
        "review_author": "kattamamatha"
    },
    {
        "number": 933,
        "repo": "sai",
        "review_at": "2019-07-09T15:53:44Z",
        "review_author": "MELLANOX-zhichenr"
    },
    {
        "number": 933,
        "repo": "sai",
        "latestReview_at": "2019-07-02T01:39:47Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 933,
        "repo": "sai",
        "latestReview_at": "2019-07-09T15:53:44Z",
        "latestReview_author": "MELLANOX-zhichenr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 933,
        "repo": "sai",
        "latestReview_at": "2019-07-03T06:23:44Z",
        "latestReview_author": "chitra-raghavan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 929,
        "repo": "sai",
        "review_at": "2019-03-19T09:05:32Z",
        "review_author": "atitjain"
    },
    {
        "number": 929,
        "repo": "sai",
        "review_at": "2019-03-19T13:19:17Z",
        "review_author": "kcudnik"
    },
    {
        "number": 929,
        "repo": "sai",
        "review_at": "2019-03-19T19:49:03Z",
        "review_author": "itaibaz"
    },
    {
        "number": 929,
        "repo": "sai",
        "review_at": "2019-05-14T17:25:36Z",
        "review_author": "lguohan"
    },
    {
        "number": 929,
        "repo": "sai",
        "latestReview_at": "2019-03-19T09:05:32Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 929,
        "repo": "sai",
        "latestReview_at": "2019-05-14T17:25:36Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 929,
        "repo": "sai",
        "latestReview_at": "2019-03-19T13:19:17Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-19T09:01:58Z",
        "review_author": "atitjain"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-19T13:18:44Z",
        "review_author": "kcudnik"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-28T00:08:41Z",
        "review_author": "yxieca"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-28T00:09:57Z",
        "review_author": "yxieca"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-28T01:28:10Z",
        "review_author": "kcudnik"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-03-28T15:47:46Z",
        "review_author": "yxieca"
    },
    {
        "number": 928,
        "repo": "sai",
        "review_at": "2019-04-02T22:06:57Z",
        "review_author": "kcudnik"
    },
    {
        "number": 928,
        "repo": "sai",
        "latestReview_at": "2019-03-19T09:01:58Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 928,
        "repo": "sai",
        "latestReview_at": "2019-04-02T22:06:57Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 925,
        "repo": "sai",
        "review_at": "2019-05-15T01:55:24Z",
        "review_author": "prsunny"
    },
    {
        "number": 925,
        "repo": "sai",
        "latestReview_at": "2019-05-15T01:55:24Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-03-14T09:47:47Z",
        "review_author": "atitjain"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-03-18T11:34:47Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-05-14T00:56:49Z",
        "review_author": "prsunny"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-05-22T11:47:01Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-05-22T11:47:11Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-05-22T11:47:21Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 924,
        "repo": "sai",
        "review_at": "2019-05-23T23:33:58Z",
        "review_author": "prsunny"
    },
    {
        "number": 924,
        "repo": "sai",
        "latestReview_at": "2019-03-14T09:47:47Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 924,
        "repo": "sai",
        "latestReview_at": "2019-05-23T23:33:58Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 923,
        "repo": "sai",
        "review_at": "2019-02-28T17:42:43Z",
        "review_author": "kcudnik"
    },
    {
        "number": 923,
        "repo": "sai",
        "latestReview_at": "2019-02-28T17:42:43Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-14T08:50:21Z",
        "review_author": "atitjain"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-14T20:29:44Z",
        "review_author": "itaibaz"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-18T11:43:16Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-18T13:58:44Z",
        "review_author": "atitjain"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-18T22:45:36Z",
        "review_author": "itaibaz"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-03-28T14:23:02Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 921,
        "repo": "sai",
        "review_at": "2019-05-10T20:27:58Z",
        "review_author": "prsunny"
    },
    {
        "number": 921,
        "repo": "sai",
        "latestReview_at": "2019-03-18T22:45:36Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 921,
        "repo": "sai",
        "latestReview_at": "2019-03-18T13:58:44Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 921,
        "repo": "sai",
        "latestReview_at": "2019-05-10T20:27:58Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-02-25T23:35:33Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T17:53:09Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T17:54:03Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T17:54:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T17:55:31Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T18:03:12Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-12T18:10:12Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-13T09:07:08Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-13T09:07:25Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-13T09:08:19Z",
        "review_author": "chitra-raghavan"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-03-15T15:10:06Z",
        "review_author": "atitjain"
    },
    {
        "number": 916,
        "repo": "sai",
        "review_at": "2019-04-24T22:37:36Z",
        "review_author": "lguohan"
    },
    {
        "number": 916,
        "repo": "sai",
        "latestReview_at": "2019-03-15T15:10:06Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 916,
        "repo": "sai",
        "latestReview_at": "2019-04-24T22:37:36Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 913,
        "repo": "sai",
        "comment_at": "2019-01-28T16:08:05Z",
        "comment_author": "kcudnik",
        "comment_body": "ERROR: SAI_OBJECT_TYPE_TABLE_VNET_ENTRY is not defined in OBJTOAPIMAP, missing sai_XXX_api_t declaration?\r\nERROR: SAI_OBJECT_TYPE_TABLE_TUNNEL_ROUTE_ENTRY is not defined in OBJTOAPIMAP, missing sai_XXX_api_t declaration?\r\n\r\nseems like metadata is not picking up object types from sai_bmtor_api_t, let me take a look whats going on"
    },
    {
        "number": 913,
        "repo": "sai",
        "comment_at": "2019-01-28T16:39:02Z",
        "comment_author": "kcudnik",
        "comment_body": "ah yes, you changed object names, then it works, just you have to add LPM to acronyms list"
    },
    {
        "number": 913,
        "repo": "sai",
        "comment_at": "2019-01-28T16:42:03Z",
        "comment_author": "kcudnik",
        "comment_body": "WARN: experimental object SAI_OBJECT_TYPE_TABLE_BITMAP_CLASSIFICATION_ENTRY not present on any object list (eg. VLAN_MEMBER is present on SAI_VLAN_ATTR_MEMBER_LIST)\r\nWARN: experimental object SAI_OBJECT_TYPE_TABLE_BITMAP_ROUTER_ENTRY not present on any object list (eg. VLAN_MEMBER is present on SAI_VLAN_ATTR_MEMBER_LIST)\r\n\r\nconsider adding iterator attributes for SAI_OBJECT_TYPE_TABLE_BITMAP_CLASSIFICATION_ENTRY  and SAI_OBJECT_TYPE_TABLE_BITMAP_ROUTER_ENTRY \r\n\r\nfor SAI_OBJECT_TYPE_TABLE_BITMAP_CLASSIFICATION_ENTRY  there should be attribute in router_interface object, like \"classification_entries\" readonly that will return all clasificaiton entries for this router_interaface\r\n\r\nfor TABLE_BITMAP_ROUTER_ENTRY i think you could skip, since many object could be set on that"
    },
    {
        "number": 913,
        "repo": "sai",
        "review_at": "2019-01-28T16:42:14Z",
        "review_author": "kcudnik"
    },
    {
        "number": 913,
        "repo": "sai",
        "review_at": "2019-01-29T18:31:18Z",
        "review_author": "lguohan"
    },
    {
        "number": 913,
        "repo": "sai",
        "latestReview_at": "2019-01-29T18:31:18Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 913,
        "repo": "sai",
        "latestReview_at": "2019-01-28T16:42:14Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 912,
        "repo": "sai",
        "review_at": "2019-01-19T09:04:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 912,
        "repo": "sai",
        "review_at": "2019-01-23T03:13:13Z",
        "review_author": "prsunny"
    },
    {
        "number": 912,
        "repo": "sai",
        "latestReview_at": "2019-01-19T09:04:28Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 912,
        "repo": "sai",
        "latestReview_at": "2019-01-23T03:13:13Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 910,
        "repo": "sai",
        "review_at": "2019-01-17T12:49:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 910,
        "repo": "sai",
        "latestReview_at": "2019-01-17T12:49:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 909,
        "repo": "sai",
        "comment_at": "2019-01-11T00:26:08Z",
        "comment_author": "marian-pritsak",
        "comment_body": "@lguohan can you review?"
    },
    {
        "number": 909,
        "repo": "sai",
        "review_at": "2019-01-14T14:46:40Z",
        "review_author": "kcudnik"
    },
    {
        "number": 909,
        "repo": "sai",
        "latestReview_at": "2019-01-14T14:46:40Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 907,
        "repo": "sai",
        "comment_at": "2019-01-09T10:02:03Z",
        "comment_author": "kcudnik",
        "comment_body": " ASSERT FAILED (on line 445): SAI_PORT_ATTR_SERDES_PREEMPHASIS: expected default value, but none provided\r\n\r\ndefault for list should be \"empty\""
    },
    {
        "number": 907,
        "repo": "sai",
        "comment_at": "2019-01-09T16:36:43Z",
        "comment_author": "kcudnik",
        "comment_body": "allowing to set t o internal: #908 "
    },
    {
        "number": 907,
        "repo": "sai",
        "review_at": "2019-01-09T17:03:13Z",
        "review_author": "lguohan"
    },
    {
        "number": 907,
        "repo": "sai",
        "review_at": "2019-01-09T17:23:49Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 907,
        "repo": "sai",
        "review_at": "2019-01-14T14:47:17Z",
        "review_author": "kcudnik"
    },
    {
        "number": 907,
        "repo": "sai",
        "review_at": "2019-01-31T22:51:16Z",
        "review_author": "tushar-ty"
    },
    {
        "number": 907,
        "repo": "sai",
        "latestReview_at": "2019-01-09T17:03:13Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 907,
        "repo": "sai",
        "latestReview_at": "2019-01-31T22:51:16Z",
        "latestReview_author": "tushar-ty",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 907,
        "repo": "sai",
        "latestReview_at": "2019-01-14T14:47:17Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 905,
        "repo": "sai",
        "review_at": "2019-01-04T20:03:57Z",
        "review_author": "svc-acs"
    },
    {
        "number": 905,
        "repo": "sai",
        "latestReview_at": "2019-01-04T20:03:57Z",
        "latestReview_author": "svc-acs",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-07T09:03:44Z",
        "comment_author": "kcudnik",
        "comment_body": "This PR contains some havy changes, was that already discussed on SAI meeting or is it just proposal?"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-07T14:45:26Z",
        "comment_author": "JaiOCP",
        "comment_body": "This is part of an approved spec. Please contact Xin for more questions.\n\nRegards,\n-Jai\n\n\n> On Oct 7, 2018, at 2:03 AM, Kamil Cudnik <notifications@github.com> wrote:\n> \n> This PR contains some havy changes, was that already discussed on SAI meeting or is it just proposal?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-10T08:13:32Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hey,\r\n\r\ntypedef void (*sai_tam_event_notification_fn)(\r\n\r\n\r\n\r\n        _In_ sai_object_id_t tam_event_id,\r\n\r\n\r\n        _In_ sai_size_t buffer_size,\r\n\r\n\r\n        _In_ const void *buffer,\r\n\r\n\r\n        _In_ uint32_t attr_count,\r\n\r\n\r\n        _In_ const sai_attribute_t *attr_list);\r\n\r\n\r\nFunction is still present, so automatically sai_serialize is generated from headers, please look ad the file:\r\n\r\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1189\r\n\r\nand add manually test for tam notification, since we want need to cover all notification serialization (modify removed tests)\r\n\r\nFrom: Jai Kumar <jai.kumar@broadcom.com>\r\nSent: Wednesday, October 10, 2018 00:03\r\nTo: opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com>\r\nCc: Author <author@noreply.github.com>; Kamil Cudnik <kcudnik@microsoft.com>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nHi Kamil,\r\n\r\nsai_tam_event_notification_fn() is changed to use opaque buffer (serialized as GPB binary encoded) hence the test case which uses \u201ctypedef struct _sai_tam_threshold_breach_event_t\u201d is not applicable.\r\nFor this reason I have removed this test case.\r\n\r\nRegards,\r\n-Jai\r\n\r\nFrom: Kamil Cudnik <notifications@github.com>\r\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\r\nDate: Tuesday, October 9, 2018 at 8:11 AM\r\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\r\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\n\r\n@kcudnik requested changes on this pull request.\r\n\r\n________________________________\r\n\r\nIn meta/saiserializetest.c<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23discussion_r223743810&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109190387&sdata=JgznU5OKzhnsT3rmq4389NmGRADZWNY45M3mid6AOww%3D&reserved=0>:\r\n\r\n> @@ -1236,21 +1236,6 @@ void test_serialize_notifications()\r\n\r\n     res = sai_serialize_switch_state_change_notification(buf, switch_id, SAI_SWITCH_OPER_STATUS_UP);\r\n\r\n     ret = \"{\\\"switch_id\\\":\\\"oid:0x123abc\\\",\\\"switch_oper_status\\\":\\\"SAI_SWITCH_OPER_STATUS_UP\\\"}\";\r\n\r\n     ASSERT_STR_EQ(buf, ret, res);\r\n\r\n-\r\n\r\ntam_event_notify attribute and notification is still present in the switch, please bring back those tests and correct them to pass\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23pullrequestreview-162944894&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109200396&sdata=tVaDtkuWLCfQRHLibVwSw866YT9Tum1rGkKYRioC0cE%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAoUjrZiGSNut4Q4Z0jBBRBY480FFkcWEks5ujLyTgaJpZM4W-3mT&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109200396&sdata=4HtG12leyDEiGvmdpZLyoxAUyiUYz4y8uPVA%2FGfKoQY%3D&reserved=0>.\r\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-10T08:14:17Z",
        "comment_author": "JaiOCP",
        "comment_body": "Test case should be similar to this one:\r\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1214\r\n\r\n\r\nFrom: Kamil Cudnik\r\nSent: Wednesday, October 10, 2018 10:13\r\nTo: 'Jai Kumar' <jai.kumar@broadcom.com>; opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com>\r\nCc: Author <author@noreply.github.com>\r\nSubject: RE: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nHey,\r\n\r\ntypedef void (*sai_tam_event_notification_fn)(\r\n\r\n\r\n\r\n\r\n        _In_ sai_object_id_t tam_event_id,\r\n\r\n\r\n        _In_ sai_size_t buffer_size,\r\n\r\n\r\n        _In_ const void *buffer,\r\n\r\n\r\n        _In_ uint32_t attr_count,\r\n\r\n\r\n        _In_ const sai_attribute_t *attr_list);\r\n\r\n\r\nFunction is still present, so automatically sai_serialize is generated from headers, please look ad the file:\r\n\r\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1189\r\n\r\nand add manually test for tam notification, since we want need to cover all notification serialization (modify removed tests)\r\n\r\nFrom: Jai Kumar <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>\r\nSent: Wednesday, October 10, 2018 00:03\r\nTo: opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Author <author@noreply.github.com<mailto:author@noreply.github.com>>; Kamil Cudnik <kcudnik@microsoft.com<mailto:kcudnik@microsoft.com>>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nHi Kamil,\r\n\r\nsai_tam_event_notification_fn() is changed to use opaque buffer (serialized as GPB binary encoded) hence the test case which uses \u201ctypedef struct _sai_tam_threshold_breach_event_t\u201d is not applicable.\r\nFor this reason I have removed this test case.\r\n\r\nRegards,\r\n-Jai\r\n\r\nFrom: Kamil Cudnik <notifications@github.com<mailto:notifications@github.com>>\r\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\r\nDate: Tuesday, October 9, 2018 at 8:11 AM\r\nTo: opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Jai Kumar <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>, Author <author@noreply.github.com<mailto:author@noreply.github.com>>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\n\r\n@kcudnik requested changes on this pull request.\r\n\r\n________________________________\r\n\r\nIn meta/saiserializetest.c<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23discussion_r223743810&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109190387&sdata=JgznU5OKzhnsT3rmq4389NmGRADZWNY45M3mid6AOww%3D&reserved=0>:\r\n\r\n> @@ -1236,21 +1236,6 @@ void test_serialize_notifications()\r\n\r\n     res = sai_serialize_switch_state_change_notification(buf, switch_id, SAI_SWITCH_OPER_STATUS_UP);\r\n\r\n     ret = \"{\\\"switch_id\\\":\\\"oid:0x123abc\\\",\\\"switch_oper_status\\\":\\\"SAI_SWITCH_OPER_STATUS_UP\\\"}\";\r\n\r\n     ASSERT_STR_EQ(buf, ret, res);\r\n\r\n-\r\n\r\ntam_event_notify attribute and notification is still present in the switch, please bring back those tests and correct them to pass\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23pullrequestreview-162944894&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109200396&sdata=tVaDtkuWLCfQRHLibVwSw866YT9Tum1rGkKYRioC0cE%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAoUjrZiGSNut4Q4Z0jBBRBY480FFkcWEks5ujLyTgaJpZM4W-3mT&data=02%7C01%7Ckcudnik%40microsoft.com%7Cf12eec5063b04194b30e08d62e330ba5%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747194109200396&sdata=4HtG12leyDEiGvmdpZLyoxAUyiUYz4y8uPVA%2FGfKoQY%3D&reserved=0>.\r\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-10T20:00:54Z",
        "comment_author": "JaiOCP",
        "comment_body": "Thanks for the pointer.\n\n \n\nI have updated the test case similar to sai_serialize_packet_event_notification. \n\n \n\nCommit has been done. Please review.\n\nRegards,\n\n-Jai\n\n \n\nFrom: Kamil Cudnik <kcudnik@microsoft.com>\nDate: Wednesday, October 10, 2018 at 1:14 AM\nTo: Jai Kumar <jai.kumar@broadcom.com>, opencomputeproject/SAI <reply@reply.github.com>, opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Author <author@noreply.github.com>\nSubject: RE: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nTest case should be similar to this one:\n\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1214\n\n \n\n \n\nFrom: Kamil Cudnik \nSent: Wednesday, October 10, 2018 10:13\nTo: 'Jai Kumar' <jai.kumar@broadcom.com>; opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Author <author@noreply.github.com>\nSubject: RE: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nHey,\n\n \n\ntypedef void (*sai_tam_event_notification_fn)( \n        _In_ sai_object_id_t tam_event_id,\n        _In_ sai_size_t buffer_size,\n        _In_ const void *buffer,\n        _In_ uint32_t attr_count,\n        _In_ const sai_attribute_t *attr_list);\n\n \n\nFunction is still present, so automatically sai_serialize is generated from headers, please look ad the file:\n\n \n\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1189\n\n \n\nand add manually test for tam notification, since we want need to cover all notification serialization (modify removed tests)\n\n \n\nFrom: Jai Kumar <jai.kumar@broadcom.com> \nSent: Wednesday, October 10, 2018 00:03\nTo: opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Author <author@noreply.github.com>; Kamil Cudnik <kcudnik@microsoft.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nHi Kamil,\n\n \n\nsai_tam_event_notification_fn() is changed to use opaque buffer (serialized as GPB binary encoded) hence the test case which uses \u201ctypedef struct _sai_tam_threshold_breach_event_t\u201d is not applicable. \n\nFor this reason I have removed this test case.\n\n \n\nRegards,\n\n-Jai\n\n \n\nFrom: Kamil Cudnik <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, October 9, 2018 at 8:11 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@kcudnik requested changes on this pull request.\n\nIn meta/saiserializetest.c:\n> @@ -1236,21 +1236,6 @@ void test_serialize_notifications()\n     res = sai_serialize_switch_state_change_notification(buf, switch_id, SAI_SWITCH_OPER_STATUS_UP);\n     ret = \"{\\\"switch_id\\\":\\\"oid:0x123abc\\\",\\\"switch_oper_status\\\":\\\"SAI_SWITCH_OPER_STATUS_UP\\\"}\";\n     ASSERT_STR_EQ(buf, ret, res);\n-\ntam_event_notify attribute and notification is still present in the switch, please bring back those tests and correct them to pass\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-10T21:00:45Z",
        "comment_author": "JaiOCP",
        "comment_body": "Approved on the code side\r\n\r\nFrom: Jai Kumar <jai.kumar@broadcom.com>\r\nSent: Wednesday, October 10, 2018 22:01\r\nTo: Kamil Cudnik <kcudnik@microsoft.com>; opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com>\r\nCc: Author <author@noreply.github.com>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nThanks for the pointer.\r\n\r\nI have updated the test case similar to sai_serialize_packet_event_notification.\r\n\r\nCommit has been done. Please review.\r\nRegards,\r\n-Jai\r\n\r\nFrom: Kamil Cudnik <kcudnik@microsoft.com<mailto:kcudnik@microsoft.com>>\r\nDate: Wednesday, October 10, 2018 at 1:14 AM\r\nTo: Jai Kumar <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>, opencomputeproject/SAI <reply@reply.github.com>, opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Author <author@noreply.github.com<mailto:author@noreply.github.com>>\r\nSubject: RE: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nTest case should be similar to this one:\r\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1214<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fblob%2F5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d%2Fmeta%2Fsaiserializetest.c%23L1214&data=02%7C01%7Ckcudnik%40microsoft.com%7C97829dec369e47718c7908d62eeb149d%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747984541166112&sdata=E03ka55WOX6X7cC9hdVLbDT9GQPwgEBRrSH%2FOiqu7LM%3D&reserved=0>\r\n\r\n\r\nFrom: Kamil Cudnik\r\nSent: Wednesday, October 10, 2018 10:13\r\nTo: 'Jai Kumar' <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>; opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Author <author@noreply.github.com<mailto:author@noreply.github.com>>\r\nSubject: RE: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nHey,\r\n\r\ntypedef void (*sai_tam_event_notification_fn)(\r\n\r\n\r\n\r\n\r\n        _In_ sai_object_id_t tam_event_id,\r\n\r\n\r\n        _In_ sai_size_t buffer_size,\r\n\r\n\r\n        _In_ const void *buffer,\r\n\r\n\r\n        _In_ uint32_t attr_count,\r\n\r\n\r\n        _In_ const sai_attribute_t *attr_list);\r\n\r\n\r\nFunction is still present, so automatically sai_serialize is generated from headers, please look ad the file:\r\n\r\nhttps://github.com/opencomputeproject/SAI/blob/5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d/meta/saiserializetest.c#L1189<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fblob%2F5d8491d386f0ab8cdbf8119eec4cb6201ca37e8d%2Fmeta%2Fsaiserializetest.c%23L1189&data=02%7C01%7Ckcudnik%40microsoft.com%7C97829dec369e47718c7908d62eeb149d%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747984541166112&sdata=cmmgNC3YOxT%2FryYQW5NqIciSC4FxWCQ%2FdrffPKtxEEA%3D&reserved=0>\r\n\r\nand add manually test for tam notification, since we want need to cover all notification serialization (modify removed tests)\r\n\r\nFrom: Jai Kumar <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>\r\nSent: Wednesday, October 10, 2018 00:03\r\nTo: opencomputeproject/SAI <reply@reply.github.com>; opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Author <author@noreply.github.com<mailto:author@noreply.github.com>>; Kamil Cudnik <kcudnik@microsoft.com<mailto:kcudnik@microsoft.com>>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\nHi Kamil,\r\n\r\nsai_tam_event_notification_fn() is changed to use opaque buffer (serialized as GPB binary encoded) hence the test case which uses \u201ctypedef struct _sai_tam_threshold_breach_event_t\u201d is not applicable.\r\nFor this reason I have removed this test case.\r\n\r\nRegards,\r\n-Jai\r\n\r\nFrom: Kamil Cudnik <notifications@github.com<mailto:notifications@github.com>>\r\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\r\nDate: Tuesday, October 9, 2018 at 8:11 AM\r\nTo: opencomputeproject/SAI <SAI@noreply.github.com<mailto:SAI@noreply.github.com>>\r\nCc: Jai Kumar <jai.kumar@broadcom.com<mailto:jai.kumar@broadcom.com>>, Author <author@noreply.github.com<mailto:author@noreply.github.com>>\r\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\r\n\r\n\r\n@kcudnik requested changes on this pull request.\r\n\r\n________________________________\r\n\r\nIn meta/saiserializetest.c<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23discussion_r223743810&data=02%7C01%7Ckcudnik%40microsoft.com%7C97829dec369e47718c7908d62eeb149d%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747984541176117&sdata=il5NG3Gps7NsSsZaUzTGjUbAJx7519F8TZXXS2BxEG8%3D&reserved=0>:\r\n\r\n> @@ -1236,21 +1236,6 @@ void test_serialize_notifications()\r\n\r\n     res = sai_serialize_switch_state_change_notification(buf, switch_id, SAI_SWITCH_OPER_STATUS_UP);\r\n\r\n     ret = \"{\\\"switch_id\\\":\\\"oid:0x123abc\\\",\\\"switch_oper_status\\\":\\\"SAI_SWITCH_OPER_STATUS_UP\\\"}\";\r\n\r\n     ASSERT_STR_EQ(buf, ret, res);\r\n\r\n-\r\n\r\ntam_event_notify attribute and notification is still present in the switch, please bring back those tests and correct them to pass\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F874%23pullrequestreview-162944894&data=02%7C01%7Ckcudnik%40microsoft.com%7C97829dec369e47718c7908d62eeb149d%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747984541176117&sdata=1SFZxEWbh0frWIOi5B882mNjNvQ4gllLXpSYscLNkxE%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAoUjrZiGSNut4Q4Z0jBBRBY480FFkcWEks5ujLyTgaJpZM4W-3mT&data=02%7C01%7Ckcudnik%40microsoft.com%7C97829dec369e47718c7908d62eeb149d%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636747984541186126&sdata=yIqQIsALt%2FoduSHbWsmi5A6CSh0zbPW05OTk3zRzDJE%3D&reserved=0>.\r\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-27T09:29:56Z",
        "comment_author": "kcudnik",
        "comment_body": "error is showed up since you removed stats_t from TAM, you will need to update saisanitycheck.c \"count > 12\" line"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-27T10:02:22Z",
        "comment_author": "kcudnik",
        "comment_body": "test this please"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-27T17:16:05Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hi Kamil,\n\nI tried running the make in meta directory and do not see this error.\n\nWhat tool should I run to verify it in my sandbox?\n\nRegards,\n-Jai\n\n\n> On Oct 27, 2018, at 3:02 AM, Kamil Cudnik <notifications@github.com> wrote:\n> \n> test this please\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-29T17:01:07Z",
        "comment_author": "kcudnik",
        "comment_body": "I already fixed it :) and maybe you have outdated branch tried to rebase/merge master ?"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-10-29T17:18:21Z",
        "comment_author": "JaiOCP",
        "comment_body": "Thanks Kamil. Appreciate it.\n\n \n\nFrom: Kamil Cudnik <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Monday, October 29, 2018 at 10:05 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nI already fixed it :) and maybe you have outdated branch tried to rebase/merge master ?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-13T18:03:39Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hi Mickey,\n\n \n\nThanks for reviewing the diffs.\n\nMost of your comments are about IFA/OAM API and attributes. Here is what we discussed about it and this spec before\nInitial thinking was to remove the IFA/OAM API and attributes. The changes are too intrusive and need to fixed in a followup PR anyways so the suggestion was to capture in the document that what APIs are not complete and in what priority they will be addressed in the followup commits. This has been done and document is checked in with updates. (Please see last meeting minutes)\nRegarding your comment about experimental. Origin of this spec is in to come up with a single consistent generic framework in lieu of chip specific (TAM 1.0 and DTEl) implementations. Team has spent considerable \u00a0amount of time iterating over it, refining it and plan is to push it as a single standard method of doing telemetry in SAI.\n \n\nRegards,\n\n-Jai\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Wednesday, November 7, 2018 at 9:01 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel requested changes on this pull request.\n\nThere has been a lot of good progress made, particularly around port stats, queue stats, and get APIs. However, the proposed scope of the TAM 2 project is much wider than that. A large part of this functionality has either not been delivered or has only been partially developed.\n\nI see two paths forward:\nIf it is important to get some functionality approved sooner rather than later, then incomplete functionality such as probes / OAM and flows should be removed entirely from this proposal. They can always be added in again when they are more complete.\nIf it is desired to put a stake in the ground with the understanding that further development is required and things may change, then at most a status of experimental can be agreed to at this time.\nIn inc/saitam.h:\n>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *\n-\u00a0\u00a0\u00a0\u00a0 * Example: SAI_INGRESS_PRIORITY_GROUP_STAT_CURR_OCCUPANCY_BYTES.\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_list_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_PROBE\n+\u00a0\u00a0\u00a0\u00a0 * @default empty\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_ATTR_PROBE_OBJECTS_LIST,\nThe TAM probe / OAM functionality is incomplete, needs to be reworked. This should be removed until a more complete proposal is presented.\n\nIn inc/saitam.h:\n>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _In_ uint32_t attr_count,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _Inout_ sai_attribute_t *attr_list);\n \n\u00a0/**\n- * @brief TAM Statistic\n- *\n- * Identifies a specific counter within the SAI object hierarchy\n- * and provides the current value of the counter.\n+ * @brief IFA header Object Attributes\nWhy are there attributes and APIs defined for a proprietary header format?\n\nDefining dataplane telemetry contents by header seems overly specific to synthetic probes, and does not address how dataplane telemetry can be applied to in-situ / inband traffic.\n\nThis should be removed until a more complete proposal is presented.\n\nIn inc/saitam.h:\n>\u00a0 \n\u00a0/**\n- * @brief TAM Threshold Breach Event notification\n+ * @brief IFA Probe Object\nWhy are probes specific to the proprietary IFA format?\n\nThere does not seem to be anything addressing functionality beyond header contents?\nWhen are probes sent?\nDue to what triggers?\nHow often?\n\nWhat about OAM functionality beyond probes?\n\nThis should be removed until a more complete proposal is presented.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_FABRIC,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TAM\n+\u00a0\u00a0\u00a0 \u00a0* All the data relevant to a given flow\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_FLOW,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT TAM\n+\u00a0\u00a0\u00a0\u00a0 * All the data relevant on a per packet basis\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_INT\n+\n+} sai_tam_telemetry_type_t;\nWhen a TAM object is bound to a port and attributes are set to enable collection of port or queue stats, what should the telemetry type value be set to?\n\nIn inc/saitam.h:\n> +\n+/**\n+ * @brief TAM telemetry types supported\n+ */\n+typedef enum _sai_tam_telemetry_type_t\n+{\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Networking element TAM\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_NE,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Switch silicon TAM\n+\u00a0\u00a0\u00a0\u00a0 * All the data relevant to switch\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_SWITCH,\nThese could use further elaboration.\nWhat is the difference between NE and SWITCH?\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * Switch Identifier can be an encoded number or an IP address\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_SWITCH_IDENTIFIER,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Flow ID\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @condition SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE == SAI_TAM_TELEMETRY_TYPE_FLOW\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_ID,\nWhat does a flow ID represent?\n\nThere does not seem to be any mechanism to identify a subset of traffic for which flow reports are to be generated.\nThere is no binding to ACLs or filters, which are very commonly used to scope flow reports.\n\nThere does not seem to be a differentiation between the granularity of traffic to be captured in flow reports, e.g. IP source address 10.10.0.0/16, and the granularity at which flow statistics should be captured, for example every 5-tuple.\n\nUntil there is a proposal that addresses mainstream IPFIX use cases, all of the flow functionality should be removed.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_PROTO,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using THRIFT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_THRIFT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using JSON\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_JSON,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using INT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_INT,\nThis should really be SAI_TAM_REPORT_TYPE_DTEL, referring to the p4.org Telemetry Report specification which can apply to data plane telemetry using postcards as well as INT.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport attributes object\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_id_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_TRANSPORT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_TRANSPORT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief DSCP value\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_DSCP_VALUE,\nTelemetry can generate significant amounts of traffic. Differentiating between telemetry traffic using DSCP is needed so that some telemetry traffic can be prioritized over others. In other words, DSCP should move out of collector attributes, and instead move into TAM event attributes and TAM telemetry type attributes.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT - Switch Identifier\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * Switch Identifier can be an encoded number or an IP address\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_SWITCH_IDENTIFIER,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Flow ID\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\nWhat does mandatory mean here?\nIf all that is desired is collecting port and queue stats, then there would be no flow ID.\n\nIn inc/saitam.h:\n> +\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TCP FLAGS event\n+\u00a0\u00a0\u00a0\u00a0 * All TCP Flags are monitored for change\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_FLOW_TCPFLAG,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue depth or latency threshold event\n+\u00a0\u00a0\u00a0\u00a0 * Queue occupancy threshold\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_QUEUE_THRESHOLD,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue tail drop event\n+\u00a0\u00a0\u00a0\u00a0 * Number of packets dropped as tail drops \nWhat does mandatory mean here?\nDepending on the event type, not every event would need a threshold to be defined.\n\nIn data/TAM/sai_tam_event.proto:\n> + * to Broadcom Limited and/or its subsidiaries.\n+ \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ \n+ * You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ \n+syntax = \"proto2\";\nWhy are we using proto2 when most new proposals have moved on to proto3?\n\nIn data/TAM/sai_tam_port.proto:\n> +\u00a0\u00a0\u00a0 optional string if_admin_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 10;\n+\n+\u00a0\u00a0\u00a0 // Interface operational status\n+\u00a0\u00a0\u00a0 optional string if_op_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 11;\n+\n+\u00a0\u00a0\u00a0 // number of carrier transitions on this interface\n+\u00a0\u00a0\u00a0 optional uint64 if_transitions\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 12 [(telemetry_options).is_counter = true]; \n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifLastChange object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifLastChange\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 13;\n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifHighSpeed object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifHighSpeed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 14;\n+\n+\u00a0\u00a0\u00a0 repeated QueueStats egress_queue_info\u00a0 = 15;\u00a0\u00a0\u00a0 // egress queue information\n+\u00a0\u00a0\u00a0 repeated QueueStats ingress_queue_info = 16;\u00a0\u00a0\u00a0 // ingress queue information\nWhen we have messages like this with many attributes, it is likely that the list will be incomplete. Moreover different implementations may want to extend this list in different ways. There should be a more flexible way to extend the contents.\n\nIn proto2, extensions can be used to achieve this.\n\nIn proto3, extensions have been replaced by the Any type, which is more flexible.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * @type sai_tam_telemetry_type_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_ONLY\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE = SAI_TAM_TEL_TYPE_ATTR_START,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT - Template Id\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * Template id indicates the supported metadata header.\n+\u00a0\u00a0\u00a0\u00a0 * Device can support one or more template IDs\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_TEMPLATE_ID,\nWhat is this? Needs more description.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Duration in Milliseconds\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_int32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_DURATION,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Size in Kilo Bytes\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_int32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_SIZE,\nWhat does this do? Needs more description.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport type\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_tam_transport_type_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_ONLY\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_TRANSPORT_TYPE = SAI_TAM_TRANSPORT_ATTR_START,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 31337\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_SRC_PORT,\nThere can be significant amounts of telemetry traffic generated. The source port should be used for entropy rather than being statically configured, allowing for telemetry traffic to be delivered over multiple paths.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-13T21:22:13Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "@JaiOCP \r\n\r\n> Hi Mickey, Thanks for reviewing the diffs. Most of your comments are about IFA/OAM API and attributes. Here is what we discussed about it and this spec before Initial thinking was to remove the IFA/OAM API and attributes. The changes are too intrusive and need to fixed in a followup PR anyways so the suggestion was to capture in the document that what APIs are not complete and in what priority they will be addressed in the followup commits. This has been done and document is checked in with updates. (Please see last meeting minutes) Regarding your comment about experimental. Origin of this spec is in to come up with a single consistent generic framework in lieu of chip specific (TAM 1.0 and DTEl) implementations. Team has spent considerable \u00a0amount of time iterating over it, refining it and plan is to push it as a single standard method of doing telemetry in SAI. Regards,\r\n\r\nYou focused on part of my comments, having to do with the scope and the intended status. Meanwhile the majority of the comments are still awaiting responses.\r\n\r\nA few facts about the 15 comments that I submitted:\r\n\r\n- Only 4 comments related to the scope and intended status. 3 of these had to do with IFA and probes, and 1 had to do with flows.\r\n\r\n- 4 comments were questions for clarification / elaboration. Please respond to these.\r\n\r\n- 3 comments are proposing changes. Please respond to these.\r\n\r\n- 2 comments question the mandatory status of specific attributes. Please respond to these.\r\n\r\n- 2 comments related to the use of proto2 rather than proto3, and the need for better extensibility of the .proto formats. Please respond to these.\r\n\r\nRegarding the scope and intended status, we all agreed during the last meeting that these aspects were incomplete and not ready to be finalized. I do not see why this cannot be addressed in this PR. I am fine with either:\r\n\r\n1. Driving towards standard but making sure that the parts we approve are really agreed and finalized, or\r\n\r\n2. Temporarily going with a different status, putting a stake in the ground, then progressing towards standard status once the contents have really been finalized."
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-26T20:30:39Z",
        "comment_author": "JaiOCP",
        "comment_body": "Please see inline @[Jai]\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Wednesday, November 7, 2018 at 9:01 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Author <author@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel requested changes on this pull request.\n\nThere has been a lot of good progress made, particularly around port stats, queue stats, and get APIs. However, the proposed scope of the TAM 2 project is much wider than that. A large part of this functionality has either not been delivered or has only been partially developed.\n\nI see two paths forward:\nIf it is important to get some functionality approved sooner rather than later, then incomplete functionality such as probes / OAM and flows should be removed entirely from this proposal. They can always be added in again when they are more complete.\nIf it is desired to put a stake in the ground with the understanding that further development is required and things may change, then at most a status of experimental can be agreed to at this time.\nIn inc/saitam.h:\n>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *\n-\u00a0\u00a0\u00a0\u00a0 * Example: SAI_INGRESS_PRIORITY_GROUP_STAT_CURR_OCCUPANCY_BYTES.\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_list_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_PROBE\n+\u00a0\u00a0\u00a0\u00a0 * @default empty\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_ATTR_PROBE_OBJECTS_LIST,\nThe TAM probe / OAM functionality is incomplete, needs to be reworked. This should be removed until a more complete proposal is presented.\n\n \n\n[Jai] Removed\n\nIn inc/saitam.h:\n>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _In_ uint32_t attr_count,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _Inout_ sai_attribute_t *attr_list);\n \n\u00a0/**\n- * @brief TAM Statistic\n- *\n- * Identifies a specific counter within the SAI object hierarchy\n- * and provides the current value of the counter.\n+ * @brief IFA header Object Attributes\nWhy are there attributes and APIs defined for a proprietary header format?\n\nDefining dataplane telemetry contents by header seems overly specific to synthetic probes, and does not address how dataplane telemetry can be applied to in-situ / inband traffic.\n\nThis should be removed until a more complete proposal is presented.\n\n[Jai] Removed\n\nIn inc/saitam.h:\n>\u00a0 \n\u00a0/**\n- * @brief TAM Threshold Breach Event notification\n+ * @brief IFA Probe Object\nWhy are probes specific to the proprietary IFA format?\n\nThere does not seem to be anything addressing functionality beyond header contents?\nWhen are probes sent?\nDue to what triggers?\nHow often?\n\nWhat about OAM functionality beyond probes?\n\nThis should be removed until a more complete proposal is presented.\n\n \n\n[Removed]\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_FABRIC,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TAM\n+\u00a0\u00a0\u00a0 \u00a0* All the data relevant to a given flow\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_FLOW,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT TAM\n+\u00a0\u00a0\u00a0\u00a0 * All the data relevant on a per packet basis\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_INT\n+\n+} sai_tam_telemetry_type_t;\nWhen a TAM object is bound to a port and attributes are set to enable collection of port or queue stats, what should the telemetry type value be set to?\n\n[Jai] It should be SAI_TAM_TELEMETRY_TYPE_SWITCH.\u00a0 It is captured as an example in spec Section 7.2 Step 3.\n\nIn inc/saitam.h:\n> +\n+/**\n+ * @brief TAM telemetry types supported\n+ */\n+typedef enum _sai_tam_telemetry_type_t\n+{\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Networking element TAM\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_NE,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Switch silicon TAM\n+\u00a0\u00a0\u00a0\u00a0 * All the data relevant to switch\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_SWITCH,\nThese could use further elaboration.\nWhat is the difference between NE and SWITCH?\n\n[Jai] NE (Networking Element) is a generic scope which does not cleanly fits into SWITCH scope for eg. optics/mac/macsec etc or switch interconnect in case of presence of multiple switches in a single board (for higher port density etc). I have added more comments in the code.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * Switch Identifier can be an encoded number or an IP address\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_SWITCH_IDENTIFIER,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Flow ID\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @condition SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE == SAI_TAM_TELEMETRY_TYPE_FLOW\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_ID,\nWhat does a flow ID represent?\n\nThere does not seem to be any mechanism to identify a subset of traffic for which flow reports are to be generated.\nThere is no binding to ACLs or filters, which are very commonly used to scope flow reports.\n\nThere does not seem to be a differentiation between the granularity of traffic to be captured in flow reports, e.g. IP source address 10.10.0.0/16, and the granularity at which flow statistics should be captured, for example every 5-tuple.\n\nUntil there is a proposal that addresses mainstream IPFIX use cases, all of the flow functionality should be removed.\n\n[Jai] Removed\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_PROTO,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using THRIFT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_THRIFT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using JSON\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_JSON,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Report using INT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_REPORT_TYPE_INT,\nThis should really be SAI_TAM_REPORT_TYPE_DTEL, referring to the p4.org Telemetry Report specification which can apply to data plane telemetry using postcards as well as INT.\n\n[Jai] DTel is not an IDL. There are various formats being proposed like postcard. I will make this as TYPE_P4_EXTN to reflect whatever format P4 proposes. \n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport attributes object\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_id_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_TRANSPORT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_TRANSPORT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief DSCP value\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_DSCP_VALUE,\nTelemetry can generate significant amounts of traffic. Differentiating between telemetry traffic using DSCP is needed so that some telemetry traffic can be prioritized over others. In other words, DSCP should move out of collector attributes, and instead move into TAM event attributes and TAM telemetry type attributes.\n\n[Jai] Assigning each data set a DSCP value is not typical deployment. Typically collector subsystem is scaled differently (look at openconfig telemetry semantics). Each session (aka virtual collector or session can be a collector) is assigned a DSCP value for all the telemetry traffic carried over that session. Multiple sessions (or collectors) are provisioned to carry different class of data. Typically Low/Medium/High Frequency class collectors/sessions are configured. High frequency data like queue stats, medium frequency data like flow stats, low frequency like ports stats. Events are usually send on a stateful channel and need not have a different DSCP value. If events are send on a UDP channel then even assigning them high DSCP value doesn\u2019t guarantee the delivery,\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT - Switch Identifier\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * Switch Identifier can be an encoded number or an IP address\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_SWITCH_IDENTIFIER,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Flow ID\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\nWhat does mandatory mean here?\nIf all that is desired is collecting port and queue stats, then there would be no flow ID.\n\n[Jai] Removed. Flow information will be committed in next PR\n\nIn inc/saitam.h:\n> +\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TCP FLAGS event\n+\u00a0\u00a0\u00a0\u00a0 * All TCP Flags are monitored for change\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_FLOW_TCPFLAG,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue depth or latency threshold event\n+\u00a0\u00a0\u00a0\u00a0 * Queue occupancy threshold\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_QUEUE_THRESHOLD,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue tail drop event\n+\u00a0\u00a0\u00a0\u00a0 * Number of packets dropped as tail drops \nWhat does mandatory mean here?\nDepending on the event type, not every event would need a threshold to be defined.\n\n[Jai] It\u2019s a event_type enum. One or more events can be subscribed. Its not mandatory to subscribe to all the events.\n\nIn data/TAM/sai_tam_event.proto:\n> + * to Broadcom Limited and/or its subsidiaries.\n+ \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ \n+ * You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ \n+syntax = \"proto2\";\nWhy are we using proto2 when most new proposals have moved on to proto3?\n\n[Jai] proto3 is not backward compatible and most of collector subsystems are still at proto2.\n\nProto files will be migrated to proto3 on need basis.\n\nIn data/TAM/sai_tam_port.proto:\n> +\u00a0\u00a0\u00a0 optional string if_admin_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 10;\n+\n+\u00a0\u00a0\u00a0 // Interface operational status\n+\u00a0\u00a0\u00a0 optional string if_op_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 11;\n+\n+\u00a0\u00a0\u00a0 // number of carrier transitions on this interface\n+\u00a0\u00a0\u00a0 optional uint64 if_transitions\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 12 [(telemetry_options).is_counter = true]; \n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifLastChange object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifLastChange\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 13;\n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifHighSpeed object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifHighSpeed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 14;\n+\n+\u00a0\u00a0\u00a0 repeated QueueStats egress_queue_info\u00a0 = 15;\u00a0\u00a0\u00a0 // egress queue information\n+\u00a0\u00a0\u00a0 repeated QueueStats ingress_queue_info = 16;\u00a0\u00a0\u00a0 // ingress queue information\nWhen we have messages like this with many attributes, it is likely that the list will be incomplete. Moreover different implementations may want to extend this list in different ways. There should be a more flexible way to extend the contents.\n\n[Jai] message is extensible. More types can be added as optional. This is same in proto3 as well. Think it as union in C (without the datatype width)\n\nIn proto2, extensions can be used to achieve this.\n\nIn proto3, extensions have been replaced by the Any type, which is more flexible.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * @type sai_tam_telemetry_type_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_ONLY\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE = SAI_TAM_TEL_TYPE_ATTR_START,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief INT - Template Id\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * Template id indicates the supported metadata header.\n+\u00a0\u00a0\u00a0\u00a0 * Device can support one or more template IDs\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_INT_TEMPLATE_ID,\nWhat is this? Needs more description.\n\n[Jai] Removed this. Will bring it in with IFA/IOAM configuration semantics.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Duration in Milliseconds\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_int32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_DURATION,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Size in Kilo Bytes\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_int32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_FLOW_SIZE,\nWhat does this do? Needs more description.\n\n[Jai] Removed. Wil bring it with complete flow information. \n\nThis is Elephant/Mice classification attributes. Flows are classified as an elephant based on flow size and duration.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport type\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_tam_transport_type_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_ONLY\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_TRANSPORT_TYPE = SAI_TAM_TRANSPORT_ATTR_START,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 31337\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_SRC_PORT,\nThere can be significant amounts of telemetry traffic generated. The source port should be used for entropy rather than being statically configured, allowing for telemetry traffic to be delivered over multiple paths.\n\n[Jai] Its upto the implementor. You can create an invalid value (-1) of port and treat it as a hint for ephemeral source port.\n\n \n\nRegards,\n\n-Jai\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T21:41:08Z",
        "comment_author": "JaiOCP",
        "comment_body": "Yes, It will help. I will add those comments in the next update.\n\n \n\n-Jai\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 1:38 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> +\n+/**\n+ * @brief TAM telemetry types supported\n+ */\n+typedef enum _sai_tam_telemetry_type_t\n+{\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Networking element TAM\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_NE,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Switch silicon TAM\n+\u00a0\u00a0\u00a0\u00a0 * All the data relevant to switch\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TELEMETRY_TYPE_SWITCH,\nThe new text helps clarify NE. I am wondering if mentioning some examples would help clarify SWITCH, e.g. packet counts, byte counts, drop counts, port stats, queue stats, ...\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T22:18:12Z",
        "comment_author": "JaiOCP",
        "comment_body": "-1 == All 1s\n\nI will capture it in comment.\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 2:16 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport type\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_tam_transport_type_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_ONLY\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_TRANSPORT_TYPE = SAI_TAM_TRANSPORT_ATTR_START,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 31337\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORT_ATTR_SRC_PORT,\nThe type is sai_uint32_t so there is no (-1), but there is all 1s.\n\nIf the suggestion is that a specific value indicates that the implementation can choose whatever value it wants, potentially entropy based, then that needs to be captured in these comments where the attribute is defined.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T22:19:17Z",
        "comment_author": "JaiOCP",
        "comment_body": "I have left it commented out and kept single reference as a reminder.\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 2:02 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> @@ -1012,48 +481,11 @@ typedef enum _sai_tam_tel_type_attr_t\n\u00a0\u00a0\u00a0\u00a0 /**\n\u00a0\u00a0\u00a0\u00a0\u00a0 * @brief Flow - Flow ID\n\u00a0\u00a0\u00a0\u00a0\u00a0 *\n-\u00a0\u00a0\u00a0\u00a0 * @type sai_uint32_t\n-\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n-\u00a0\u00a0\u00a0\u00a0 * @condition SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE == SAI_TAM_TELEMETRY_TYPE_FLOW\n+\u00a0\u00a0\u00a0\u00a0 * type sai_uint32_t\n+\u00a0\u00a0\u00a0\u00a0 * flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * condition SAI_TAM_TEL_TYPE_ATTR_TAM_TELEMETRY_TYPE == SAI_TAM_TELEMETRY_TYPE_FLOW\n+\u00a0\u00a0\u00a0\u00a0 * SAI_TAM_TEL_TYPE_ATTR_FLOW_ID,\n\u00a0\u00a0\u00a0\u00a0\u00a0 */\nIt looks like some dangling text remains after removing SAI_TAM_TEL_TYPE_ATTR_FLOW_ID\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T22:19:44Z",
        "comment_author": "JaiOCP",
        "comment_body": "This needs discussion. Lets put in as a topic for Thursday meeting.\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 1:57 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport attributes object\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_id_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_TRANSPORT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_TRANSPORT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief DSCP value\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_DSCP_VALUE,\nThis is not about guaranteeing delivery, it is about prioritization between different types of telemetry traffic. As telemetry use cases and mechanisms proliferate, use of telemetry is increasing. Along with that comes an increase in the amount of telemetry traffic, which may lead to congestion.\n\nWe are defining a new mechanism here. Shouldn't we be anticipating potential problems and improving functionality, rather than looking to what has been done in the past?\n\nForcing separate TAM objects, with separate instances of the entire TAM hierarchy including binding and collectors, just to get different DSCP values in different TAM reports is more than a little unwieldy.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T22:46:45Z",
        "comment_author": "JaiOCP",
        "comment_body": "Yes, Idea is that event should always be guarded by some threshold attribute else it\u2019s just a stream of data (Events).\n\nIf an event is defined with a threshold then this attribute MUST be initialized by SAI_NULL_OBJECT_ID.\n\nI will add a comment to that intent.\n\n \n\n \n\n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 2:13 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> +\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TCP FLAGS event\n+\u00a0\u00a0\u00a0\u00a0 * All TCP Flags are monitored for change\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_FLOW_TCPFLAG,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue depth or latency threshold event\n+\u00a0\u00a0\u00a0\u00a0 * Queue occupancy threshold\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_QUEUE_THRESHOLD,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue tail drop event\n+\u00a0\u00a0\u00a0\u00a0 * Number of packets dropped as tail drops \nFor some event types, this might be null. In such cases, is the suggestion that this attribute must be created with value SAI_NULL_OBJECT_ID?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-27T22:54:36Z",
        "comment_author": "JaiOCP",
        "comment_body": "Correction..\n\n \n\nIf an event is defined WITHOUT a threshold then this attribute MUST be initialized by SAI_NULL_OBJECT_ID.\n\n \n\nFrom: Jai Kumar <jai.kumar@broadcom.com>\nDate: Tuesday, November 27, 2018 at 2:46 PM\nTo: opencomputeproject/SAI <reply@reply.github.com>, opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nYes, Idea is that event should always be guarded by some threshold attribute else it\u2019s just a stream of data (Events).\n\nIf an event is defined with a threshold then this attribute MUST be initialized by SAI_NULL_OBJECT_ID.\n\nI will add a comment to that intent.\n\n \n\n \n\n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Tuesday, November 27, 2018 at 2:13 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n> +\n+    /**\n+     * @brief Flow TCP FLAGS event\n+     * All TCP Flags are monitored for change\n+     */\n+    SAI_TAM_EVENT_TYPE_FLOW_TCPFLAG,\n+\n+    /**\n+     * @brief Queue depth or latency threshold event\n+     * Queue occupancy threshold\n+     */\n+    SAI_TAM_EVENT_TYPE_QUEUE_THRESHOLD,\n+\n+    /**\n+     * @brief Queue tail drop event\n+     * Number of packets dropped as tail drops \nFor some event types, this might be null. In such cases, is the suggestion that this attribute must be created with value SAI_NULL_OBJECT_ID?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-28T22:18:50Z",
        "comment_author": "JaiOCP",
        "comment_body": " \n\nIf you look into sai_tam_main.proto:: message(SAISwitchSensors)\n\nIt has the message defined as an extensions.\n\n \n\nmessage SAISwitchSensors {\n\n    extensions 1 to max;\n\n}\n\n \n\n \n\nWhat this means is that if a vendor wants to define a custom message, it can root it at SAISwitchSensors level and create a custom hierarchy. This is allowed.\n\n \n\nSuggestion you are making is that what if there is a only a new field which need to be added by specific vendor.\n\nAdding a new field is also allowed but proposal is that vendor MUST publish the data field as an optional field in the existing message.\n\n \n\nProblem with your suggestion is following\nMultiple vendors may define same extension value for a given data type. This will create a collision and leave the proto file unusable, unless\u2026\nUnless vendor publishes that extension in the SAI proto file and make it visible to all.\nIf it MUST publish the data field then making it as part of the message and keeping it optional is a better idea instead of forcing a range in the extension thereby limiting the extensions to a range.\n \n\nHope it explains it.\n\n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Wednesday, November 28, 2018 at 2:04 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn data/TAM/sai_tam_port.proto:\n> +\u00a0\u00a0\u00a0 optional string if_admin_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 10;\n \n+\n \n+\u00a0\u00a0\u00a0 // Interface operational status\n \n+\u00a0\u00a0\u00a0 optional string if_op_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 11;\n \n+\n \n+\u00a0\u00a0\u00a0 // number of carrier transitions on this interface\n \n+\u00a0\u00a0\u00a0 optional uint64 if_transitions\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 12 [(telemetry_options).is_counter = true]; \n \n+\n \n+\u00a0\u00a0\u00a0 // This corresponds to the ifLastChange object in the standard interface MIB\n \n+\u00a0\u00a0\u00a0 optional uint32 ifLastChange\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 13;\n \n+\n \n+\u00a0\u00a0\u00a0 // This corresponds to the ifHighSpeed object in the standard interface MIB\n \n+\u00a0\u00a0\u00a0 optional uint32 ifHighSpeed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 14;\n \n+\n \n+\u00a0\u00a0\u00a0 repeated QueueStats egress_queue_info\u00a0 = 15;\u00a0\u00a0\u00a0 // egress queue information\n \n+\u00a0\u00a0\u00a0 repeated QueueStats ingress_queue_info = 16;\u00a0\u00a0\u00a0 // ingress queue information\n \nIn most if not all of the enums specifying attributes in the SAI .h files, including all in saitam.h, a range of \"custom\" attributes are defined at the end. This allows for custom or experimental functionality to be developed, without churning the base .h files and without requiring explicit approval from the OCP SAI subproject.\n\nproto2 extensions have the same purpose, provide all the same benefits, and work in exactly the same way. A developer of custom or experimental functionality should be able to extend the Protobuf message without modifying the mainstream .proto file. proto2 extensions (or proto3 Any) enable this. With the use of extensions, custom or experimental .proto files can be defined that extend this message, without churning the base .proto files.\n\nAll that has to be done is adding at the end of each message:\n\" extensions 100 to 1000;\"\nSee https://developers.google.com/protocol-buffers/docs/proto#extensions for details.\n\nWhy wouldn't we provide the same extensibility in the Protobuf messages that we define for reporting telemetry, as we do in the SAI objects and attributes defined for configuring telemetry?\n\nConsider the following scenario:\n// This is the current proposal\nmessage InterfaceInfos {\n  // ...\n  optional QueueStats ingress_queue_info = 17;\n}\n// Experimental feature X adds a field, making its own copy of the .proto file,\n// which is bad - it should be defined in a separate .proto file.\nmessage InterfaceInfos {\n  // ...\n  optional QueueStats ingress_queue_info = 17;\n  optional VendorXType vendorX_field = 18;\n}\n// Now a new field is added to the official OCP TAM proto\nmessage InterfaceInfos {\n  // ...\n  optional QueueStats ingress_queue_info = 17;\n  optional SomeType official_field = 18;\n}\nBackward compatibility is broken and all hell breaks loose.\nBut all you needed to do was include this line in your original message:\nmessage InterfaceInfos {\n  // ...\n  optional QueueStats ingress_queue_info = 17;\n  extensions 100 to 1000;\n}\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-28T22:59:42Z",
        "comment_author": "JaiOCP",
        "comment_body": "Lets discuss this in Thursday meeting.\n\nHere is the baseline for discussion\nWe have to support proto2 \nCurrent stake in the ground is to use optional data fields.\nShall we use extensions or optional data fields is the point for discussion. \n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Wednesday, November 28, 2018 at 2:50 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn data/TAM/sai_tam_port.proto:\n> +\u00a0\u00a0\u00a0 optional string if_admin_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 10;\n+\n+\u00a0\u00a0\u00a0 // Interface operational status\n+\u00a0\u00a0\u00a0 optional string if_op_status\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 11;\n+\n+\u00a0\u00a0\u00a0 // number of carrier transitions on this interface\n+\u00a0\u00a0\u00a0 optional uint64 if_transitions\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 12 [(telemetry_options).is_counter = true]; \n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifLastChange object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifLastChange\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 13;\n+\n+\u00a0\u00a0\u00a0 // This corresponds to the ifHighSpeed object in the standard interface MIB\n+\u00a0\u00a0\u00a0 optional uint32 ifHighSpeed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 14;\n+\n+\u00a0\u00a0\u00a0 repeated QueueStats egress_queue_info\u00a0 = 15;\u00a0\u00a0\u00a0 // egress queue information\n+\u00a0\u00a0\u00a0 repeated QueueStats ingress_queue_info = 16;\u00a0\u00a0\u00a0 // ingress queue information\nThe current definition allows custom or experimental messages to be added as extensions. However, it does not allow the addition of custom or experimental fields in messages such as QueueStats, instead it requires new fields to be defined as full optional fields. While it is true that proto2 extensions can have collisions between different extensions, at least they prevent collisions between extensions and future additions to the base message. Disallowing extensions due to collisions between extensions is throwing out the baby with the bathwater. If you really want to avoid collisions between extensions, move to proto3 and use Any, which solves exactly this issue.\n\nNote also that everything you are arguing is 100% applicable in exactly the same way to the SAI .h files. Why do we have custom ranges in enums defining attributes? Those custom ranges in the enums defining attributes are just as susceptible to collisions between different custom or experimental definitions as proto2 extensions, yet the community still felt that there is sufficient value and defined the custom ranges all over the place.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-30T18:57:45Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hi Mickey,\n\n \n\nHigh level comment and more details inline.\n\n \n\nRemoval of collector instance DSCP marking is not part of the discussion (this is a requirement).\n\nDiscussion was to add your requirement of DSCP marking per data attribute.\n\nAs we discussed and understood that this is neither a usable or deployable model. Even your implementation is not correct for DTel (elevating all the data attributes to higher DSCP level in the group renders the whole purpose of marking moot)\n\n \n\nI have added your requirement irrespective of the uselessness of it just so that you can make progress on DTel.\n\nAdding DSCP marking for event as well can be done and I will add the flag.\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Thursday, November 29, 2018 at 2:19 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel requested changes on this pull request.\n\nRegarding which DSCP overrides the other, the meeting minutes originally said one thing which is what I thought was stated in the meeting. Then they changed to the opposite. The PR does not currently say anything about which DSCP overrides the other. We need to say something to clarify the behavior when both are specified.\n\nIn inc/saitam.h:\n> +\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport attributes object\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_object_id_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @objects SAI_OBJECT_TYPE_TAM_TRANSPORT\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_TRANSPORT,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief DSCP value\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_COLLECTOR_ATTR_DSCP_VALUE,\nAs discussed in the meeting, I am OK with leaving this attribute here as long as there are additional optional DSCP values in the telemetry_type and event attribute lists.\n\nHowever, I am not OK with this being MANDATORY_ON_CREATE. Instead it should be just CREATE_AND_SET.\n\n[Jai] This is a requirement. It stays are mandatory.\n\nIn inc/saitam.h:\n> +\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief NE - Collect information of networking element\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type bool\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default false\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_TEL_TYPE_ATTR_NE_ENABLE,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief DSCP value\n+\u00a0\u00a0\u00a0\u00a0 *\n+\u00a0\u00a0\u00a0\u00a0 * @type sai_uint8_t\n+\u00a0\u00a0\u00a0\u00a0 * @flags CREATE_AND_SET\n+\u00a0\u00a0\u00a0\u00a0 * @default 0\nIf this value overrides the collector DSCP value then there should not be any default value specified here.\n\n[Jai] In SAI I do not see anything optional with a default value. Tool will complain if there is not a default value of CREATE_AND_SET. If there is way please suggest.\n\nIn inc/saitam.h:\n>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 */\n-\u00a0\u00a0\u00a0 SAI_TAM_TRANSPORTER_ATTR_MONITOR_ID,\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_ATTR_THRESHOLD,\n \nPer the DSCP compromise agreed upon in the meeting, DSCP needs to be added here as well as in telemetry type.\n\n[Jai] This was not discussed but I will add it here as CREATE_AND_SET with default as \u201c0\u201d (Please see my previous comment)\n/**\n\u00a0 * @brief DSCP value\n\u00a0 *\n\u00a0 * @type sai_uint8_t\n\u00a0 * @flags CREATE_AND_SET\n\u00a0 */\n SAI_TAM_EVENT_ATTR_DSCP_VALUE,\nIn inc/saitam.h:\n> +\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Flow TCP FLAGS event\n+\u00a0\u00a0\u00a0\u00a0 * All TCP Flags are monitored for change\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_FLOW_TCPFLAG,\n+\n+\u00a0 \u00a0\u00a0/**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue depth or latency threshold event\n+\u00a0\u00a0\u00a0\u00a0 * Queue occupancy threshold\n+\u00a0\u00a0\u00a0\u00a0 */\n+\u00a0\u00a0\u00a0 SAI_TAM_EVENT_TYPE_QUEUE_THRESHOLD,\n+\n+\u00a0\u00a0\u00a0 /**\n+\u00a0\u00a0\u00a0\u00a0 * @brief Queue tail drop event\n+\u00a0\u00a0\u00a0\u00a0 * Number of packets dropped as tail drops \nThis is still awaiting the addition of a comment as agreed:\nIf an event is defined without a threshold then this attribute MUST be initialized by SAI_NULL_OBJECT_ID.\n\nPerhaps \"@allownull true\" and \"@default SAI_NULL_OBJECT_ID\" should be restored?\n\n \n\n[Jai] I have added the comment but using allownull and default as NULL object is a better idea. I will add that.\n\nIn inc/saitam.h:\n>\u00a0 \n\u00a0\u00a0\u00a0\u00a0\u00a0/**\n-\u00a0\u00a0\u00a0\u00a0 * @brief Total Number of counters supported\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 * Value of -1 can be used a hint to compute ephemeral value\nLooking up the dictionary definition of \"ephemeral\", not sure that is a strong enough hint to what this does.\n\nHow about:\nValue of -1 (all 1s) indicates that any value may be transmitted. The transmitted value may vary in different reports sent on the same transport, for example to introduce entropy in equal cost path selection.\n\n \n\n[Jai] You are looking for functionality similar to VxLAN source UDP port and the property defined for entropy is by using ephemeral port which can be either hash on multiple fields or a static value.\n\nPlease refer to IETF draft.\n\nRFC 7348 - Virtual eXtensible Local Area Network (VXLAN):\n\n \n\nDec 12, 2016 - Overlay network are provisioned as tunnels leveraging Vxlan (and associated ..... Source UDP Port (ephemeral) | Dest UDP Port = 4789 (Vxlan) \n\nRegards,\n\n-Jai\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-30T19:37:31Z",
        "comment_author": "JaiOCP",
        "comment_body": "Please look at this RFC and it mentions vxlan src UDP port as ephemeral port in the entire draft.\n\n \n\nhttps://tools.ietf.org/id/draft-saum-nvo3-pmtud-over-vxlan-04.html\n\n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Friday, November 30, 2018 at 11:14 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n>\u00a0 \n\u00a0\u00a0\u00a0\u00a0\u00a0/**\n-\u00a0\u00a0\u00a0\u00a0 * @brief Total Number of counters supported\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 * Value of -1 can be used a hint to compute ephemeral value\nQuoting from Jai's reply:\n\n[Jai] You are looking for functionality similar to VxLAN source UDP port and the property defined for entropy is by using ephemeral port which can be either hash on multiple fields or a static value.\n\nPlease refer to IETF draft.\n\nRFC 7348 - Virtual eXtensible Local Area Network (VXLAN):\n\nWe agree on the technical behavior. Where we are disagreeing is with regard to terminology. Quoting from your reference of RFC 7348:\n\nSource Port: It is recommended that the UDP source port number be calculated using a hash of fields from the inner packet -- one example being a hash of the inner Ethernet frame's headers. This is to enable a level of entropy for the ECMP/load-balancing of the VM-to-VM traffic across the VXLAN overlay. When calculating the UDP source port number in this manner, it is RECOMMENDED that the value be in the dynamic/private port range 49152-65535 [RFC6335].\n\nThere is no mention of the word \"ephemeral\" in this text. I conclude that \"ephemeral\" is your terminology, not industry standard terminology. Meanwhile the RFC 7348 text does mention \"entropy\", \"ECMP\", \"load-balancing\", all of which are industry standard terminology. We should be describing this using the industry standard terminology.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-30T20:07:54Z",
        "comment_author": "JaiOCP",
        "comment_body": "OK, If it helps I will add more generic comments (as you suggested) along with ephemeral.\n\nBut you might want to get used to term ephemeral given that it is used more frequently (btw 2016 is not recent atleast not in Tech World).\n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Friday, November 30, 2018 at 11:58 AM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\n@mickeyspiegel commented on this pull request.\n\nIn inc/saitam.h:\n>\u00a0 \n\u00a0\u00a0\u00a0\u00a0\u00a0/**\n-\u00a0\u00a0\u00a0\u00a0 * @brief Total Number of counters supported\n+\u00a0\u00a0\u00a0\u00a0 * @brief Transport src port\n+\u00a0\u00a0\u00a0\u00a0 * Value of -1 can be used a hint to compute ephemeral value\nQuoting from Jai's latest reply:\n\nPlease look at this RFC and it mentions vxlan src UDP port as ephemeral port in the entire draft.\n\nhttps://tools.ietf.org/id/draft-saum-nvo3-pmtud-over-vxlan-04.html\n\nYou are referring to a relatively recent document still in draft status, that does not deal directly with the functionality we are referring to.\n\nWhen I read the term \"ephemeral\" I had to go look it up. From the dictionary definition it was not at all obvious what behavior it was referring to. I stand by my recommendation to use industry standard terminology from your suggested reference, RFC 7348, i.e. \"entropy\" and \"ECMP\" or \"equal cost\". Everyone understands what the latter terms mean.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-30T21:45:31Z",
        "comment_author": "mickeyspiegel",
        "comment_body": "Quoting from Jai's comment:\r\n\r\n> High level comment and more details inline.\r\n\r\n> Removal of collector instance DSCP marking is not part of the discussion (this is a requirement).\r\n\r\n[Mickey] Where did this \"requirement\" come from?\r\nI can think of no good reason for setting of any DSCP value to be mandatory. Some networks run without QoS. There is no reason to force setting of DSCP in such networks.\r\n\r\n> Discussion was to add your requirement of DSCP marking per data attribute.\r\n\r\n> As we discussed and understood that this is neither a usable or deployable model. Even your implementation is not correct for DTel (elevating all the data attributes to higher DSCP level in the group renders the whole purpose of marking moot)\r\n\r\n[Mickey] It is your opinion that this is \"neither a usable or deployable model\". I certainly never agreed to any such statement.\r\n\r\nLet's dive into the case I was thinking of for elevating data attributes to a higher DSCP level. What I was thinking of was an event, specifically the case where something happens that triggers multiple events at the same time. In such a case, one report can cover all triggers/events. The question then becomes what DSCP value to use in that report. IMO selecting the highest DSCP level between all triggered events makes the most sense.\r\n\r\nLooking at the structure proposed for TAM, I see that sai_tam_event_attr_t includes SAI_TAM_EVENT_ATTR_COLLECTOR_LIST. Whether DSCP comes from the collectors in the list or is specified directly as a separate attribute in sai_tam_event_attr_t, the granularity of the association between DSCP and events is tam_event_id. My conclusion is that for events, the cases for elevating DSCP to a higher level are exactly the same, whether DSCP is specified in the collector or DSCP is specified directly in sai_tam_event_attr_t.\r\n\r\n> I have added your requirement irrespective of the uselessness of it just so that you can make progress on DTel.\r\n\r\n> Adding DSCP marking for event as well can be done and I will add the flag."
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2018-11-30T21:55:33Z",
        "comment_author": "JaiOCP",
        "comment_body": "\u201cSome networks run without QoS\u201d\n\nDSCP bits are still set. \n\nI have my set of requirements which are actual deployment. If you have further suggestions on your requirement of data attr based marking, please let me know else this review is closed from my point of view.\n\n \n\n \n\n \n\n \n\nFrom: Mickey Spiegel <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Friday, November 30, 2018 at 1:45 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nQuoting from Jai's comment:\n\nHigh level comment and more details inline.\n\nRemoval of collector instance DSCP marking is not part of the discussion (this is a requirement).\n\n[Mickey] Where did this \"requirement\" come from?\nI can think of no good reason for setting of any DSCP value to be mandatory. Some networks run without QoS. There is no reason to force setting of DSCP in such networks.\n\nDiscussion was to add your requirement of DSCP marking per data attribute.\n\nAs we discussed and understood that this is neither a usable or deployable model. Even your implementation is not correct for DTel (elevating all the data attributes to higher DSCP level in the group renders the whole purpose of marking moot)\n\n[Mickey] It is your opinion that this is \"neither a usable or deployable model\". I certainly never agreed to any such statement.\n\nLet's dive into the case I was thinking of for elevating data attributes to a higher DSCP level. What I was thinking of was an event, specifically the case where something happens that triggers multiple events at the same time. In such a case, one report can cover all triggers/events. The question then becomes what DSCP value to use in that report. IMO selecting the highest DSCP level between all triggered events makes the most sense.\n\nLooking at the structure proposed for TAM, I see that sai_tam_event_attr_t includes SAI_TAM_EVENT_ATTR_COLLECTOR_LIST. Whether DSCP comes from the collectors in the list or is specified directly as a separate attribute in sai_tam_event_attr_t, the granularity of the association between DSCP and events is tam_event_id. My conclusion is that for events, the cases for elevating DSCP to a higher level are exactly the same, whether DSCP is specified in the collector or DSCP is specified directly in sai_tam_event_attr_t.\n\nI have added your requirement irrespective of the uselessness of it just so that you can make progress on DTel.\n\nAdding DSCP marking for event as well can be done and I will add the flag.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-01-23T21:51:18Z",
        "comment_author": "lguohan",
        "comment_body": "@JaiOCP , can you resolve the conflict?"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-02-16T08:45:49Z",
        "comment_author": "kcudnik",
        "comment_body": "please resolve conflicts"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-02-20T16:36:45Z",
        "comment_author": "mikelazar",
        "comment_body": "The changes look fine to me."
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-05-08T03:52:21Z",
        "comment_author": "hongrun007",
        "comment_body": "Hi everyone,\r\n\r\nI have some question about TAM, would you please help me.\r\n\r\n1. The first question is whether the current transport protocol type mainly recommends using GRPC and transmitting with GPB. Is there a standard for Json, Thrift?\r\n2. the second question, the three .proto files in the data / TAM folder is officially released or just an example\r\n3. Is sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented?\r\n4. Is the GRPC server created by the sonic system or by the SAI? My understanding is that it is created by SAI and communicates directly with the controller via GRPC. I don't know if it is correct.\r\n5. _sai_tam_collector_attr_t stores controller information for what to do. Is it used to create a GRPC channel?"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-05-08T04:35:54Z",
        "comment_author": "JaiOCP",
        "comment_body": "Comments inline \n\n> On May 7, 2019, at 8:52 PM, hong run <notifications@github.com> wrote:\n> \n> Hi everyone,\n> \n> I have some question about TAM, would you please help me.\n> \n> The first question is whether the current transport protocol type mainly recommends using GRPC and transmitting with GPB. Is there a standard for Json, Thrift?\nSupported transports are only TCP/UDP. gRPC is not suggested at SAI layer.\n> the second question, the three .proto files in the data / TAM folder is officially released or just an example\nThey are examples but they do compile and can be used.\n> Is sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented?\nPush method is supported using streaming over TCP/UDP channel. \n> Is the GRPC server created by the sonic system or by the SAI? My understanding is that it is created by SAI and communicates directly with the controller via GRPC. I don't know if it is correct.\ngRPC server is created by SONiC system. Currently TAM attributes do not support gRPC transport in SAI.\n\n> _sai_tam_collector_attr_t stores controller information for what to do. Is it used to create a GRPC channel?\nIt is used to create a TCP/UDP client connection to the listener socket in collector.\nNote that this TCP/UDP semantics is different in gRPC where client connections are created in gRPC collector and server is hosted in SONiC.\n\n-Jai\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-05-08T16:50:01Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hong,\n\n \n\nLooks like gRPC transport attribute is added to saitam.h. I missed that.\n\nIs there a usecase to support gRPC in SAI?\n\n \n\n-Jai\n\n \n\n \n\nFrom: Jai Kumar <jai.kumar@broadcom.com>\nDate: Tuesday, May 7, 2019 at 9:35 PM\nTo: opencomputeproject/SAI <reply@reply.github.com>\nCc: opencomputeproject/SAI <SAI@noreply.github.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nComments inline \n\n\nOn May 7, 2019, at 8:52 PM, hong run <notifications@github.com> wrote:\n\nHi everyone,\n\nI have some question about TAM, would you please help me.\nThe first question is whether the current transport protocol type mainly recommends using GRPC and transmitting with GPB. Is there a standard for Json, Thrift?\nSupported transports are only TCP/UDP. gRPC is not suggested at SAI layer.\n\nthe second question, the three .proto files in the data / TAM folder is officially released or just an example\nThey are examples but they do compile and can be used.\n\nIs sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented?\nPush method is supported using streaming over TCP/UDP channel. \n\nIs the GRPC server created by the sonic system or by the SAI? My understanding is that it is created by SAI and communicates directly with the controller via GRPC. I don't know if it is correct.\ngRPC server is created by SONiC system. Currently TAM attributes do not support gRPC transport in SAI.\n\n \n\n_sai_tam_collector_attr_t stores controller information for what to do. Is it used to create a GRPC channel?\nIt is used to create a TCP/UDP client connection to the listener socket in collector.\n\nNote that this TCP/UDP semantics is different in gRPC where client connections are created in gRPC collector and server is hosted in SONiC.\n\n \n\n-Jai\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-05-09T01:43:29Z",
        "comment_author": "hongrun007",
        "comment_body": "> Hong, Looks like gRPC transport attribute is added to saitam.h. I missed that. Is there a usecase to support gRPC in SAI?\r\n> [\u2026](#)\r\n> -Jai From: Jai Kumar <jai.kumar@broadcom.com> Date: Tuesday, May 7, 2019 at 9:35 PM To: opencomputeproject/SAI <reply@reply.github.com> Cc: opencomputeproject/SAI <SAI@noreply.github.com>, Mention <mention@noreply.github.com> Subject: Re: [opencomputeproject/SAI] Update saitam.h (#874) Comments inline On May 7, 2019, at 8:52 PM, hong run <notifications@github.com> wrote: Hi everyone, I have some question about TAM, would you please help me. The first question is whether the current transport protocol type mainly recommends using GRPC and transmitting with GPB. Is there a standard for Json, Thrift? Supported transports are only TCP/UDP. gRPC is not suggested at SAI layer. the second question, the three .proto files in the data / TAM folder is officially released or just an example They are examples but they do compile and can be used. Is sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented? Push method is supported using streaming over TCP/UDP channel. Is the GRPC server created by the sonic system or by the SAI? My understanding is that it is created by SAI and communicates directly with the controller via GRPC. I don't know if it is correct. gRPC server is created by SONiC system. Currently TAM attributes do not support gRPC transport in SAI. _sai_tam_collector_attr_t stores controller information for what to do. Is it used to create a GRPC channel? It is used to create a TCP/UDP client connection to the listener socket in collector. Note that this TCP/UDP semantics is different in gRPC where client connections are created in gRPC collector and server is hosted in SONiC.\r\n> -Jai \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or mute the thread.\r\n\r\nI don't have a useful case, that's why I ask you questions above. \r\nSo do you believe that if we need to support gRPC, should we start a gRPC server in SAI layer, waiting for collector calls in pull mode, also collector need to start a gRPC server waiting for SAI calls in push mode?"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-05-09T04:52:55Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hong,\n\n \n\nYes we can do what you are suggesting or we can run the gRPC server in SONiC instead of SAI layer.\n\nIn that case gRPC server in SONiC will handle the pull/push calls from the gRPC controller/collector. Internally SONiC will invoke GET SAI APIs to get the data from HW.\n\n \n\n-Jai\n\n \n\n \n\nFrom: hong run <notifications@github.com>\nReply-To: opencomputeproject/SAI <reply@reply.github.com>\nDate: Wednesday, May 8, 2019 at 6:43 PM\nTo: opencomputeproject/SAI <SAI@noreply.github.com>\nCc: Jai Kumar <jai.kumar@broadcom.com>, Mention <mention@noreply.github.com>\nSubject: Re: [opencomputeproject/SAI] Update saitam.h (#874)\n\n \n\nHong, Looks like gRPC transport attribute is added to saitam.h. I missed that. Is there a usecase to support gRPC in SAI?\n\u2026\n-Jai From: Jai Kumar jai.kumar@broadcom.com Date: Tuesday, May 7, 2019 at 9:35 PM To: opencomputeproject/SAI reply@reply.github.com Cc: opencomputeproject/SAI SAI@noreply.github.com, Mention mention@noreply.github.com Subject: Re: [opencomputeproject/SAI] Update saitam.h (#874) Comments inline On May 7, 2019, at 8:52 PM, hong run notifications@github.com wrote: Hi everyone, I have some question about TAM, would you please help me. The first question is whether the current transport protocol type mainly recommends using GRPC and transmitting with GPB. Is there a standard for Json, Thrift? Supported transports are only TCP/UDP. gRPC is not suggested at SAI layer. the second question, the three .proto files in the data / TAM folder is officially released or just an example They are examples but they do compile and can be used. Is sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented? Push method is supported using streaming over TCP/UDP channel. Is the GRPC server created by the sonic system or by the SAI? My understanding is that it is created by SAI and communicates directly with the controller via GRPC. I don't know if it is correct. gRPC server is created by SONiC system. Currently TAM attributes do not support gRPC transport in SAI. _sai_tam_collector_attr_t stores controller information for what to do. Is it used to create a GRPC channel? It is used to create a TCP/UDP client connection to the listener socket in collector. Note that this TCP/UDP semantics is different in gRPC where client connections are created in gRPC collector and server is hosted in SONiC.\n-Jai \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or mute the thread.\n\nI don't have a useful case, that's why I ask you questions above.\nSo do you believe that if we need to support gRPC, should we start a gRPC server in SAI layer, waiting for collector calls in pull mode, also collector need to start a gRPC server waiting for SAI calls in push mode?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n"
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-07-01T07:08:19Z",
        "comment_author": "hongrun007",
        "comment_body": "Is sai_tam_telemetry_get_data() used only in PULL/Dail in? How is PUSH/Dail out implemented?\r\nPush method is supported using streaming over TCP/UDP channel.\r\nThe answer is not what I want to know. I think we can use sai_tam_telemetry_get_data() to pull in the data, but i do not know,which api i can use to push out  the data to collecter."
    },
    {
        "number": 874,
        "repo": "sai",
        "comment_at": "2019-07-01T07:26:31Z",
        "comment_author": "hongrun007",
        "comment_body": "typedef enum _sai_tam_transport_type_t\r\n{\r\nSAI_TAM_TRANSPORT_TYPE_NONE,\r\nSAI_TAM_TRANSPORT_TYPE_TCP,\r\nSAI_TAM_TRANSPORT_TYPE_UDP,\r\nSAI_TAM_TRANSPORT_TYPE_GRPC,\r\n}sai_tam_transport_type_t;\r\nthe GPRC in not tha same level of argeement with tcp and udp,why they are in all in the sai_tam_transport_type_t;"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-10-09T15:11:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-10-09T22:05:19Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-10-10T21:00:10Z",
        "review_author": "kcudnik"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-08T05:01:26Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-12T21:49:54Z",
        "review_author": "tushar-ty"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T21:38:44Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T21:41:32Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T21:45:09Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T21:57:37Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T22:02:12Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T22:08:12Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T22:13:08Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T22:14:24Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-27T22:16:37Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-28T01:13:34Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-28T01:15:11Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-28T22:04:32Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-28T22:42:03Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-28T22:49:58Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-29T22:19:09Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-30T19:14:09Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2018-11-30T19:58:23Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-01-17T17:54:43Z",
        "review_author": "AshokDaparthi"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-06T00:30:58Z",
        "review_author": "AshokDaparthi"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-08T17:39:45Z",
        "review_author": "lguohan"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-14T21:21:41Z",
        "review_author": "mickeyspiegel"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-19T08:42:50Z",
        "review_author": "hui-ma"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-19T22:00:16Z",
        "review_author": "kcudnik"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-02-19T22:29:44Z",
        "review_author": "hui-ma"
    },
    {
        "number": 874,
        "repo": "sai",
        "review_at": "2019-03-05T17:42:11Z",
        "review_author": "itaibaz"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-02-08T17:39:45Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2018-11-12T21:49:54Z",
        "latestReview_author": "tushar-ty",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-03-05T17:42:11Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-02-06T00:30:58Z",
        "latestReview_author": "AshokDaparthi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-02-19T22:00:16Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-02-14T21:21:41Z",
        "latestReview_author": "mickeyspiegel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 874,
        "repo": "sai",
        "latestReview_at": "2019-02-19T22:29:44Z",
        "latestReview_author": "hui-ma",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-08-30T01:25:56Z",
        "comment_author": "itaibaz",
        "comment_body": "One mirror session can have multiple monitor port in it, just set per each port you want to monitor SAI_PORT_ATTR_INGRESS_MIRROR_SESSION / SAI_PORT_ATTR_EGRESS_MIRROR_SESSION to the session\r\n\r\nIn RSPAN, the selected traffic is transmitted on a monitoring VLAN ((pushing a VLAN, SAI_MIRROR_SESSION_ATTR_VLAN_ID, to the packets).\r\nIt is usually assumed that the network will flood all packets on the mirroring VLAN in a way that it will arrive to the analyzer (and the mirroring VLAN is only used for mirroring traffic).\r\nStill an analyzer port (SAI_MIRROR_SESSION_ATTR_MONITOR_PORT, the name might be a bit confusing) is needed to define the egress port, and is relevant for RSPAN, so it can't be removed\r\n\r\nCan you explain the motivation, Thanks"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-08-31T14:39:51Z",
        "comment_author": "jemifdo",
        "comment_body": "One mirror session can have multiple monitor port only as per NPU capability but as per SAI definition the monitor port is a single object of type either Port or LAG.\r\nConsider a case I need to have an RSPAN VLAN with two ports P1 and P2 and I want to mirror packets ingressing and egressing out port P3 to the RSPAN VLAN.\r\nNow I need to create two RSPAN mirror sessions one with port P1 as monitor port and other with P2 as monitor port and then attach these two mirror sessions to the P3 port object as objlist and at both ingress and egress.\r\nTwo avoid this multiple mirror session create, we can make the monitor port as invalid only for RSPAN and use the VLAN ID thereby considering all its members as monitor ports for the mirror session or, we can make the monitor port attribute as type objlist. I proposed the former solution."
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-08-31T15:42:04Z",
        "comment_author": "itaibaz",
        "comment_body": "While I understand your use case, I would say, perhaps, please leave the monitor port as valid for RSPAN\r\nAnd consider the following usage. If monitor port is filled (not null), then it will be used. If monitor port is not filled, mirrored packet will be flooded on the vlan.\r\nIn such case, the needed change, is to allownull for monitor port"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-08-31T17:22:15Z",
        "comment_author": "jemifdo",
        "comment_body": "I agree. I'll make the change accordingly and update the pull request."
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-06T01:28:42Z",
        "comment_author": "stcheng",
        "comment_body": "So the port ID is set to null only when we are configuring the RSPAN source switch? When it is the destination switch, do we still need the port ID?"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-06T10:16:45Z",
        "comment_author": "jemifdo",
        "comment_body": "Monitor port object value can be NULL only when the mirroring type is RSPAN. But for RSPAN the monitor port can also be a valid one. I assume @itaibaz suggested the same in the above comment, so that the new change doesn't affect any application that uses the current SAI behavior and also at the same time we can flood the mirror packets to all the members of RSPAN VLAN by setting the monitor port object as NULL.\r\n@stcheng sorry, I couldn't get what you mean by source switch and destination switch."
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-06T15:57:11Z",
        "comment_author": "stcheng",
        "comment_body": "I think for RSPAN to be set up, there will be separate source switch and destination switch?"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-08T06:07:27Z",
        "comment_author": "jemifdo",
        "comment_body": "@stcheng hope you mean the mirror source and mirror destination. If so, then here monitor port refers to mirror destination."
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-10T15:54:25Z",
        "comment_author": "jemifdo",
        "comment_body": "@xinliu-seattle @lguohan I've addressed the comment raised by @rsivasankar during the SAI OCP discussions. Is this pull request ready to be merged? "
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-09-27T10:45:40Z",
        "comment_author": "jemifdo",
        "comment_body": "@kcudnik the compilation fails because the META check doesn't support attribute value type \"sai_object_list_t\" when it is \"MANDATORY_ON_CREATE\". Why is it so?"
    },
    {
        "number": 867,
        "repo": "sai",
        "comment_at": "2018-10-04T11:15:08Z",
        "comment_author": "kcudnik",
        "comment_body": "I think that was just in case condition, since so far we didn't had any mandatory_on_create attribute that will take object_list, i added fix for  that, now it works"
    },
    {
        "number": 867,
        "repo": "sai",
        "review_at": "2018-09-11T08:58:51Z",
        "review_author": "atitjain"
    },
    {
        "number": 867,
        "repo": "sai",
        "review_at": "2018-09-11T23:38:35Z",
        "review_author": "itaibaz"
    },
    {
        "number": 867,
        "repo": "sai",
        "review_at": "2018-09-12T00:19:04Z",
        "review_author": "stcheng"
    },
    {
        "number": 867,
        "repo": "sai",
        "review_at": "2018-09-20T15:23:54Z",
        "review_author": "lguohan"
    },
    {
        "number": 867,
        "repo": "sai",
        "latestReview_at": "2018-09-20T15:23:54Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 867,
        "repo": "sai",
        "latestReview_at": "2018-09-12T00:19:04Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 867,
        "repo": "sai",
        "latestReview_at": "2018-09-11T23:38:35Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 867,
        "repo": "sai",
        "latestReview_at": "2018-09-11T08:58:51Z",
        "latestReview_author": "atitjain",
        "latestReview_state": "APPROVED"
    }
]