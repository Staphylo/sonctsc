[
    {
        "number": 1066,
        "repo": "sonic-swss",
        "comment_at": "2019-09-23T17:10:03Z",
        "comment_author": "stcheng",
        "comment_body": "retest this please"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "comment_at": "2019-09-24T18:24:40Z",
        "comment_author": "stcheng",
        "comment_body": "retest this please"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "comment_at": "2019-09-24T22:26:14Z",
        "comment_author": "lguohan",
        "comment_body": "can you describe the effort if a deprecated mirror session is not removed from state db? does it impact the warm reboot?"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "comment_at": "2019-09-24T23:17:24Z",
        "comment_author": "stcheng",
        "comment_body": "@lguohan it doesn't impact the warm reboot; it could clean up the deprecated information or extra information stored before the warm reboot."
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "comment_at": "2019-09-26T23:11:17Z",
        "comment_author": "stcheng",
        "comment_body": "Indentations are fixed."
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "review_at": "2019-09-24T22:23:24Z",
        "review_author": "lguohan"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "review_at": "2019-09-24T22:24:19Z",
        "review_author": "lguohan"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "review_at": "2019-09-24T23:56:28Z",
        "review_author": "lguohan"
    },
    {
        "number": 1066,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-24T23:56:28Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T21:35:49Z",
        "review_author": "stcheng"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T22:05:27Z",
        "review_author": "lguohan"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T22:26:34Z",
        "review_author": "yxieca"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T22:05:27Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T21:35:49Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1065,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T22:26:34Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1062,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T02:52:27Z",
        "review_author": "yxieca"
    },
    {
        "number": 1062,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T02:52:27Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T00:44:36Z",
        "comment_author": "renukamanavalan",
        "comment_body": "This PR will not build until swss-common changes are committed and this build picks the latest swss-common."
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T17:20:25Z",
        "comment_author": "renukamanavalan",
        "comment_body": "retest this please.\r\n"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T23:18:09Z",
        "review_author": "jleveque"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T01:15:09Z",
        "review_author": "yxieca"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T19:09:55Z",
        "review_author": "stcheng"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T19:09:55Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-18T23:18:09Z",
        "latestReview_author": "jleveque",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1061,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T01:15:09Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1060,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T02:51:12Z",
        "comment_author": "yxieca",
        "comment_body": "checked another pr that has policer failure, looks like syncd is slow and is not able to process the request when we end the test."
    },
    {
        "number": 1060,
        "repo": "sonic-swss",
        "review_at": "2019-09-19T02:39:16Z",
        "review_author": "yxieca"
    },
    {
        "number": 1060,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-19T02:39:16Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1057,
        "repo": "sonic-swss",
        "comment_at": "2019-09-16T17:22:25Z",
        "comment_author": "prsunny",
        "comment_body": "retest this please"
    },
    {
        "number": 1057,
        "repo": "sonic-swss",
        "review_at": "2019-09-14T01:51:13Z",
        "review_author": "lguohan"
    },
    {
        "number": 1057,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-14T01:51:13Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "comment_at": "2019-09-18T19:59:33Z",
        "comment_author": "stcheng",
        "comment_body": "@lguohan please check the update, thanks!"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T00:10:29Z",
        "comment_author": "lguohan",
        "comment_body": "I think we need vs test for this feature. can you later add vs test?"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T04:54:17Z",
        "comment_author": "stcheng",
        "comment_body": "sure; i'll send a separate pull request to enhance the test"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "comment_at": "2019-09-19T04:54:44Z",
        "comment_author": "stcheng",
        "comment_body": "retest this please"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "comment_at": "2019-09-20T17:00:08Z",
        "comment_author": "stcheng",
        "comment_body": "retest this please\r\n"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T23:26:03Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T23:26:31Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T23:29:49Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T23:37:02Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T05:13:30Z",
        "review_author": "stcheng"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T07:32:54Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T07:38:57Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T07:47:00Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T07:50:39Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T15:33:00Z",
        "review_author": "stcheng"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-13T15:37:51Z",
        "review_author": "stcheng"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T21:28:41Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T22:26:01Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T22:46:18Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T22:46:52Z",
        "review_author": "lguohan"
    },
    {
        "number": 1054,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-18T22:46:52Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "comment_at": "2019-09-11T21:19:08Z",
        "comment_author": "prsunny",
        "comment_body": "@hzheng5, please review"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "review_at": "2019-09-11T21:57:04Z",
        "review_author": "yxieca"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "review_at": "2019-09-11T22:10:00Z",
        "review_author": "lguohan"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "review_at": "2019-09-11T22:56:31Z",
        "review_author": "stcheng"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T05:03:35Z",
        "review_author": "hzheng5"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-11T22:10:00Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-11T22:56:31Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-11T21:57:04Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1053,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-12T05:03:35Z",
        "latestReview_author": "hzheng5",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1052,
        "repo": "sonic-swss",
        "review_at": "2019-09-11T20:10:32Z",
        "review_author": "yxieca"
    },
    {
        "number": 1052,
        "repo": "sonic-swss",
        "review_at": "2019-09-12T03:37:39Z",
        "review_author": "srj102"
    },
    {
        "number": 1052,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-12T03:37:39Z",
        "latestReview_author": "srj102",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1052,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-11T20:10:32Z",
        "latestReview_author": "yxieca",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1048,
        "repo": "sonic-swss",
        "comment_at": "2019-09-18T00:12:55Z",
        "comment_author": "prsunny",
        "comment_body": "retest this please"
    },
    {
        "number": 1048,
        "repo": "sonic-swss",
        "review_at": "2019-09-11T20:13:04Z",
        "review_author": "prsunny"
    },
    {
        "number": 1048,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T00:12:44Z",
        "review_author": "prsunny"
    },
    {
        "number": 1048,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-18T00:12:44Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-06T01:48:21Z",
        "comment_author": "prsunny",
        "comment_body": "retest this please"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-06T17:37:06Z",
        "comment_author": "prsunny",
        "comment_body": "retest this please"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-06T21:28:18Z",
        "comment_author": "prsunny",
        "comment_body": "retest this please\r\n"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-12T03:30:01Z",
        "comment_author": "tylerlinp",
        "comment_body": "nbrmgrd waits restore neighbors for 120s in normal startup?  isNeighRestoreDone true only if really do restore. I found VS tests about neighbor/nexthop (vrf new cases) failed because nbrmgrd cannot work."
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-12T03:51:08Z",
        "comment_author": "prsunny",
        "comment_body": "In normal startup, there is no wait as warmboot flag is disabled and the isNeighRestoreDone flag would be set without any wait. can you provide any logs that nbrmgrd is stuck in VS?"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "comment_at": "2019-09-12T07:52:57Z",
        "comment_author": "tylerlinp",
        "comment_body": "nbrmgrd is stuck in VS because:\r\n1. In VS startup.sh, now there is no start restore_neighbors.\r\n2. In restore_neighbors.py, if not warmstart.isWarmStart() missing set_statedb_neigh_restore_done()."
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "review_at": "2019-08-29T00:19:26Z",
        "review_author": "zhenggen-xu"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "review_at": "2019-08-29T00:36:10Z",
        "review_author": "prsunny"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "review_at": "2019-08-30T17:35:49Z",
        "review_author": "zhenggen-xu"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "review_at": "2019-09-04T18:45:43Z",
        "review_author": "lguohan"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "review_at": "2019-09-04T20:57:22Z",
        "review_author": "prsunny"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "latestReview_at": "2019-08-30T17:35:49Z",
        "latestReview_author": "zhenggen-xu",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1040,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-04T18:45:43Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "comment_at": "2019-08-16T20:40:03Z",
        "comment_author": "prsunny",
        "comment_body": "@sumukhatv , would need to add a VS test for this change"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "review_at": "2019-09-18T21:32:40Z",
        "review_author": "prsunny"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "review_at": "2019-09-30T19:00:45Z",
        "review_author": "prsunny"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "review_at": "2020-09-26T10:41:17Z",
        "review_author": "wendani"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "review_at": "2020-09-29T01:16:39Z",
        "review_author": "prsunny"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "latestReview_at": "2020-09-26T10:41:17Z",
        "latestReview_author": "wendani",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1030,
        "repo": "sonic-swss",
        "latestReview_at": "2020-09-29T01:16:39Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "comment_at": "2019-08-28T15:03:25Z",
        "comment_author": "stepanblyschak",
        "comment_body": "> thanks! please check the comments.\r\n\r\n@stcheng comments were fixed or resolved, could you please review?"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-06T23:00:30Z",
        "review_author": "stcheng"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T08:44:20Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T08:45:21Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T08:46:21Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T08:46:44Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T08:48:08Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:21:43Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:24:31Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:25:17Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:25:21Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:25:29Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:26:54Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T09:28:16Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T10:16:49Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T10:17:56Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-07T10:18:51Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-08T05:25:28Z",
        "review_author": "stcheng"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-08T05:33:06Z",
        "review_author": "stcheng"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-08T10:15:50Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-08T11:45:23Z",
        "review_author": "stepanblyschak"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-08-08T17:41:32Z",
        "review_author": "stcheng"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-09-16T18:04:11Z",
        "review_author": "lguohan"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "review_at": "2019-09-16T18:17:52Z",
        "review_author": "stcheng"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-16T18:04:11Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 963,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-16T18:17:52Z",
        "latestReview_author": "stcheng",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-06-04T12:24:45Z",
        "comment_author": "lguohan",
        "comment_body": "missing vs test."
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-03T04:17:20Z",
        "comment_author": "wendani",
        "comment_body": "Added dot1p profile test and dot1p profile applying to ports test\r\nhttps://github.com/Azure/sonic-swss/pull/871#pullrequestreview-245410035"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-06T00:36:41Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-08T09:18:07Z",
        "comment_author": "lguohan",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-09T17:10:19Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-09T18:42:26Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-09T20:39:39Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-10T02:45:30Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "comment_at": "2019-08-12T18:37:39Z",
        "comment_author": "wendani",
        "comment_body": "retest this please"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "review_at": "2019-06-04T12:24:59Z",
        "review_author": "lguohan"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "review_at": "2019-06-04T12:25:16Z",
        "review_author": "lguohan"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "review_at": "2019-09-06T22:20:40Z",
        "review_author": "lguohan"
    },
    {
        "number": 871,
        "repo": "sonic-swss",
        "latestReview_at": "2019-09-06T22:20:40Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-01-31T07:08:29Z",
        "comment_author": "kirankella",
        "comment_body": "> Suggest to add a VS test to check the route configuration with the expected switch mac!\r\n\r\nSure. Can you please point me to any documentation on how to add VS tests?\r\nSo, do we generally add the VS tests in a separate PR?\r\nAnd the test you are referring to here is to check that the fe80../128 route's matches the switch MAC right?\r\n"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-01-31T18:54:12Z",
        "comment_author": "prsunny",
        "comment_body": "@kirankella , generally we add VS test as part of the same PR. Yes the intention is to check if linklocal `fe80../128` matches the `switchmac `in ASIC DB. "
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-05T12:08:48Z",
        "comment_author": "kirankella",
        "comment_body": "> What if user would like to configure link local address explicitly, how does the change in routeorch coordinate with the processing in intforch?\r\n\r\n@nikos-github @prsunny @jipanyang , this PR code change is to address the case where we have to push the default auto configured link-local address to hardware (since intfsyncd is no longer detecting the default link-local from the stack).\r\nThe manually configured link-local address (using 'config interface Ethernet4 ip add fe80::22:1/64 for eg..) still goes to the hardware via the regular path (config-db -> orchagent/intfsorch -> sai) as /128 ip2me host route and /64 subnet route (We already know about the /64 subnet route conflict that happens if we try to add more than 1 link-local /64 addresses manually. This is a different overlap issue).\r\n"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-06T16:55:30Z",
        "comment_author": "nikos-github",
        "comment_body": "I'm fine with the current changes. Ideally I would have made addIp2MeRoute public."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-11T22:52:57Z",
        "comment_author": "rodnymolina",
        "comment_body": "@kirankella Looks like this logic can only work in scenarios where the link-local address is the same for all interfaces in the switch. If i understand your point correctly, this PR doesn't solve the problem for typical scenarios in which users may want to define link-local-addresses in a more human-friendly fashion. For doing that you need to associate ip-addresses with l3-interfaces; your current approach of having a single system-wide ip2me route doesn't offer any flexibility, as users would need to restart the box after making any link-local-address change. I believe the fix in PR/437 (which i'm currently re-testing after latest SAI), provides a more generic solution to this problem."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-12T08:04:23Z",
        "comment_author": "kirankella",
        "comment_body": "> @kirankella Looks like this logic can only work in scenarios where the link-local address is the same for all interfaces in the switch. If i understand your point correctly, this PR doesn't solve the problem for typical scenarios in which users may want to define link-local-addresses in a more human-friendly fashion. For doing that you need to associate ip-addresses with l3-interfaces; your current approach of having a single system-wide ip2me route doesn't offer any flexibility, as users would need to restart the box after making any link-local-address change. I believe the fix in PR/437 (which i'm currently re-testing after latest SAI), provides a more generic solution to this problem.\r\n\r\n"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-12T08:17:14Z",
        "comment_author": "kirankella",
        "comment_body": "> > @kirankella Looks like this logic can only work in scenarios where the link-local address is the same for all interfaces in the switch. If i understand your point correctly, this PR doesn't solve the problem for typical scenarios in which users may want to define link-local-addresses in a more human-friendly fashion. For doing that you need to associate ip-addresses with l3-interfaces; your current approach of having a single system-wide ip2me route doesn't offer any flexibility, as users would need to restart the box after making any link-local-address change. I believe the fix in PR/437 (which i'm currently re-testing after latest SAI), provides a more generic solution to this problem.\r\n\r\n@rodnymolina You are right on the point that this PR is not about addressing the manually configured link-local addresses (CLI). Since we don't have the intfsyncd now, we have to push to the hardware, the only automatically-derived-system-wide-link-local-address ip2me route (the default config case) at the initialization time. This PR addresses that (bootup default case for having the fe80 /128 and fe80 /10 CPU routes).\r\nHaving said that, we can have more than 1 link-local addresses assigned to the interfaces (just like the global IPv6 addresses). And assigning a new link-local address doesn't have to delete the automatically derived (MAC based by Linux) link-local address. Also, there can be cases in future where we have a VRRPv3 Virtual IPv6 Link-local address that is assigned to the VRRP Master routing interfaces (another case where we have multiple link-local addresses on the interface)."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-12T20:55:18Z",
        "comment_author": "rodnymolina",
        "comment_body": "@kirankella My point is that we shouldn't hard-code something as dynamic and subject to change as an ip-address. Think about the possibility of a user wanting to to replace (not add) the default link-local address of all the interfaces. Or think about someone interested in disabling link-local-forwarding altogether. Having a hard-coded ip2me entry in hardware doesn't sound right to me."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-12T23:31:42Z",
        "comment_author": "nikos-github",
        "comment_body": "@rodnymolina The link-local IP that Kiran is using is derived from the mac. We don't support to my knowledge changing the mac on the host i/f without restarting swss. The user can change the mac of all the front panel ports but that doesn't invalidate Kiran's changes in this PR."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-13T00:02:24Z",
        "comment_author": "jipanyang",
        "comment_body": "There is use case link local autoconf is disabled: net.ipv6.conf.all.autoconf=0,  and user would config link local IP address explicitly.    Capability should be provided to do the same for swss.  That could be provided as a SWSS startup option or incremental config support."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-13T00:47:51Z",
        "comment_author": "lguohan",
        "comment_body": "@kirankella , thanks for the PR. can you also develop a ansible test in sonic-mgmt repo, so that non-broadcom asic platform can test? It looks like you have only tested this on broadcom platform."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-13T04:12:03Z",
        "comment_author": "nikos-github",
        "comment_body": "> There is use case link local autoconf is disabled: net.ipv6.conf.all.autoconf=0, and user would config link local IP address explicitly. Capability should be provided to do the same for swss. That could be provided as a SWSS startup option or incremental config support.\r\n\r\n@jipanyang What you are describing, is not currently supported in sonic and is certainly outside the scope of this PR. It can be discussed in a separate PR or feature request if it actually makes sense to follow that setting for the host interface."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-13T11:31:09Z",
        "comment_author": "kirankella",
        "comment_body": "> @kirankella , thanks for the PR. can you also develop a ansible test in sonic-mgmt repo, so that non-broadcom asic platform can test? It looks like you have only tested this on broadcom platform.\r\n\r\n@lguohan Sure. I will work on it.\r\n"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-13T21:16:20Z",
        "comment_author": "rodnymolina",
        "comment_body": "> @rodnymolina The link-local IP that Kiran is using is derived from the mac. We don't support to my knowledge changing the mac on the host i/f without restarting swss. The user can change the mac of all the front panel ports but that doesn't invalidate Kiran's changes in this PR.\r\n\r\nIf the user were to do that, then there's no reason for the link-local-address derived from the 'original' system-mac to exist. Then why would you want to bring traffic to CPU for a DIP that it's not existing in the system/kernel? You'd want that traffic to be dropped in hw, right?\r\n\r\nBut there's a more fundamental issue i'm struggling with while looking at this PR: how do we come up with a consistent interface-overlap-prevention logic if we don't have a common 'nexus' between 'interfaces' in the system and the 'routes' associated to those interfaces? By creating this global ip2me route (which is tied to no interface), we are breaking that implicit association, and this would definitely contribute to a more complex overlap-prevention logic, which would now has slightly different flavors: one for ipv4 and another one for ipv6."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-14T02:30:57Z",
        "comment_author": "nikos-github",
        "comment_body": "> > @rodnymolina The link-local IP that Kiran is using is derived from the mac. We don't support to my knowledge changing the mac on the host i/f without restarting swss. The user can change the mac of all the front panel ports but that doesn't invalidate Kiran's changes in this PR.\r\n> \r\n> If the user were to do that, then there's no reason for the link-local-address derived from the 'original' system-mac to exist. Then why would you want to bring traffic to CPU for a DIP that it's not existing in the system/kernel? You'd want that traffic to be dropped in hw, right?\r\n> \r\n> But there's a more fundamental issue i'm struggling with while looking at this PR: how do we come up with a consistent interface-overlap-prevention logic if we don't have a common 'nexus' between 'interfaces' in the system and the 'routes' associated to those interfaces? By creating this global ip2me route (which is tied to no interface), we are breaking that implicit association, and this would definitely contribute to a more complex overlap-prevention logic, which would now has slightly different flavors: one for ipv4 and another one for ipv6.\r\n\r\nYou are thinking only of the front panel ports. There's the mgmt port as well. Also the absence of ip2me won't cause a packet drop because the fe80::/10 also goes down to hw."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-14T02:32:23Z",
        "comment_author": "nikos-github",
        "comment_body": "> With the open issues related to this link local route behavior, I'd suggest not to make it a default.\r\n> \r\n> We may add an entry in DEVICE_METADATA to explicitly enable the download of fixed linklocal to me routes. orchagent.sh may read the setting and start accordingly.\r\n> \r\n> Or we go further to dynamically enable/disable the fixed link local to me routes. By default it should be disabled, this will avoid conflict with any user configured link local ip.\r\n\r\nYour suggestion is a no-op in the presence of the fe80::/10. Not sure what your goal is here but it can be discussed off this PR."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-19T23:08:38Z",
        "comment_author": "prsunny",
        "comment_body": "@jipanyang , @rodnymolina , what is the conclusion on this based on the latest comments?"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-20T04:24:21Z",
        "comment_author": "jipanyang",
        "comment_body": "@prsunny My understanding is that putting link-local-address derived from the 'original' system-mac and the fe80 /10 CPU routes into asic by default is the not the desired behavior,  we should have a knob (either an orchchagent startup option or more preferably dynamic enable/disable config support) to avoid conflict with explicit link local configuration. "
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-20T04:49:23Z",
        "comment_author": "rodnymolina",
        "comment_body": "@prsunny My changes in PR/437 (which are about to be updated), are taking into account that each link-local address in the system has been configured over a specific interface. So i can't see how my overlap-prevention-logic can coexist with the one in this PR. Perhaps we could do something like what mentioned by @jipanyang above: have a global knob that enables either one approach or the other, but both cannot be enabled at the same time."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "comment_at": "2019-02-20T07:47:28Z",
        "comment_author": "nikos-github",
        "comment_body": "@prsunny @jipanyang The desired behavior is for the ping to go through. Right now the hw is dropping the packets and that's not acceptable. It's also a mismatch with the linux kernel behavior. By default, the link local subnet should be in the hw. Since the behavior is the same today for subnet and host link-local addresses, the ip2me is not needed and was merely here for completeness. Also Rodny's changes are not needed either and he only needs to make sure that further link-local prefixes do not make it into the hw. The overlapping addresses is a different issue after that."
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-30T21:33:14Z",
        "review_author": "prsunny"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T02:40:02Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T06:50:02Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T06:50:06Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T06:50:11Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T06:50:15Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T16:39:18Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T16:56:51Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T17:27:21Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-01-31T18:13:22Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-02T10:51:15Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-03T01:27:18Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-03T11:36:24Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-04T05:06:41Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-04T18:45:22Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-04T19:10:29Z",
        "review_author": "prsunny"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-04T19:39:08Z",
        "review_author": "jipanyang"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-05T10:50:32Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-05T19:31:31Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-06T00:44:59Z",
        "review_author": "prsunny"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-06T10:12:36Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-06T16:53:20Z",
        "review_author": "nikos-github"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-07T07:07:07Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-08T04:32:39Z",
        "review_author": "kirankella"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-08T06:15:37Z",
        "review_author": "jipanyang"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "review_at": "2019-02-13T22:01:39Z",
        "review_author": "jipanyang"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "latestReview_at": "2019-02-13T22:01:39Z",
        "latestReview_author": "jipanyang",
        "latestReview_state": "CHANGES_REQUESTED"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "latestReview_at": "2019-02-06T00:44:59Z",
        "latestReview_author": "prsunny",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 774,
        "repo": "sonic-swss",
        "latestReview_at": "2019-02-06T16:53:20Z",
        "latestReview_author": "nikos-github",
        "latestReview_state": "APPROVED"
    }
]