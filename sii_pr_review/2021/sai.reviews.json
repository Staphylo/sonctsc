[
    {
        "number": 1338,
        "repo": "sai",
        "comment_at": "2021-11-05T11:52:56Z",
        "comment_author": "richardyu-ms",
        "comment_body": "please add the `test done` part in the pull request description for what kinds of testing you have made for this change"
    },
    {
        "number": 1338,
        "repo": "sai",
        "comment_at": "2021-11-08T09:26:34Z",
        "comment_author": "RyoYang",
        "comment_body": "> please add the `test done` part in the pull request description for what kinds of testing you have made for this change\r\n\r\nupdated."
    },
    {
        "number": 1338,
        "repo": "sai",
        "comment_at": "2021-11-10T00:55:33Z",
        "comment_author": "richardyu-ms",
        "comment_body": "> * Prepare the sai test environment as a comparison platform for setting up the new testing structure\r\n\r\nthis build is not only targeting as a comparison for the new structure on review #1335, but also preparing the code for a saiserver that can be used in that new structure."
    },
    {
        "number": 1338,
        "repo": "sai",
        "review_at": "2021-11-08T11:20:16Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1338,
        "repo": "sai",
        "review_at": "2021-11-10T06:16:49Z",
        "review_author": "lguohan"
    },
    {
        "number": 1338,
        "repo": "sai",
        "latestReview_at": "2021-11-10T06:16:49Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1338,
        "repo": "sai",
        "latestReview_at": "2021-11-08T11:20:16Z",
        "latestReview_author": "richardyu-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-02T20:26:14Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 36 alerts** when merging 855a461c04191c0f88e67ca4263419573a2cd01e into 422fc8400300571805d6716f27c8f3f902595f35 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-cf533ff5c1989b8de2885c5c12acef6c6c794033)\n\n**new alerts:**\n\n* 32 for Imprecise assert\n* 3 for &#39;import \\*&#39; may pollute namespace\n* 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-02T22:15:53Z",
        "comment_author": "ravi861",
        "comment_body": "@rlhui @richardyu-ms fyi"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-03T11:04:18Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 36 alerts** when merging dfc9e0a0f6a79f1594c776832aea09d179e7fc37 into be03407971ad9217ec227c0f29d4c75df2a5ab32 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-6234d94705db56353417f181e07744cb41218fd8)\n\n**new alerts:**\n\n* 32 for Imprecise assert\n* 3 for &#39;import \\*&#39; may pollute namespace\n* 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-03T13:34:40Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 36 alerts** when merging d371ec0531e2311ca30b972d5584b3eb87744064 into be03407971ad9217ec227c0f29d4c75df2a5ab32 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-d02a74ffafec58db14cd7f7e9835b0b1c5c32ccc)\n\n**new alerts:**\n\n* 32 for Imprecise assert\n* 3 for &#39;import \\*&#39; may pollute namespace\n* 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-04T12:05:15Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 36 alerts** when merging 6cfeabce9c1edd12bd29c15bda31a68331c44768 into be03407971ad9217ec227c0f29d4c75df2a5ab32 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-e5c50ec69aedbf53394ad273d308fa4853c6ea89)\n\n**new alerts:**\n\n* 32 for Imprecise assert\n* 3 for &#39;import \\*&#39; may pollute namespace\n* 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-11-16T22:05:15Z",
        "comment_author": "rlhui",
        "comment_body": "Adding @smaheshm  to review as well."
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-09T09:09:55Z",
        "comment_author": "kcudnik",
        "comment_body": "\r\n> **new alerts:**\r\n> \r\n> * 32 for Imprecise assert\r\n> * 3 for 'import *' may pollute namespace\r\n> * 1 for Module is imported with 'import' and 'import from'\r\n\r\nplease address LGTM issues"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-09T10:35:39Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging acd7f6997896a44160cea8c3ad70c1f7f8eacaa7 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-2e244003b5d60bd6e5c3b38cd7dad687e1209d73)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-09T10:44:19Z",
        "comment_author": "aljer",
        "comment_body": "> This pull request **introduces 2 alerts** when merging [acd7f69](https://github.com/opencomputeproject/SAI/commit/acd7f6997896a44160cea8c3ad70c1f7f8eacaa7) into [05648bc](https://github.com/opencomputeproject/SAI/commit/05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9) - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-2e244003b5d60bd6e5c3b38cd7dad687e1209d73)\r\n> \r\n> **new alerts:**\r\n> \r\n> * 2 for 'import *' may pollute namespace\r\n\r\n@kcudnik I addressed almost all issues. Those two which remain are required from the perspective of tests infrastructure."
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-10T08:50:29Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging ddcba71870a6fd70a18d1274a75e8c54dc826e30 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-8d7d015124c1786498412b1efbb41fc6dbfd7a37)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-10T09:10:38Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging 6d10ea929c47478a94b3a1972d9f3e508d5eb954 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-27ad2356c7b9e4b2ee6348d3ba068883bce9bd49)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-10T23:55:02Z",
        "comment_author": "smaheshm",
        "comment_body": "Regarding \"sai_rpc_frontend.cpp - RPC server frontend file - there is a set of manually written helper functions that converts/parses SAI and thrift attributes and also here we have autogenerated SAI RPC server functions included\"\r\n\r\nWhy not keep these two separate? why mix auto generated file with manual addition?"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-11T00:10:10Z",
        "comment_author": "ravi861",
        "comment_body": "> Regarding \"sai_rpc_frontend.cpp - RPC server frontend file - there is a set of manually written helper functions that converts/parses SAI and thrift attributes and also here we have autogenerated SAI RPC server functions included\"\r\n> \r\n> Why not keep these two separate? why mix auto generated file with manual addition?\r\n\r\nThe helper functions are defined in sai_rpc_frontend.cpp and used in the generated sai_rpc_server.cpp.\r\nThe sai_rpc_server.cpp is a large class definition with all the member functions declared and defined inline and use the handwritten helper functions.\r\nSo there is a circular dependency on who includes the other. The sai_rpc_server.cpp is included in sai_rpc_frontend.cpp with a #include right after the helper function definitions, which, I agree is a little unconventional."
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-13T22:15:38Z",
        "comment_author": "smaheshm",
        "comment_body": "Rest looks good. I think adding unit tests (gtests) to the conversion APIs will be useful to catch regression when someone changes those functions. "
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-15T20:36:06Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging d558751a67faa1be62c7126034bc0d20b6e3313e into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-aa0ac9393d0573b371bc36d53ddc35a2a7ab1d75)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-15T21:01:45Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging d2cbed8cf92c27ffab0e7a8e01890869835a8848 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-6767a0c4c74e523fb918db62bf6caf5b8d496204)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-16T08:20:33Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging 953dd9f0aad8c96092b827872f782ab1b6ad73e0 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-eabeb4f413a978ccbc19561b3f9688c03fd8c594)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-16T19:11:33Z",
        "comment_author": "lgtm-com",
        "comment_body": "This pull request **introduces 2 alerts** when merging a5a7d94ca3102f8638e5f5d16e85a2071d2cddb8 into 05648bc62fbdf9c456c0b8d93d6ee53b5edd5df9 - [view on LGTM.com](https://lgtm.com/projects/g/opencomputeproject/SAI/rev/pr-e30598e5d320e9c130fb4d6f6c250f1d3d4a06be)\n\n**new alerts:**\n\n* 2 for &#39;import \\*&#39; may pollute namespace"
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-16T19:59:09Z",
        "comment_author": "smaheshm",
        "comment_body": "thanks for removing the file. can you address the LGTM alerts."
    },
    {
        "number": 1335,
        "repo": "sai",
        "comment_at": "2021-12-16T20:11:01Z",
        "comment_author": "aljer",
        "comment_body": "> thanks for removing the file. can you address the LGTM alerts.\r\n\r\n@smaheshm As I explained here https://github.com/opencomputeproject/SAI/pull/1335#issuecomment-989732708 these two imports causing the alerts are required by all other test modules. This is one of a framework assumptions."
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-11-03T16:37:33Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-11-03T16:51:15Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-11-03T17:02:24Z",
        "review_author": "ravi861"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-11-09T10:14:10Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-09T06:13:04Z",
        "review_author": "rlhui"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-09T09:09:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-13T21:05:10Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-13T21:12:17Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-13T21:27:21Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-13T21:59:58Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T07:11:42Z",
        "review_author": "rlhui"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T13:32:32Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T19:09:03Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T19:14:45Z",
        "review_author": "ravi861"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T19:19:34Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T19:21:26Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-15T23:08:43Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-16T06:15:02Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-16T16:55:53Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-16T19:01:52Z",
        "review_author": "aljer"
    },
    {
        "number": 1335,
        "repo": "sai",
        "review_at": "2021-12-16T20:53:02Z",
        "review_author": "smaheshm"
    },
    {
        "number": 1335,
        "repo": "sai",
        "latestReview_at": "2021-12-15T13:32:32Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1335,
        "repo": "sai",
        "latestReview_at": "2021-12-15T19:14:45Z",
        "latestReview_author": "ravi861",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1335,
        "repo": "sai",
        "latestReview_at": "2021-12-15T07:11:42Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1335,
        "repo": "sai",
        "latestReview_at": "2021-11-09T10:14:10Z",
        "latestReview_author": "richardyu-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1335,
        "repo": "sai",
        "latestReview_at": "2021-12-16T20:53:02Z",
        "latestReview_author": "smaheshm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1334,
        "repo": "sai",
        "comment_at": "2021-11-11T18:34:18Z",
        "comment_author": "SarathBug",
        "comment_body": "Hi @kcudnik \r\n\r\nCan this be merged to 1.9.1?"
    },
    {
        "number": 1334,
        "repo": "sai",
        "comment_at": "2021-11-15T13:32:26Z",
        "comment_author": "kcudnik",
        "comment_body": "sure, i will try to prepare PR"
    },
    {
        "number": 1334,
        "repo": "sai",
        "comment_at": "2021-11-16T12:21:40Z",
        "comment_author": "kcudnik",
        "comment_body": "here https://github.com/opencomputeproject/SAI/pull/1340"
    },
    {
        "number": 1334,
        "repo": "sai",
        "review_at": "2021-11-02T17:34:25Z",
        "review_author": "SarathBug"
    },
    {
        "number": 1334,
        "repo": "sai",
        "latestReview_at": "2021-11-02T17:34:25Z",
        "latestReview_author": "SarathBug",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1332,
        "repo": "sai",
        "comment_at": "2021-11-10T01:25:26Z",
        "comment_author": "sachinv-msft",
        "comment_body": "@kcudnik could you please merge this PR?"
    },
    {
        "number": 1332,
        "repo": "sai",
        "comment_at": "2021-11-15T12:58:52Z",
        "comment_author": "kcudnik",
        "comment_body": "was this approved by community sai meeting?"
    },
    {
        "number": 1332,
        "repo": "sai",
        "review_at": "2021-11-03T16:33:54Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1332,
        "repo": "sai",
        "review_at": "2021-11-16T22:11:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 1332,
        "repo": "sai",
        "latestReview_at": "2021-11-16T22:11:22Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1332,
        "repo": "sai",
        "latestReview_at": "2021-11-03T16:33:54Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1329,
        "repo": "sai",
        "review_at": "2021-10-21T15:09:56Z",
        "review_author": "lguohan"
    },
    {
        "number": 1329,
        "repo": "sai",
        "latestReview_at": "2021-10-21T15:09:56Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1328,
        "repo": "sai",
        "review_at": "2021-10-23T04:10:24Z",
        "review_author": "lguohan"
    },
    {
        "number": 1328,
        "repo": "sai",
        "latestReview_at": "2021-10-23T04:10:24Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1327,
        "repo": "sai",
        "review_at": "2021-10-22T05:19:22Z",
        "review_author": "lguohan"
    },
    {
        "number": 1327,
        "repo": "sai",
        "latestReview_at": "2021-10-22T05:19:22Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-28T16:41:42Z",
        "comment_author": "rlhui",
        "comment_body": "@rck-innovium , @richardyu-ms - would you please review?"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-28T16:44:26Z",
        "comment_author": "rlhui",
        "comment_body": "@gechiang  - please help review, thanks."
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-28T18:23:54Z",
        "comment_author": "kcudnik",
        "comment_body": "not sure if that entire rpc should be generated each time when metadata is generated, should that be a different target in makefile ?"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-28T18:24:53Z",
        "comment_author": "kcudnik",
        "comment_body": "also errors:\r\n```\r\nperl gensairpc.pl\r\nCan't locate Template.pm in @INC (you may need to install the Template module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.28.1 /usr/local/share/perl/5.28.1 /usr/lib/x86_64-linux-gnu/perl5/5.28 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.28 /usr/share/perl/5.28 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base) at gensairpc.pl line 41.\r\nBEGIN failed--compilation aborted at gensairpc.pl line 41.\r\n```"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-29T04:00:10Z",
        "comment_author": "ravi861",
        "comment_body": "> not sure if that entire rpc should be generated each time when metadata is generated, should that be a different target in makefile ?\r\n\r\nWould \"make rpc\" be more appropriate and not built by default?"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-10-29T10:47:23Z",
        "comment_author": "kcudnik",
        "comment_body": "> > not sure if that entire rpc should be generated each time when metadata is generated, should that be a different target in makefile ?\r\n> \r\n> Would \"make rpc\" be more appropriate and not built by default?\r\n\r\nyea seems good to me"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-10T22:26:29Z",
        "comment_author": "ravi861",
        "comment_body": "@lguohan @rlhui Should we give more time for reviews or can we go ahead with merge?"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-13T00:00:02Z",
        "comment_author": "KrisNey-MSFT",
        "comment_body": "Hi team, per our SONiC-DASH-Test-Workgroup community meeting this morning, may we ask to accommodate SONiC-DASH (NIC) as we move forward?  @chrispsommers @rlhui @ravi861 \r\nWe are hoping to leverage SAI-Thrift for test purposes.\r\nThank you, @Krisney-MSFT"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-16T00:17:19Z",
        "comment_author": "ravi861",
        "comment_body": "@KrisNey-MSFT Can you please reach out to me over email ravi.vantipalli@intel.com for what you are looking for?"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-16T02:06:25Z",
        "comment_author": "KrisNey-MSFT",
        "comment_body": "Yes, will do - thank you.\nKristina\n\n\n\nKristina Moore, MBA, M.S., CISSP\n\nPrincipal Program Manager\n\nAzure Networking \u2013 Hardware/Switching/Performance\n\n400G New Tech\n\nOffice:   40/4J00\n\nMobile:   (425) 876- 2040<tel:(425)%20876-%202040>\n\n***@***.******@***.***>\n\n\n\n***@***.***\n\n\n\n\n\n________________________________\nFrom: Ravi Vantipalli ***@***.***>\nSent: Monday, November 15, 2021 4:17 PM\nTo: opencomputeproject/SAI ***@***.***>\nCc: Kristina Moore ***@***.***>; Mention ***@***.***>\nSubject: Re: [opencomputeproject/SAI] SAI PTF 1: Proposal (#1325)\n\n\n@KrisNey-MSFT<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FKrisNey-MSFT&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554849490%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=QRh%2FR4giWydEcUms2FWn2L%2FWOCaQjv0BOKmbZ2wXLVw%3D&reserved=0> Can you please reach out to me over email ***@***.******@***.***> for what you are looking for?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F1325%23issuecomment-969484818&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554859478%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=phe%2Bg1PXAXAIcwmeTw8aVADAC0pD3dSGZtb4QvlZlKc%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAFJSI6GHI76X47753CKCP2DUMGPJVANCNFSM5F5Q6YEA&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554859478%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=qSjvFHYWpxUpbxqyFosuf1OQgiPWu7W1bkVBlJeXhjo%3D&reserved=0>.\nTriage notifications on the go with GitHub Mobile for iOS<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapps.apple.com%2Fapp%2Fapple-store%2Fid1477376905%3Fct%3Dnotification-email%26mt%3D8%26pt%3D524675&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554869466%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=zUEpCUZvIQl5CZxCh3nSHEogk%2F%2Fsis5dYrDZYU5oKCk%3D&reserved=0> or Android<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.github.android%26referrer%3Dutm_campaign%253Dnotification-email%2526utm_medium%253Demail%2526utm_source%253Dgithub&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554879468%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=N9%2BePwD4dowOAEEGqQh%2FxuoX3MUoTieHYy4fFyoeeUg%3D&reserved=0>.\n"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-16T04:32:37Z",
        "comment_author": "KrisNey-MSFT",
        "comment_body": "Thanks Ravi, would you want to chat tomorrow at 1pm or so?  My #'s are below, or you could give me yours..?\n\n***@***.***\n\nKristina Moore MBA, M.S., CISSP\nAzure Core Principal PM\nDASH\n\nOffice: 425-722-7720\nMobile: 425-876-2040\n***@***.***\n\n***@***.***\n\nFrom: Ravi Vantipalli ***@***.***>\nSent: Monday, November 15, 2021 4:18 PM\nTo: opencomputeproject/SAI ***@***.***>\nCc: Kristina Moore ***@***.***>; Mention ***@***.***>\nSubject: Re: [opencomputeproject/SAI] SAI PTF 1: Proposal (#1325)\n\n\n@KrisNey-MSFT<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FKrisNey-MSFT&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554849490%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=QRh%2FR4giWydEcUms2FWn2L%2FWOCaQjv0BOKmbZ2wXLVw%3D&reserved=0> Can you please reach out to me over email ***@***.******@***.***> for what you are looking for?\n\n-\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopencomputeproject%2FSAI%2Fpull%2F1325%23issuecomment-969484818&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554859478%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=phe%2Bg1PXAXAIcwmeTw8aVADAC0pD3dSGZtb4QvlZlKc%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAFJSI6GHI76X47753CKCP2DUMGPJVANCNFSM5F5Q6YEA&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554859478%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=qSjvFHYWpxUpbxqyFosuf1OQgiPWu7W1bkVBlJeXhjo%3D&reserved=0>.\nTriage notifications on the go with GitHub Mobile for iOS<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapps.apple.com%2Fapp%2Fapple-store%2Fid1477376905%3Fct%3Dnotification-email%26mt%3D8%26pt%3D524675&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554869466%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=zUEpCUZvIQl5CZxCh3nSHEogk%2F%2Fsis5dYrDZYU5oKCk%3D&reserved=0> or Android<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.github.android%26referrer%3Dutm_campaign%253Dnotification-email%2526utm_medium%253Demail%2526utm_source%253Dgithub&data=04%7C01%7Ckrisney%40microsoft.com%7Cd903319ee89742b5196908d9a8967aba%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637726186554879468%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=N9%2BePwD4dowOAEEGqQh%2FxuoX3MUoTieHYy4fFyoeeUg%3D&reserved=0>.\n"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-16T22:04:51Z",
        "comment_author": "rlhui",
        "comment_body": "Adding @smaheshm  to review as well."
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-16T22:34:04Z",
        "comment_author": "reshmaintel",
        "comment_body": "@KrisNey-MSFT Hi Kristina, would you please include me in the SAI PTF call with Ravi/Intel. Alternately I can arrange a meeting for all of us to discuss. Thanks,"
    },
    {
        "number": 1325,
        "repo": "sai",
        "comment_at": "2021-11-17T04:58:53Z",
        "comment_author": "richardyu-ms",
        "comment_body": "> @KrisNey-MSFT Hi Kristina, would you please include me in the SAI PTF call with Ravi/Intel. Alternately I can arrange a meeting for all of us to discuss. Thanks,\r\n\r\nMe too, thanks."
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-03T09:46:29Z",
        "review_author": "aljer"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-04T14:21:37Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-04T15:02:52Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-04T15:15:12Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-05T07:35:56Z",
        "review_author": "aljer"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-05T07:39:51Z",
        "review_author": "aljer"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-05T14:14:43Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-07T13:06:35Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-07T13:27:16Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T03:07:24Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T05:26:53Z",
        "review_author": "ravi861"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T08:54:52Z",
        "review_author": "pkochmanska"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T08:56:58Z",
        "review_author": "aljer"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T10:01:45Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-11-09T10:06:25Z",
        "review_author": "richardyu-ms"
    },
    {
        "number": 1325,
        "repo": "sai",
        "review_at": "2021-12-09T06:05:55Z",
        "review_author": "rlhui"
    },
    {
        "number": 1325,
        "repo": "sai",
        "latestReview_at": "2021-11-09T05:26:53Z",
        "latestReview_author": "ravi861",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1325,
        "repo": "sai",
        "latestReview_at": "2021-11-09T08:56:58Z",
        "latestReview_author": "aljer",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1325,
        "repo": "sai",
        "latestReview_at": "2021-11-09T10:06:25Z",
        "latestReview_author": "richardyu-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1325,
        "repo": "sai",
        "latestReview_at": "2021-11-05T14:14:43Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1325,
        "repo": "sai",
        "latestReview_at": "2021-12-09T06:05:55Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1321,
        "repo": "sai",
        "review_at": "2021-10-05T00:43:11Z",
        "review_author": "rlhui"
    },
    {
        "number": 1321,
        "repo": "sai",
        "latestReview_at": "2021-10-05T00:43:11Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1320,
        "repo": "sai",
        "review_at": "2021-09-30T17:56:35Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1320,
        "repo": "sai",
        "latestReview_at": "2021-09-30T17:56:35Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1318,
        "repo": "sai",
        "comment_at": "2021-09-27T09:36:30Z",
        "comment_author": "kcudnik",
        "comment_body": "it adds this struct and all global apis _fn definitions\r\n\r\n```\r\ntypedef struct _sai_global_apis_t {\r\n    sai_api_initialize_fn api_initialize;\r\n    sai_api_query_fn api_query;\r\n    sai_api_uninitialize_fn api_uninitialize;\r\n    sai_bulk_get_attribute_fn bulk_get_attribute;\r\n    sai_dbg_generate_dump_fn dbg_generate_dump;\r\n    sai_get_maximum_attribute_count_fn get_maximum_attribute_count;\r\n    sai_get_object_count_fn get_object_count;\r\n    sai_get_object_key_fn get_object_key;\r\n    sai_log_set_fn log_set;\r\n    sai_object_type_get_availability_fn object_type_get_availability;\r\n    sai_object_type_query_fn object_type_query;\r\n    sai_query_attribute_capability_fn query_attribute_capability;\r\n    sai_query_attribute_enum_values_capability_fn query_attribute_enum_values_capability;\r\n    sai_query_stats_capability_fn query_stats_capability;\r\n    sai_switch_id_query_fn switch_id_query;\r\n    sai_tam_telemetry_get_data_fn tam_telemetry_get_data;\r\n} sai_global_apis_t;\r\n```"
    },
    {
        "number": 1317,
        "repo": "sai",
        "comment_at": "2021-09-24T13:01:10Z",
        "comment_author": "kcudnik",
        "comment_body": "@itaibaz fyi, can you test this PR on  your side before i merge it ?"
    },
    {
        "number": 1317,
        "repo": "sai",
        "comment_at": "2021-09-28T03:32:00Z",
        "comment_author": "itaibaz",
        "comment_body": "@kcudnik \r\nI tested the PR and compilation now passes fine\r\nThanks"
    },
    {
        "number": 1317,
        "repo": "sai",
        "review_at": "2021-09-28T03:32:14Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1317,
        "repo": "sai",
        "latestReview_at": "2021-09-28T03:32:14Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1310,
        "repo": "sai",
        "comment_at": "2021-09-21T04:42:55Z",
        "comment_author": "rlhui",
        "comment_body": "Update SAI version to v1.9.0"
    },
    {
        "number": 1309,
        "repo": "sai",
        "review_at": "2021-09-20T19:22:58Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1309,
        "repo": "sai",
        "latestReview_at": "2021-09-20T19:22:58Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1306,
        "repo": "sai",
        "comment_at": "2021-09-08T08:36:28Z",
        "comment_author": "aljer",
        "comment_body": "I don't know how to deal with Azure checker error related to enum value shift. I got such a log:\r\nChecking for possible enum values shift (current branch vs origin/master) ...\r\nERROR: value of SAI_IN_DROP_REASON_END differ: ../inc//saidebugcounter.h:254 vs temp/inc//saidebugcounter.h:244 => (55 != 54)\r\nenum SAI_IN_DROP_REASON_SRV6_LOCAL_SID_DROP only defined in ../inc//saidebugcounter.h:252\r\nERROR: value of SAI_IN_DROP_REASON_END differ: temp/inc//saidebugcounter.h:244 vs ../inc//saidebugcounter.h:254 => (54 != 55)\r\nbut the shift is unavoidable. What should I do with this?"
    },
    {
        "number": 1306,
        "repo": "sai",
        "comment_at": "2021-09-08T09:10:24Z",
        "comment_author": "kcudnik",
        "comment_body": "SAI_IN_DROP_REASON_END needs to be added into exceptions in checkheaders.pl line 190"
    },
    {
        "number": 1306,
        "repo": "sai",
        "comment_at": "2021-09-08T15:55:19Z",
        "comment_author": "ashutosh-agrawal",
        "comment_body": "@pcamaril @skraza @israel-meilik Please review. "
    },
    {
        "number": 1306,
        "repo": "sai",
        "review_at": "2021-09-08T09:46:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1306,
        "repo": "sai",
        "review_at": "2021-09-09T06:44:54Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1306,
        "repo": "sai",
        "review_at": "2021-09-10T01:23:51Z",
        "review_author": "rlhui"
    },
    {
        "number": 1306,
        "repo": "sai",
        "latestReview_at": "2021-09-08T09:46:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1306,
        "repo": "sai",
        "latestReview_at": "2021-09-09T06:44:54Z",
        "latestReview_author": "pcamaril",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1306,
        "repo": "sai",
        "latestReview_at": "2021-09-10T01:23:51Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-08T05:38:03Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @dipankar-ba , @kcudnik , @qbdwlr , @sujinmkang , @mikeberesford , @kperumalbfn  - would you please help review and sign off this release notes for previous SAI header v1.8.1?  Thanks."
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-08T14:42:16Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hi Rita,\n\nCan we review this in Thursday meeting.\n\nI see various enums being added in middle. This will cause the warm boot issue again.\n\nRegards,\n-Jai\n\n> On Sep 8, 2021, at 2:05 AM, Kamil Cudnik ***@***.***> wrote:\n> \n> \ufeff\n> @kcudnik approved this pull request.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n\n-- \nThis electronic communication and the information and any files transmitted \nwith it, or attached to it, are confidential and are intended solely for \nthe use of the individual or entity to whom it is addressed and may contain \ninformation that is confidential, legally privileged, protected by privacy \nlaws, or otherwise restricted from disclosure to anyone else. If you are \nnot the intended recipient or the person responsible for delivering the \ne-mail to the intended recipient, you are hereby notified that any use, \ncopying, distributing, dissemination, forwarding, printing, or copying of \nthis e-mail is strictly prohibited. If you received this e-mail in error, \nplease return the e-mail to the sender, delete it from your computer, and \ndestroy any printed copy of it.\n"
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-15T04:42:05Z",
        "comment_author": "xinliu-seattle",
        "comment_body": "@JaiOCP will you be able to sign off? thanks."
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-15T07:03:39Z",
        "comment_author": "JaiOCP",
        "comment_body": "Hi Xin,\n\nJust closings on some enum reordering issue with Guohan.\n\nHi Guohan,\nDo we want to address the warm boot issue for reordered enums for this release?\n\nRegards,\n-Jai\n\n> On Sep 14, 2021, at 9:42 PM, Xin Liu ***@***.***> wrote:\n> \n> \ufeff\n> @JaiOCP will you be able to sign off? thanks.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n\n-- \nThis electronic communication and the information and any files transmitted \nwith it, or attached to it, are confidential and are intended solely for \nthe use of the individual or entity to whom it is addressed and may contain \ninformation that is confidential, legally privileged, protected by privacy \nlaws, or otherwise restricted from disclosure to anyone else. If you are \nnot the intended recipient or the person responsible for delivering the \ne-mail to the intended recipient, you are hereby notified that any use, \ncopying, distributing, dissemination, forwarding, printing, or copying of \nthis e-mail is strictly prohibited. If you received this e-mail in error, \nplease return the e-mail to the sender, delete it from your computer, and \ndestroy any printed copy of it.\n"
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-15T16:36:49Z",
        "comment_author": "rlhui",
        "comment_body": "> Hi Xin, Just closings on some enum reordering issue with Guohan. Hi Guohan, Do we want to address the warm boot issue for reordered enums for this release? Regards, -Jai\r\n> [\u2026](#)\r\n> On Sep 14, 2021, at 9:42 PM, Xin Liu ***@***.***> wrote: \ufeff @JaiOCP will you be able to sign off? thanks. \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or unsubscribe. Triage notifications on the go with GitHub Mobile for iOS or Android.\r\n> -- This electronic communication and the information and any files transmitted with it, or attached to it, are confidential and are intended solely for the use of the individual or entity to whom it is addressed and may contain information that is confidential, legally privileged, protected by privacy laws, or otherwise restricted from disclosure to anyone else. If you are not the intended recipient or the person responsible for delivering the e-mail to the intended recipient, you are hereby notified that any use, copying, distributing, dissemination, forwarding, printing, or copying of this e-mail is strictly prohibited. If you received this e-mail in error, please return the e-mail to the sender, delete it from your computer, and destroy any printed copy of it.\r\n\r\n@JaiOCP  - this notes is for SAI v1.8.1, which did not have the enum assignment PR yet.  When the related PRs are back-ported to the v1.8 branch, it'd be v1.8.2. So it's OK that this release notes do not contain enum description."
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-15T19:21:29Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > Hi Xin, Just closings on some enum reordering issue with Guohan. Hi Guohan, Do we want to address the warm boot issue for reordered enums for this release? Regards, -Jai\r\n> > [\u2026](#)\r\n> > On Sep 14, 2021, at 9:42 PM, Xin Liu _**@**_.***> wrote: \ufeff @JaiOCP will you be able to sign off? thanks. \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or unsubscribe. Triage notifications on the go with GitHub Mobile for iOS or Android.\r\n> > -- This electronic communication and the information and any files transmitted with it, or attached to it, are confidential and are intended solely for the use of the individual or entity to whom it is addressed and may contain information that is confidential, legally privileged, protected by privacy laws, or otherwise restricted from disclosure to anyone else. If you are not the intended recipient or the person responsible for delivering the e-mail to the intended recipient, you are hereby notified that any use, copying, distributing, dissemination, forwarding, printing, or copying of this e-mail is strictly prohibited. If you received this e-mail in error, please return the e-mail to the sender, delete it from your computer, and destroy any printed copy of it.\r\n> \r\n> @JaiOCP - this notes is for SAI v1.8.1, which did not have the enum assignment PR yet. When the related PRs are back-ported to the v1.8 branch, it'd be v1.8.2. So it's OK that this release notes do not contain enum description.\r\n\r\nThanks Rita for clarification."
    },
    {
        "number": 1305,
        "repo": "sai",
        "comment_at": "2021-09-18T01:38:55Z",
        "comment_author": "rlhui",
        "comment_body": "@kannankvs - would you please help fix DCO error? thanks."
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-08T09:04:52Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-08T14:43:50Z",
        "review_author": "qbdwlr"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-08T15:59:32Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-08T17:03:36Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-09T00:07:06Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-14T04:29:38Z",
        "review_author": "sujinmkang"
    },
    {
        "number": 1305,
        "repo": "sai",
        "review_at": "2021-09-15T19:21:41Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-08T09:04:52Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-08T17:03:36Z",
        "latestReview_author": "kperumalbfn",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-15T19:21:41Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-08T14:43:50Z",
        "latestReview_author": "qbdwlr",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-14T04:29:38Z",
        "latestReview_author": "sujinmkang",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-09T00:07:06Z",
        "latestReview_author": "dipankar-ba",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1305,
        "repo": "sai",
        "latestReview_at": "2021-09-08T15:59:32Z",
        "latestReview_author": "mikeberesford",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1298,
        "repo": "sai",
        "comment_at": "2021-08-27T14:04:27Z",
        "comment_author": "kcudnik",
        "comment_body": "/azp run"
    },
    {
        "number": 1298,
        "repo": "sai",
        "comment_at": "2021-08-27T14:04:36Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 1296,
        "repo": "sai",
        "review_at": "2021-08-26T05:18:59Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1296,
        "repo": "sai",
        "latestReview_at": "2021-08-26T05:18:59Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1290,
        "repo": "sai",
        "review_at": "2021-08-15T01:26:48Z",
        "review_author": "lguohan"
    },
    {
        "number": 1290,
        "repo": "sai",
        "latestReview_at": "2021-08-15T01:26:48Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1286,
        "repo": "sai",
        "review_at": "2021-08-02T05:02:53Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1286,
        "repo": "sai",
        "latestReview_at": "2021-08-02T05:02:53Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1285,
        "repo": "sai",
        "review_at": "2021-08-02T05:02:33Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1285,
        "repo": "sai",
        "latestReview_at": "2021-08-02T05:02:33Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1284,
        "repo": "sai",
        "review_at": "2021-08-01T11:17:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1284,
        "repo": "sai",
        "latestReview_at": "2021-08-01T11:17:05Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1283,
        "repo": "sai",
        "review_at": "2021-07-30T07:35:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1283,
        "repo": "sai",
        "latestReview_at": "2021-07-30T07:35:28Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1269,
        "repo": "sai",
        "comment_at": "2021-07-15T02:19:23Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @ashutosh-agrawal , @rck-innovium  - please help review/sign-off?  Thanks."
    },
    {
        "number": 1269,
        "repo": "sai",
        "comment_at": "2021-07-28T21:10:18Z",
        "comment_author": "marian-pritsak",
        "comment_body": "> Is there any impact if NVGRE mappers are created and assigned at switch level for tunnel encapsulated/decap ?\r\n> API will not prevent switch level configuration for NVGRE.\r\n\r\nSwitch level mappers are applied per tunnel type (SAI_SWITCH_TUNNEL_ATTR_TUNNEL_TYPE), and whatever will be applied for NVGRE at switch level, will not affect the rest."
    },
    {
        "number": 1269,
        "repo": "sai",
        "comment_at": "2021-07-28T21:21:01Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > Is there any impact if NVGRE mappers are created and assigned at switch level for tunnel encapsulated/decap ?\r\n> > API will not prevent switch level configuration for NVGRE.\r\n> \r\n> Switch level mappers are applied per tunnel type (SAI_SWITCH_TUNNEL_ATTR_TUNNEL_TYPE), and whatever will be applied for NVGRE at switch level, will not affect the rest.\r\n\r\nSo we are saying switch level configuration for NVGRE is supported as well. Please confirm."
    },
    {
        "number": 1269,
        "repo": "sai",
        "comment_at": "2021-08-04T16:40:28Z",
        "comment_author": "marian-pritsak",
        "comment_body": "> > > Is there any impact if NVGRE mappers are created and assigned at switch level for tunnel encapsulated/decap ?\r\n> > > API will not prevent switch level configuration for NVGRE.\r\n> > \r\n> > \r\n> > Switch level mappers are applied per tunnel type (SAI_SWITCH_TUNNEL_ATTR_TUNNEL_TYPE), and whatever will be applied for NVGRE at switch level, will not affect the rest.\r\n> \r\n> So we are saying switch level configuration for NVGRE is supported as well. Please confirm.\r\n\r\nYes, that is correct"
    },
    {
        "number": 1269,
        "repo": "sai",
        "review_at": "2021-07-06T12:07:57Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1269,
        "repo": "sai",
        "review_at": "2021-07-26T20:56:11Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1269,
        "repo": "sai",
        "review_at": "2021-07-27T23:40:09Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1269,
        "repo": "sai",
        "review_at": "2021-08-04T16:57:58Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1269,
        "repo": "sai",
        "latestReview_at": "2021-07-27T23:40:09Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1269,
        "repo": "sai",
        "latestReview_at": "2021-07-06T12:07:57Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1269,
        "repo": "sai",
        "latestReview_at": "2021-08-04T16:57:58Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1267,
        "repo": "sai",
        "comment_at": "2021-07-04T07:48:16Z",
        "comment_author": "gregshpit",
        "comment_body": "Hi,\r\n\r\nI think do pass CROSS_COMPILE variable to the Makefile. If it is true (I'll check it) then instead of:\r\n+ifeq ($(CROSS_BUILD_ENVIRON),y)\r\n+    CC=$(CROSS_CC)\r\n+    CXX=$(CROSS_CXX)\r\n+else\r\n+    CC=gcc\r\n+    CXX=g++\r\n+endif\r\n\r\nI can just write as you suggested in all modified files:\r\nCC = $(CROSS_COMPILE)gcc\r\nCXX = $(CROSS_COMPILE)g++\r\n\r\nIs it OK with you.\r\n\r\nGregory"
    },
    {
        "number": 1267,
        "repo": "sai",
        "comment_at": "2021-07-04T08:25:37Z",
        "comment_author": "kcudnik",
        "comment_body": "> I can just write as you suggested in all modified files:\r\n> CC = $(CROSS_COMPILE)gcc\r\n> CXX = $(CROSS_COMPILE)g++\r\n> \r\n> Is it OK with you.\r\n\r\nyes, this is exactly what i had in mind!"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-01T15:38:06Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-02T16:11:26Z",
        "review_author": "gregshpit"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-03T08:13:44Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-03T08:21:21Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-03T09:56:22Z",
        "review_author": "gregshpit"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-04T19:51:45Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1267,
        "repo": "sai",
        "review_at": "2021-07-06T14:34:11Z",
        "review_author": "lguohan"
    },
    {
        "number": 1267,
        "repo": "sai",
        "latestReview_at": "2021-07-06T14:34:11Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1267,
        "repo": "sai",
        "latestReview_at": "2021-07-04T19:51:45Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1266,
        "repo": "sai",
        "comment_at": "2021-06-30T15:12:09Z",
        "comment_author": "kcudnik",
        "comment_body": "This is not critical change, since all attributes after SAI_ACL_TABLE_ATTR_FIELD_END are readonly."
    },
    {
        "number": 1266,
        "repo": "sai",
        "review_at": "2021-07-01T16:26:59Z",
        "review_author": "lguohan"
    },
    {
        "number": 1266,
        "repo": "sai",
        "latestReview_at": "2021-07-01T16:26:59Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1265,
        "repo": "sai",
        "comment_at": "2021-06-30T14:52:15Z",
        "comment_author": "kcudnik",
        "comment_body": "Requires https://github.com/opencomputeproject/SAI/pull/1264 to pass"
    },
    {
        "number": 1264,
        "repo": "sai",
        "review_at": "2021-07-01T16:28:11Z",
        "review_author": "lguohan"
    },
    {
        "number": 1264,
        "repo": "sai",
        "latestReview_at": "2021-07-01T16:28:11Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1262,
        "repo": "sai",
        "comment_at": "2021-07-01T00:44:35Z",
        "comment_author": "Pterosaur",
        "comment_body": "This PR need to be discussed with Guohan further, so just draft it again."
    },
    {
        "number": 1262,
        "repo": "sai",
        "comment_at": "2021-07-15T16:31:56Z",
        "comment_author": "rlhui",
        "comment_body": "Discussed in community meeting that https://github.com/opencomputeproject/SAI/pull/1256 should be merged in before this one."
    },
    {
        "number": 1262,
        "repo": "sai",
        "comment_at": "2021-07-29T09:57:07Z",
        "comment_author": "kcudnik",
        "comment_body": "attributes inserted in the middle and not in the end, maybe dont merge this until we add enum values enforcement"
    },
    {
        "number": 1262,
        "repo": "sai",
        "comment_at": "2021-07-30T00:18:06Z",
        "comment_author": "dipankar-ba",
        "comment_body": "Hi Kamil,\n\nI tried moving all attributes to the end of enums.  If you notice anything\nelse, please let me know.\n\n- Dipankar\n\n\nOn Thu, Jul 29, 2021 at 2:57 AM Kamil Cudnik ***@***.***>\nwrote:\n\n> attributes inserted in the middle and not in the end, maybe dont merge\n> this until we add enum values enforcement\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1262#issuecomment-888979350>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXIHLOI43WEIAXHIMCDT2EQX5ANCNFSM47RQYBEA>\n> .\n>\n"
    },
    {
        "number": 1262,
        "repo": "sai",
        "comment_at": "2021-08-17T15:13:47Z",
        "comment_author": "Pterosaur",
        "comment_body": "> > Hi Kamil, I tried moving all attributes to the end of enums. If you notice anything else, please let me know.\r\n> \r\n> both attributes are in this PR are still added int the middle of PORT enum, please add them at the end. We will allow explicit enum values to place them in the middle, probably in this week, since that change hangs for over a month, so you can ether wait or move them and the end, and after that, bringthem back to where you want\r\n\r\nHi Kamil, I moved them to the end of enums. Please review it."
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-06-30T10:09:59Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-06-30T11:10:21Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-01T06:24:15Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-01T16:29:33Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-07T06:36:58Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-07T07:03:53Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-08T15:24:47Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-09T13:10:57Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-09T13:52:50Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-09T14:12:57Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-09T14:18:20Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-09T14:19:21Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-10T15:12:53Z",
        "review_author": "Pterosaur"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T19:27:28Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T19:29:14Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T19:29:26Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T19:31:04Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T19:33:45Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T20:47:27Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-13T21:46:47Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-07-29T05:39:17Z",
        "review_author": "lguohan"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-08-15T13:14:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-08-17T15:25:30Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1262,
        "repo": "sai",
        "review_at": "2021-08-19T01:56:28Z",
        "review_author": "rlhui"
    },
    {
        "number": 1262,
        "repo": "sai",
        "latestReview_at": "2021-08-19T01:56:28Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1262,
        "repo": "sai",
        "latestReview_at": "2021-07-13T21:46:47Z",
        "latestReview_author": "dipankar-ba",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1262,
        "repo": "sai",
        "latestReview_at": "2021-07-29T05:39:17Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1262,
        "repo": "sai",
        "latestReview_at": "2021-08-17T15:25:30Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1261,
        "repo": "sai",
        "review_at": "2021-06-30T06:57:32Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1261,
        "repo": "sai",
        "review_at": "2021-06-30T20:18:33Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1261,
        "repo": "sai",
        "review_at": "2021-06-30T21:01:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1261,
        "repo": "sai",
        "review_at": "2021-07-02T09:15:51Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1261,
        "repo": "sai",
        "latestReview_at": "2021-06-30T21:01:34Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1261,
        "repo": "sai",
        "latestReview_at": "2021-07-02T09:15:51Z",
        "latestReview_author": "pcamaril",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-06-29T06:25:09Z",
        "comment_author": "shri-khare",
        "comment_body": "The meta checks fail here: ./meta/saisanitycheck.c\r\n\r\n META_ENUM_ASSERT_FAIL(emd, \"values are not increasing by 1: last: %d current: %d, should be marked as @flags?\", last, value);\r\n\r\nThis is expected as we are now introducing consecutive enum fields that are not increasing by 1 by design.\r\nPerhaps, we should remove this check from saisanitycheck.c?"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-06-29T07:05:02Z",
        "comment_author": "kcudnik",
        "comment_body": "> This is expected as we are now introducing consecutive enum fields that are not increasing by 1 by design.\r\n> Perhaps, we should remove this check from saisanitycheck.c?\r\n\r\nno, this check must stay, to make sure enums are consistent, there is no need to introduce gaps in enums. \r\nmetadata and metadata utils have a lot of assumption based on those sanity checks, and if those will be removed, then metadata utils will also break. for example currently enums values must increase (be sorted) since metadata utils search is based on this feature, and enum value cannot be determined at perl parsing time, since enums dont have explicit values and some enums are based on BASE + X value, it's much easier to compile metadata and do sanity checks, and this is what is happening right now. there is still away to maintains certain enums in \"ranges\" alike acl_entry fields and actions, by adding enums at the end of each specific range, since that range have explicit base  "
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-06-29T16:17:45Z",
        "comment_author": "shri-khare",
        "comment_body": "Thanks Kamil. \r\n\r\nPosted few questions about this here: https://github.com/opencomputeproject/SAI/pull/1256#issuecomment-870701601"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-06-29T22:05:43Z",
        "comment_author": "kcudnik",
        "comment_body": "> Posted few questions about this here: [#1256 (comment)](https://github.com/opencomputeproject/SAI/pull/1256#issuecomment-870701601)\r\n\r\ndone"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-02T11:07:36Z",
        "comment_author": "kcudnik",
        "comment_body": "Actually this PR is not needed, i addressed this in comment https://github.com/opencomputeproject/SAI/pull/1259#pullrequestreview-694659449, after checking #1256 those checks will be enforced"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-06T15:14:22Z",
        "comment_author": "kcudnik",
        "comment_body": "if you want to keep those values, \r\n```\r\nAI_ACL_ENTRY_ATTR_FIELD_IP_PROTOCOL = SAI_ACL_ENTRY_ATTR_FIELD_START + 0x1b,\r\n```\r\nit would be better to reorder those enums to achieve desired values, it would have better looking, and after enum lock PR merged, you never have to assign them explicitly, since they always will be locked"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-07T12:46:17Z",
        "comment_author": "kcudnik",
        "comment_body": "This change https://github.com/opencomputeproject/SAI/pull/1274 allows to not ordered enum values and should accept your changes"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-13T15:41:48Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @tushar-ty , @marian-pritsak , please help to review/approve as well.  Thanks."
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-15T16:34:40Z",
        "comment_author": "rlhui",
        "comment_body": "> @JaiOCP , @tushar-ty , @marian-pritsak , please help to review/approve as well. Thanks.\r\n\r\n@itaibaz , @ashutosh-agrawal , @rck-innovium - please feel free to review/approve as well.  Thanks."
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-22T15:37:50Z",
        "comment_author": "kcudnik",
        "comment_body": "> How do we know what's the last enum value to be used for new enums\r\n\r\nyou guess XD if you guess wrong, metadata validator will show you previous and current value"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-22T16:03:28Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > How do we know what's the last enum value to be used for new enums\r\n> \r\n> you guess XD if you guess wrong, metadata validator will show you previous and current value\r\n\r\nThanks Kamil,\r\nWould it make sense to have a \"XXX_ATTR_LAST_ENUM\" always updated with last value so that programmer do not have to hunt or guess the value. \r\nHow would MD checker catch a value if it is indeed the last but not contagious to the previous last enum value.\r\n"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-22T16:35:42Z",
        "comment_author": "kcudnik",
        "comment_body": "> How would MD checker catch a value if it is indeed the last but not contagious to the previous last enum value.\r\n\r\nmagic ! :P all enums must be contagious, even in respective ranges (there are some exceptions like sai_status_t or bit field based enums, and if enum value is duplicate then metadata will throw error on that, also not always you need to hunt last value, if you are adding enum at the end of list, you dont need to specify it explicitly, only when you are inserting enum in the middle\r\ncheck here https://github.com/opencomputeproject/SAI/blob/master/meta/saisanitycheck.c#L5090\r\n\r\nim not sure about concept with XXX_ATTR_LAST_ENUM, if you mean that this enum is artificially generated and explicitly set to a last value, then it will not work, since not always you want to add enum at the end, there are ranges based on 0x1000 index for example in hostif and acl, and you want to add specific value at the end of that specific range "
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-22T16:43:27Z",
        "comment_author": "JaiOCP",
        "comment_body": "> > How would MD checker catch a value if it is indeed the last but not contagious to the previous last enum value.\r\n> \r\n> magic ! :P all enums must be contagious, even in respective ranges (there are some exceptions like sai_status_t or bit field based enums, and if enum value is duplicate then metadata will throw error on that, also not always you need to hunt last value, if you are adding enum at the end of list, you dont need to specify it explicitly, only when you are inserting enum in the middle\r\n> check here https://github.com/opencomputeproject/SAI/blob/master/meta/saisanitycheck.c#L5090\r\n> \r\n> im not sure about concept with XXX_ATTR_LAST_ENUM, if you mean that this enum is artificially generated and explicitly set to a last value, then it will not work, since not always you want to add enum at the end, there are ranges based on 0x1000 index for example in hostif and acl, and you want to add specific value at the end of that specific range\r\n\r\nI like magic :)\r\nYes, I was thinking of autogenerated last enum value but I see your point. It will indeed get tricky for ranges."
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-23T11:48:35Z",
        "comment_author": "kcudnik",
        "comment_body": "@JaiOCP @lguohan @shri-khare i make  git diff 2cc5ba0 origin/master where that commit is branch (tag: v1.6.5) and i found other attributes added in the middle besides acl:\r\n\r\nattributes between 1.6.5 and origin/master that caused shift in enums:\r\n- many ACL attributes an HASH (addressed in this PR)\r\n- many SAI_SWITCH_ATTR_* added in the middle\r\n- many shifts in SAI_MACSEC_SC_ATTR_* \r\n- many shifts in SAI_MACSEC_SA_ATTR_*\r\n- segmentroute api was rename to SRV6, cause to shift many SAI_NEXT_HOP_ATTR_* \r\n- many SAI_PORT_INTERFACE_TYPE_* added in the middle \r\n- many SAI_PORT_ATTR_* added in the middle \r\n- many  SAI_PORT_STAT_* added in the middle\r\n- many  SAI_TUNNEL_ATTR_* added in the middle\r\n\r\nmany other attributes were added but at the end of list, so does not break anything\r\n\r\nShould this be fixed before merging this? or you just want acl and hash, ignoring other changes? we can actually make fix for that even after marge this, but i **will need a base commit ID from which we want to be binary backward compatible**, but that fix would need to be on master, and from master we would check compatibility. There is also some issue, that entire segment route object was renamed to srv6 object in the meantime\r\n"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-07-23T15:55:46Z",
        "comment_author": "JaiOCP",
        "comment_body": "> @JaiOCP @lguohan @shri-khare i make git diff [2cc5ba0](https://github.com/opencomputeproject/SAI/commit/2cc5ba070a126dab9d29dca60dcb3ea01e9e77be) origin/master where that commit is branch (tag: v1.6.5) and i found other attributes added in the middle besides acl:\r\n> \r\n> attributes between 1.6.5 and origin/master that caused shift in enums:\r\n> \r\n> * many ACL attributes an HASH (addressed in this PR)\r\n> * many SAI_SWITCH_ATTR_* added in the middle\r\n> * many shifts in SAI_MACSEC_SC_ATTR_*\r\n> * many shifts in SAI_MACSEC_SA_ATTR_*\r\n> * segmentroute api was rename to SRV6, cause to shift many SAI_NEXT_HOP_ATTR_*\r\n> * many SAI_PORT_INTERFACE_TYPE_* added in the middle\r\n> * many SAI_PORT_ATTR_* added in the middle\r\n> * many  SAI_PORT_STAT_* added in the middle\r\n> * many  SAI_TUNNEL_ATTR_* added in the middle\r\n> \r\n> many other attributes were added but at the end of list, so does not break anything\r\n> \r\n> Should this be fixed before merging this? or you just want acl and hash, ignoring other changes? we can actually make fix for that even after marge this, but i **will need a base commit ID from which we want to be binary backward compatible**, but that fix would need to be on master, and from master we would check compatibility. There is also some issue, that entire segment route object was renamed to srv6 object in the meantime\r\n\r\nGiven that no one has complained for these attributes and warm boot, I would say its safe to fix these attributes while we are at it.\r\n\r\n@lguohan What do you think?"
    },
    {
        "number": 1259,
        "repo": "sai",
        "comment_at": "2021-08-17T13:06:29Z",
        "comment_author": "kcudnik",
        "comment_body": "I wrote a tool to list those attributes, and this also will be later doing validation on each PR. couple infos:\r\n1.6.5 is on 2cc5ba0, diverges from master on ec7e055 (1.6.0)\r\n1.8 is on 5254200, diverges from master on 5a98bc3 (1.8.0)\r\n\r\nso diff ec7e055 to 2cc5ba0 (master to 1.6.5) (excluding acl_table, acl_entry, tam_int and macsec:\r\n```\r\nERROR: check ! SAI_VLAN_ATTR_CUSTOM_IGMP_SNOOPING_ENABLE value is 0x00000014, but on was 0x10000001 on commit ec7e055\r\nERROR: check ! SAI_VLAN_ATTR_TAM_OBJECT value is 0x00000015, but on was 0x10000002 on commit ec7e055\r\n```\r\nthis vlan can be skipped, i remember bringing it back from custom range to attr range\r\n\r\n5a98bc3 to 5254200 has no changes \r\n\r\nand ec7e055 to origin/master (total 347 enum values affected, too much to list here but those are numbers:\r\n```\r\n     31 SAI_ACL_ACTION_TYPE_\r\n      1 SAI_LAG_ATTR_SYSTEM_PORT_AGGREGATE_ID\r\n     21 SAI_NATIVE_HASH_FIELD_\r\n      9 SAI_NEXT_HOP_ATTR_\r\n    114 SAI_PORT_\r\n     12 SAI_PORT_INTERFACE_TYPE_\r\n      1 SAI_STATS_MODE_READ\r\n      1 SAI_STATS_MODE_READ_AND_CLEAR\r\n    152 SAI_SWITCH_\r\n      1 SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_ACTION_TUNNEL_ID\r\n      1 SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_SRC_IP\r\n      1 SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_TUNNEL_TYPE\r\n      1 SAI_VLAN_ATTR_CUSTOM_IGMP_SNOOPING_ENABLE\r\n      1 SAI_VLAN_ATTR_TAM_OBJECT\r\n```"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-06-29T07:03:56Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:00:42Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:01:03Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:01:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:02:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:02:04Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-02T10:02:08Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-07T10:32:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-07T12:49:56Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-22T04:15:51Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-22T15:07:44Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-22T15:56:11Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1259,
        "repo": "sai",
        "review_at": "2021-07-22T16:43:58Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1259,
        "repo": "sai",
        "latestReview_at": "2021-07-22T04:15:51Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1259,
        "repo": "sai",
        "latestReview_at": "2021-07-22T15:56:11Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1259,
        "repo": "sai",
        "latestReview_at": "2021-07-07T12:49:56Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1259,
        "repo": "sai",
        "latestReview_at": "2021-07-22T16:43:58Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2021-06-29T07:35:14Z",
        "comment_author": "kcudnik",
        "comment_body": "please fix error: WARNING: Word 'LDP' is misspelled or is acronym, add to acronyms.txt? saihostif.h 376:     * @brief LDP traffic (TCP src port == 646 or TCP dst port == 646) to local\r\n"
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2021-07-15T15:39:39Z",
        "comment_author": "rlhui",
        "comment_body": "@rck-innovium - please help review/sign off.  Thanks."
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2021-08-03T17:21:04Z",
        "comment_author": "anshuv-mfst",
        "comment_body": "Hi @kcudnik - could you please help with merge, thanks. "
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2021-08-03T17:44:57Z",
        "comment_author": "kcudnik",
        "comment_body": "> Hi @kcudnik - could you please help with merge, thanks.\r\n\r\nwas that already approved on weekly SAI meeting? "
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2021-08-10T17:08:58Z",
        "comment_author": "anshuv-mfst",
        "comment_body": "> > Hi @kcudnik - could you please help with merge, thanks.\r\n> \r\n> was that already approved on weekly SAI meeting?\r\n\r\nHi @kcudnik - yes, the PR is reviewed in SAI subgroup meeting. \r\nHi @dkourkouzelis - could you please confirm if all review comments are addressed."
    },
    {
        "number": 1258,
        "repo": "sai",
        "comment_at": "2022-02-06T03:49:14Z",
        "comment_author": "JafarSeyedi",
        "comment_body": "Hi, \r\n\r\nwith new changes, we have two problems:\r\n\r\n1. when changing copp config file to add isis, the sonic will crash and dockers will stop.\r\n2, eigrp does not work after these changes. we checked eigrp in sonic with activating it in frr and it was working, but currently, the messages did not pass to frr."
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-06-29T13:47:46Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-07-15T16:07:57Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-07-15T17:15:42Z",
        "review_author": "dkourkouzelis"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-07-15T17:16:10Z",
        "review_author": "dkourkouzelis"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-07-15T17:29:47Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-07-16T13:38:40Z",
        "review_author": "dkourkouzelis"
    },
    {
        "number": 1258,
        "repo": "sai",
        "review_at": "2021-08-11T13:21:22Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1258,
        "repo": "sai",
        "latestReview_at": "2021-06-29T13:47:46Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1258,
        "repo": "sai",
        "latestReview_at": "2021-08-11T13:21:22Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-28T10:37:00Z",
        "comment_author": "kcudnik",
        "comment_body": "@lguohan  there will be problem with SAI_ACL_TABLE_ATTR_FIELD_END, since if new FIELD will be added to TABLE, SAI_ACL_TABLE_ATTR_ENTRY_LIST will be shifted, look here: https://github.com/opencomputeproject/SAI/blob/master/inc/saiacl.h#L1391\r\n\r\nSolution here: https://github.com/opencomputeproject/SAI/pull/1266"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-29T15:31:09Z",
        "comment_author": "shri-khare",
        "comment_body": "Thanks Kamil.\r\n\r\nFew questions:\r\n\r\n- #1256 enforces \"enum values are constant from this point on all future commits\". How do we solve the original issue we reported that breaks warmboot from SAI spec 1.6.5 to 1.8.1 due to \"in between\" insertions to saihash.h and saiacl.h?\r\n\r\n- During the Thursday weekly SAI meeting (June 24, 2021), we agreed to add explicit numbering for each enum on top of the tree and then also port those changes to 1.8.1 to release 1.8.2. This PR is towards that. Has that decision changed? If yes, could you please share more details on why? Was there any discussion around this that I missed?\r\n\r\n- During last Thursday meeting @lguohan observed that mandating that new enums must be inserted at the end may mean loss of readability as the fields to add may belong together with existing fields for readability. With #1256 , if enum values are to be constant on future commits, how do we handle insertions without loss of readability? Again, I think I am missing some context here. Could you please share?\r\n\r\n\r\nThanks,\r\nShri"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-29T22:04:46Z",
        "comment_author": "kcudnik",
        "comment_body": "> * [[meta] Add check for enum const values\u00a0#1256](https://github.com/opencomputeproject/SAI/pull/1256) enforces \"enum values are constant from this point on all future commits\". How do we solve the original issue we reported that breaks warmboot from SAI spec 1.6.5 to 1.8.1 due to \"in between\" insertions to saihash.h and saiacl.h?\r\n\r\nmerge them before this merge happens\r\n\r\n> * During the Thursday weekly SAI meeting (June 24, 2021), we agreed to add explicit numbering for each enum on top of the tree and then also port those changes to 1.8.1 to release 1.8.2. This PR is towards that. Has that decision changed? If yes, could you please share more details on why? Was there any discussion around this that I missed?\r\n\r\nyea, explicit numbers may be provided, but currently this is not required as i made it shis way its doesnt mind\r\n\r\n> * During last Thursday meeting @lguohan observed that mandating that new enums must be inserted at the end may mean loss of readability as the fields to add may belong together with existing fields for readability. With [[meta] Add check for enum const values\u00a0#1256](https://github.com/opencomputeproject/SAI/pull/1256) , if enum values are to be constant on future commits, how do we handle insertions without loss of readability? Again, I think I am missing some context here. Could you please share?\r\n\r\nwe have to sacrifice something, either metadata of readability, there is no win-win situation here, and from my perspective i dont want to weaken metadata from already make sanity checks. Put item at the end of list and forget about ut would be the choice \r\n"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-30T16:06:39Z",
        "comment_author": "kcudnik",
        "comment_body": "Required for this PR:\r\nhttps://github.com/opencomputeproject/SAI/pull/1264\r\nhttps://github.com/opencomputeproject/SAI/pull/1266"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-30T16:34:07Z",
        "comment_author": "shri-khare",
        "comment_body": "> > * [[meta] Add check for enum const values\u00a0#1256](https://github.com/opencomputeproject/SAI/pull/1256) enforces \"enum values are constant from this point on all future commits\". How do we solve the original issue we reported that breaks warmboot from SAI spec 1.6.5 to 1.8.1 due to \"in between\" insertions to saihash.h and saiacl.h?\r\n> \r\n> merge them before this merge happens\r\n> \r\n\r\nDoes that refer to moving the enum fields inserted \"in between\" SAI spec 1.6.5 to 1.8.1 to the end.\r\nI already have a PR open for that. How do I further request to merge this:\r\n\r\nhttps://github.com/opencomputeproject/SAI/pull/1250"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-06-30T18:00:56Z",
        "comment_author": "kcudnik",
        "comment_body": "> Does that refer to moving the enum fields inserted \"in between\" SAI spec 1.6.5 to 1.8.1 to the end.\r\n> I already have a PR open for that. How do I further request to merge this:\r\n> \r\n> #1250\r\n\r\nyou need to discuss this on weekly SAI meeting, this seems like a lot of shuffling "
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-07-15T01:54:07Z",
        "comment_author": "rlhui",
        "comment_body": "@lguohan  - please help review"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-07-15T16:41:40Z",
        "comment_author": "rlhui",
        "comment_body": "https://github.com/opencomputeproject/SAI/pull/1259 should be merged in before this one."
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-07-23T11:43:43Z",
        "comment_author": "kcudnik",
        "comment_body": "@lguohan @shri-khare \r\n**I came up with this scenario 1:**\r\n- our starting backward compatibility commit is A, (enum type X_* already exists)\r\n- at next commit B we add enum X_A = 5 (last in list)\r\n- at next commit C we remove enum X_A\r\n- at next commit D we add enum X_B =5 and X_A = 6\r\n\r\nthere can be any other number of other commits in between ABCD\r\n\r\nHere is the problem: from backward compatibility each separate branch B C D is compatible with branch A, but branch B is not compatible with branch D, since in branch C we removed an enum. **Solution would be to not allow to remove any existing enums** and just deprecate them, but SAI repo history shows that enums many times was removed completely or renamed or changed attr type many times. \r\n\r\nWe can't compare every branch permutation since it's not possible in let say 100 commits, and banning remove enums also don't seem like solution, this happed to segment route: https://github.com/opencomputeproject/SAI/pull/1231/files, entire api disappeared and was renamed to different one. In that case should we keep segment route for eternity? seems also not best way.\r\n\r\n**I came up with this scenario 2:**\r\n- our starting backward compatibility commit is A (enum type X_ don't exists yet)\r\n- at next commit B we introduce enum X_A = 1, X_B = 2\r\n- at next commit C we remove entire enum type X_*\r\n- at next commit D we introduce enum X_A = 1, X_C =2 and rename X_B = 3\r\n\r\nthere can be any other number of other commits in between ABCD. \r\n\r\nBranch BCD are backward compatible with branch A, but B and D is not compatible. \r\n\r\nAt first i though that we can compare every new commit to previous branch and then to base branch A, but this is not good enough ether since if above example there will be additional commit between branch B and D then this detection will not work. So we would need check current commit with every commit down to base commit A, which would be insane. Again **solution to this would be to ban removing enums**, but same problem arises with like with segment route that shows entire enums can disappear.\r\n\r\n\r\n"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-07-29T10:15:18Z",
        "comment_author": "kcudnik",
        "comment_body": "@lguohan @shri-khare\r\nI also noticed other issue that can happen. Let say we have 3 PRs\r\n\r\n1. is adding attribute in the middle of PORT and assign explicit value to it, and this is the latest attribute. last attribute in the enum is not actually last. Validation was successful, all checks passed\r\n2.  is adding attribute at the end of PORT Validation is successful, all checks passed\r\n3. is adding PORT attribute in the middle but at different point than 1st PR Validation is successful, all checks passed \r\n\r\nnow, 1st PR is merged. Then second PR is merged since all checks passed, but this is invalid, since 2nd PR the lass attribute should have explicit value assigned, since 1st PR last attribute was explicitly assigned in the middle. So after merging 2nd PR current SAI status in PORT is invalid, wrong values. Then we we merge 3rd PR, and this also causes invalid enum values and possibly repetitions. \r\n\r\nSo there will be a inconsistent enum values for some time, until 4th PR will be created and it will then show all errors, and 4th person will need to fix all those previous enum values. And this will be constant problem, since once checks passed, they are valid all the time until next PR comes and causes to run validation check. **Currently there is no solution for this, workaround for that would be to manually run az pipeline to run validator before merge each PR.**\r\n"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-08-26T15:55:23Z",
        "comment_author": "kcudnik",
        "comment_body": "/azp run"
    },
    {
        "number": 1256,
        "repo": "sai",
        "comment_at": "2021-08-26T15:55:32Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 1256,
        "repo": "sai",
        "review_at": "2021-07-15T15:28:34Z",
        "review_author": "lguohan"
    },
    {
        "number": 1256,
        "repo": "sai",
        "latestReview_at": "2021-07-15T15:28:34Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1253,
        "repo": "sai",
        "comment_at": "2021-07-09T13:09:14Z",
        "comment_author": "lguohan",
        "comment_body": "can you resolve the conflict the address the comments?"
    },
    {
        "number": 1253,
        "repo": "sai",
        "comment_at": "2021-07-09T14:04:57Z",
        "comment_author": "prgeor",
        "comment_body": "> can you resolve the conflict the address the comments?\r\n\r\nyes, resolved."
    },
    {
        "number": 1253,
        "repo": "sai",
        "comment_at": "2021-07-09T14:16:29Z",
        "comment_author": "kcudnik",
        "comment_body": "please update aspell and fix warnings"
    },
    {
        "number": 1253,
        "repo": "sai",
        "comment_at": "2021-07-13T02:50:17Z",
        "comment_author": "prgeor",
        "comment_body": "> please update aspell and fix warnings\r\n\r\nyes, now fixed"
    },
    {
        "number": 1253,
        "repo": "sai",
        "review_at": "2021-06-24T13:04:47Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1253,
        "repo": "sai",
        "review_at": "2021-06-24T13:51:43Z",
        "review_author": "prgeor"
    },
    {
        "number": 1253,
        "repo": "sai",
        "review_at": "2021-06-24T16:31:12Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1253,
        "repo": "sai",
        "review_at": "2021-07-09T13:32:08Z",
        "review_author": "prgeor"
    },
    {
        "number": 1253,
        "repo": "sai",
        "review_at": "2021-07-13T06:22:11Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1253,
        "repo": "sai",
        "latestReview_at": "2021-07-13T06:22:11Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1252,
        "repo": "sai",
        "review_at": "2021-07-01T15:35:59Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1252,
        "repo": "sai",
        "review_at": "2021-07-01T17:16:21Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1252,
        "repo": "sai",
        "latestReview_at": "2021-07-01T17:16:21Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1252,
        "repo": "sai",
        "latestReview_at": "2021-07-01T15:35:59Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1248,
        "repo": "sai",
        "comment_at": "2021-06-14T17:22:54Z",
        "comment_author": "rlhui",
        "comment_body": "The PR will be revised to reduce a few attributes."
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-04T20:44:59Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-04T21:31:21Z",
        "review_author": "jleveque"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-04T23:34:31Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T06:44:23Z",
        "review_author": "ds952811"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T06:55:14Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T06:55:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T06:59:09Z",
        "review_author": "ds952811"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T15:27:33Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T15:28:34Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-07T15:32:26Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T15:57:17Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T16:04:17Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T16:05:27Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T16:06:40Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T16:06:56Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T16:07:02Z",
        "review_author": "lguohan"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T18:19:28Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T18:21:52Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T18:24:01Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-10T19:19:56Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-14T17:25:36Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1248,
        "repo": "sai",
        "review_at": "2021-06-15T21:51:58Z",
        "review_author": "jleveque"
    },
    {
        "number": 1248,
        "repo": "sai",
        "latestReview_at": "2021-06-07T06:59:09Z",
        "latestReview_author": "ds952811",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1248,
        "repo": "sai",
        "latestReview_at": "2021-06-15T21:51:58Z",
        "latestReview_author": "jleveque",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1248,
        "repo": "sai",
        "latestReview_at": "2021-06-07T06:55:31Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1247,
        "repo": "sai",
        "comment_at": "2021-07-01T18:36:08Z",
        "comment_author": "mikeberesford",
        "comment_body": "If there aren't any pending objections, can we merge this PR? (are any other reviews needed?)"
    },
    {
        "number": 1247,
        "repo": "sai",
        "review_at": "2021-06-03T18:07:12Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1247,
        "repo": "sai",
        "review_at": "2021-06-24T03:41:17Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1247,
        "repo": "sai",
        "review_at": "2021-07-01T15:35:35Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1247,
        "repo": "sai",
        "latestReview_at": "2021-06-03T18:07:12Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1247,
        "repo": "sai",
        "latestReview_at": "2021-07-01T15:35:35Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-05-27T07:44:01Z",
        "comment_author": "kcudnik",
        "comment_body": "why this needs separate object type instead of having a table/list of mac's in rif object ?"
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-06-17T15:41:32Z",
        "comment_author": "lguohan",
        "comment_body": "i have the same question as @kcudnik, can you explain?"
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-06-18T10:54:59Z",
        "comment_author": "SathishKumarTR-Dell",
        "comment_body": "With this proposed new table, can a application bypass creation of the VR and RIF objects but still expect L3 unicast route termination for packets from a SAI pipeline?"
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-07-01T00:39:37Z",
        "comment_author": "erohsik",
        "comment_body": "> \r\n> \r\n> i have the same question as @kcudnik, can you explain?\r\n\r\nThe MAC address that can be programmed in this table need not belong to a particular port. \r\n"
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-07-01T00:41:58Z",
        "comment_author": "erohsik",
        "comment_body": "> \r\n> \r\n> With this proposed new table, can a application bypass creation of the VR and RIF objects but still expect L3 unicast route termination for packets from a SAI pipeline?\r\n\r\nEntries in this table only determine L2 vs L3 processing. Once in the L3 pipeline, RIF and VR objects would still be needed."
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-07-01T16:09:30Z",
        "comment_author": "rlhui",
        "comment_body": "As discussed in meeting, a md doc will be helpful to understand the use cases and call sequences.  Also it's not yet clear if additional ipv4/ipv6 enable flags are needed here."
    },
    {
        "number": 1243,
        "repo": "sai",
        "comment_at": "2021-07-31T01:08:02Z",
        "comment_author": "erohsik",
        "comment_body": "@JaiOCP, @rck-innovium , @ashutosh-agrawal  please review.."
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-06-17T16:06:17Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-06-17T16:16:46Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-06-17T16:18:18Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-06-17T16:21:32Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-07-01T00:36:37Z",
        "review_author": "erohsik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-07-01T00:47:27Z",
        "review_author": "erohsik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-07-01T06:34:15Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-07-31T01:05:23Z",
        "review_author": "erohsik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-07-31T17:55:50Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-08-11T18:58:20Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-08-20T18:54:01Z",
        "review_author": "tushar-ty"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-08-20T19:22:17Z",
        "review_author": "erohsik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "review_at": "2021-08-24T17:17:10Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1243,
        "repo": "sai",
        "latestReview_at": "2021-08-20T18:54:01Z",
        "latestReview_author": "tushar-ty",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1243,
        "repo": "sai",
        "latestReview_at": "2021-08-11T18:58:20Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1243,
        "repo": "sai",
        "latestReview_at": "2021-08-24T17:17:10Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1243,
        "repo": "sai",
        "latestReview_at": "2021-07-31T17:55:50Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1242,
        "repo": "sai",
        "comment_at": "2021-05-27T15:05:45Z",
        "comment_author": "lguohan",
        "comment_body": "@jleveque , can you check build failure?"
    },
    {
        "number": 1242,
        "repo": "sai",
        "comment_at": "2021-05-27T21:56:10Z",
        "comment_author": "jleveque",
        "comment_body": "> @jleveque , can you check build failure?\r\n\r\nApparently the build process didn't like an extra blank line. However, there was no clear error message. I had to figure it out by trial-and-error."
    },
    {
        "number": 1242,
        "repo": "sai",
        "comment_at": "2021-05-28T20:53:41Z",
        "comment_author": "lguohan",
        "comment_body": "@kcudnik , can you make those error more explicitly?"
    },
    {
        "number": 1242,
        "repo": "sai",
        "review_at": "2021-05-27T15:04:42Z",
        "review_author": "lguohan"
    },
    {
        "number": 1242,
        "repo": "sai",
        "latestReview_at": "2021-05-27T15:04:42Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1239,
        "repo": "sai",
        "comment_at": "2021-06-02T05:54:28Z",
        "comment_author": "rlhui",
        "comment_body": "@jleveque  - would you please help review?\r\n\r\n@tarakreddy1984  - please fix DCO."
    },
    {
        "number": 1239,
        "repo": "sai",
        "comment_at": "2021-06-03T18:07:35Z",
        "comment_author": "kcudnik",
        "comment_body": "please resolve conflicts"
    },
    {
        "number": 1239,
        "repo": "sai",
        "comment_at": "2021-06-04T16:41:48Z",
        "comment_author": "jleveque",
        "comment_body": "Per our discussion in the meeting, could you please add a document describing the scenario(s) where SAI_PORT_ATTR_AUTO_NEG_FEC_MODE will be used?"
    },
    {
        "number": 1239,
        "repo": "sai",
        "comment_at": "2021-06-14T18:37:01Z",
        "comment_author": "jleveque",
        "comment_body": "Please also update the PR description (it still mentions SAI_PORT_ATTR_LOW_LATENCY_VARIATION)."
    },
    {
        "number": 1239,
        "repo": "sai",
        "comment_at": "2021-06-17T01:37:29Z",
        "comment_author": "rlhui",
        "comment_body": "@tarakreddy1984  - it has conflicts blocking merge."
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-05-20T10:53:04Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-02T16:04:29Z",
        "review_author": "jleveque"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-02T16:15:31Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-02T16:18:45Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-02T22:14:31Z",
        "review_author": "jleveque"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-03T16:12:16Z",
        "review_author": "jleveque"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-09T05:05:31Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-09T05:22:13Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-09T05:51:05Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-14T17:54:45Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-14T18:03:20Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-14T18:18:24Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-15T17:19:01Z",
        "review_author": "jleveque"
    },
    {
        "number": 1239,
        "repo": "sai",
        "review_at": "2021-06-16T09:08:53Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1239,
        "repo": "sai",
        "latestReview_at": "2021-06-15T17:19:01Z",
        "latestReview_author": "jleveque",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1239,
        "repo": "sai",
        "latestReview_at": "2021-06-16T09:08:53Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1238,
        "repo": "sai",
        "comment_at": "2021-05-25T19:58:38Z",
        "comment_author": "anshuv-mfst",
        "comment_body": "@rlhui - Could you please advise next steps on this PR. Maybe schedule in SAI community meeting. "
    },
    {
        "number": 1238,
        "repo": "sai",
        "comment_at": "2021-06-23T02:21:00Z",
        "comment_author": "rlhui",
        "comment_body": "could the DCO be fixed?"
    },
    {
        "number": 1238,
        "repo": "sai",
        "comment_at": "2021-06-23T05:32:24Z",
        "comment_author": "VenkatCisco",
        "comment_body": "> could the DCO be fixed?\r\n\r\nSure, Done. "
    },
    {
        "number": 1238,
        "repo": "sai",
        "comment_at": "2021-06-30T03:04:23Z",
        "comment_author": "rlhui",
        "comment_body": "> > could the DCO be fixed?\r\n> \r\n> Sure, Done.\r\n\r\nHi, it still shows DCO not yet passed?  Thanks."
    },
    {
        "number": 1238,
        "repo": "sai",
        "comment_at": "2021-07-01T21:05:29Z",
        "comment_author": "kcudnik",
        "comment_body": "please fix errors https://dev.azure.com/mssonic/build/_build/results?buildId=22167&view=logs&j=83516c17-6666-5250-abde-63983ce72a49&t=00be4b52-4a63-5865-8e02-c61723ad0692"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-05-25T20:21:47Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-04T19:04:20Z",
        "review_author": "abdosi"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-07T17:36:08Z",
        "review_author": "VenkatCisco"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-07T17:46:16Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-09T18:01:33Z",
        "review_author": "VenkatCisco"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-15T22:28:33Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-15T23:26:37Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-16T05:23:40Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-06-30T10:08:39Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-07-01T03:28:17Z",
        "review_author": "VenkatCisco"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-07-01T03:29:09Z",
        "review_author": "VenkatCisco"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-07-01T06:28:06Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-07-01T16:44:07Z",
        "review_author": "VenkatCisco"
    },
    {
        "number": 1238,
        "repo": "sai",
        "review_at": "2021-07-01T21:04:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1238,
        "repo": "sai",
        "latestReview_at": "2021-06-04T19:04:20Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1238,
        "repo": "sai",
        "latestReview_at": "2021-06-16T05:23:40Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1238,
        "repo": "sai",
        "latestReview_at": "2021-07-01T21:04:34Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1236,
        "repo": "sai",
        "review_at": "2021-05-17T15:16:35Z",
        "review_author": "lguohan"
    },
    {
        "number": 1236,
        "repo": "sai",
        "latestReview_at": "2021-05-17T15:16:35Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1234,
        "repo": "sai",
        "comment_at": "2021-05-14T17:12:37Z",
        "comment_author": "SidharajU",
        "comment_body": "Can we push these changes?"
    },
    {
        "number": 1234,
        "repo": "sai",
        "comment_at": "2021-05-18T22:10:16Z",
        "comment_author": "kcudnik",
        "comment_body": "must be consulted with SAI community?"
    },
    {
        "number": 1234,
        "repo": "sai",
        "comment_at": "2021-05-25T02:54:56Z",
        "comment_author": "SidharajU",
        "comment_body": "> must be consulted with SAI community?\r\n\r\nWho's the right person from the SAI community to approve this? "
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-05-12T08:05:36Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-01T18:25:27Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-01T21:29:39Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-01T21:43:49Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T00:49:07Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T02:31:16Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T06:11:22Z",
        "review_author": "rlhui"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T18:18:54Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T18:28:32Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T20:25:21Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1234,
        "repo": "sai",
        "review_at": "2021-06-02T20:25:36Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1234,
        "repo": "sai",
        "latestReview_at": "2021-06-02T06:11:22Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1234,
        "repo": "sai",
        "latestReview_at": "2021-06-02T20:25:36Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1234,
        "repo": "sai",
        "latestReview_at": "2021-06-01T18:25:27Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-05-04T21:38:41Z",
        "comment_author": "SidharajU",
        "comment_body": "I followed all the instructions available and its failing saying permission denied. Do I need to get any other permission to resolve this error?\r\n\r\nbash-4.1$ gits\r\nOn branch patch-2\r\nnothing to commit, working tree clean\r\nbash-4.1$ **git commit --amend --no-edit --signoff**\r\n[patch-2 7563b78] New attribute to start fw broadcast process\r\n Author: SidharajU <57233013+SidharajU@users.noreply.github.com>\r\n Date: Tue May 4 11:37:20 2021 -0700\r\n 1 file changed, 12 insertions(+)\r\nbash-4.1$ **git push --force-with-lease origin patch-2**\r\nWarning: Permanently added the RSA host key for IP address 'a.b.c.d' to the list of known hosts.\r\n**ERROR: Permission to opencomputeproject/SAI.git denied to SidharajU.\r\nfatal: Could not read from remote repository.**\r\n\r\nPlease make sure you have the correct access rights\r\nand the repository exists.\r\nbash-4.1$ \r\n"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-05-11T23:02:04Z",
        "comment_author": "lguohan",
        "comment_body": "can your provide call example?\r\n\r\nhow is the new attribute address the broadcast scenario?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-05-12T18:00:08Z",
        "comment_author": "SidharajU",
        "comment_body": "Uploaded a document to list the steps needed for FW download in broadcast mode"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-05-14T17:13:25Z",
        "comment_author": "SidharajU",
        "comment_body": "> can your provide call example?\r\n> \r\n> how is the new attribute address the broadcast scenario?\r\n\r\nI have uploaded the document. Can you review it?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-15T17:18:34Z",
        "comment_author": "jleveque",
        "comment_body": "@SidharajU: Please review this proposal and provide feedback:\r\n\r\n- Add a new attribute of type [`sai_s8_list_t`](https://github.com/opencomputeproject/SAI/blob/master/inc/saiswitch.h#L1681) where the vendor can specify all the MDIO slave addresses for a given PHY\r\n\r\nThen the following would be the FW update logic:\r\n1. For each MDIO master, call `create_switch()` and pass the list of slave MDIO addresses via the attribute detailed above\r\n    - In this function, the 5-step FW upgrade procedure as you detail in your document will be carried out for **all** PHYs on this MDIO bus.\r\n 2. Call `create_switch()` on all slave PHYs, which will already have had their firmware upgraded."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T19:01:35Z",
        "comment_author": "rlhui",
        "comment_body": "@jleveque , @lguohan  - please help review/approve, thanks."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T19:20:43Z",
        "comment_author": "jleveque",
        "comment_body": "@rlhui: There has been no activity since my last comment."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T19:35:54Z",
        "comment_author": "jleveque",
        "comment_body": "@@SidharajU: Thanks for adding the new attribute. If you agree with the FW update logic as described in my comment, please update the document to describe this flow."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T20:02:54Z",
        "comment_author": "SidharajU",
        "comment_body": "> @@SidharajU: Thanks for adding the new attribute. If you agree with the FW update logic as described in my comment, please update the document to describe this flow.\r\n\r\nHi Joe, \r\nI have removed the document as its no longer applicable and needed. The attribute is self-explanatory so no document is added.\r\n\r\nI am getting DCO error. I tried the following steps but its still failing\r\ngit fetch origin pull/1232/head:patch-2\r\ngit checkout patch-2\r\ngit commit --amend --no-edit --signoff\r\ngit push -f sid patch-2\r\n\r\nAny idea what's wrong with DCO error?\r\n"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T20:24:57Z",
        "comment_author": "jleveque",
        "comment_body": "> > @@SidharajU: Thanks for adding the new attribute. If you agree with the FW update logic as described in my comment, please update the document to describe this flow.\r\n> \r\n> Hi Joe,\r\n> I have removed the document as its no longer applicable and needed. The attribute is self-explanatory so no document is added.\r\n\r\nOK, as long as you think it's self-explanatory.\r\n\r\n> \r\n> I am getting DCO error. I tried the following steps but its still failing\r\n> git fetch origin pull/1232/head:patch-2\r\n> git checkout patch-2\r\n> git commit --amend --no-edit --signoff\r\n> git push -f sid patch-2\r\n> \r\n> Any idea what's wrong with DCO error?\r\n\r\nI do not know what could be causing this issue. Maybe @kcudnik has some advice?\r\n"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T21:05:20Z",
        "comment_author": "kcudnik",
        "comment_body": "have you tried commands from DCO suggestions: https://github.com/opencomputeproject/SAI/pull/1232/checks?check_run_id=2956038705 ?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-06-30T21:50:58Z",
        "comment_author": "SidharajU",
        "comment_body": "> have you tried commands from DCO suggestions: https://github.com/opencomputeproject/SAI/pull/1232/checks?check_run_id=2956038705 ?\r\n\r\nYes. I tried the same steps multiple times but its still failing."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-01T06:21:59Z",
        "comment_author": "kcudnik",
        "comment_body": "no clue then, everything seems fine, i can mark it manually to pass"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-01T19:07:56Z",
        "comment_author": "SidharajU",
        "comment_body": "@rlhui, @jleveque, can you approve and merge the PR? "
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-15T01:44:47Z",
        "comment_author": "rlhui",
        "comment_body": "> @SidharajU: Please review this proposal and provide feedback:\r\n> \r\n> * Add a new attribute of type [`sai_s8_list_t`](https://github.com/opencomputeproject/SAI/blob/master/inc/saiswitch.h#L1681) where the vendor can specify all the MDIO slave addresses for a given PHY\r\n> \r\n> Then the following would be the FW update logic:\r\n> \r\n> 1. For each MDIO master, call `create_switch()` and pass the list of slave MDIO addresses via the attribute detailed above\r\n>    \r\n>    * In this function, the 5-step FW upgrade procedure as you detail in your document will be carried out for **all** PHYs on this MDIO bus.\r\n> 2. Call `create_switch()` on all slave PHYs, which will already have had their firmware upgraded.\r\n\r\n@SidharajU  - now the doc is removed.  Are the above steps the recommended steps?  I don't see the sequence is documented anywhere, in comment or other?  Thanks."
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-15T18:52:43Z",
        "comment_author": "SidharajU",
        "comment_body": "@kcudnik I am seeing the same DCO error again. Is it because I am using the old authentication method(received deprecation notice in the email)? Could you pls manually approve this?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-16T18:22:04Z",
        "comment_author": "SidharajU",
        "comment_body": "I ran the commands mentioned in the details but the DCO is still failing:\r\n\r\nbash-4.1$ **git commit --amend --no-edit --signoff**\r\n\r\n[patch-2 624f41e] Updating FW broadcast sequence\r\n Author: SidharajU <57233013+SidharajU@users.noreply.github.com>\r\n Date: Wed Jun 30 12:36:00 2021 -0700\r\n 2 files changed, 6 insertions(+), 31 deletions(-)\r\n delete mode 100644 doc/macsec-gearbox/External PHY broadcast FW download steps\r\nbash-4.1$ \r\nbash-4.1$ **git push -f sid patch-2**\r\nEnumerating objects: 11, done.\r\nCounting objects: 100% (11/11), done.\r\nDelta compression using up to 2 threads.\r\nCompressing objects: 100% (6/6), done.\r\nWriting objects: 100% (6/6), 826 bytes | 826.00 KiB/s, done.\r\nTotal 6 (delta 5), reused 0 (delta 0)\r\nremote: Resolving deltas: 100% (5/5), completed with 5 local objects.\r\nTo https://github.com/SidharajU/SAI.git\r\n + ac6cc64...624f41e patch-2 -> patch-2 (forced update)\r\nbash-4.1$ \r\n\r\n"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-16T20:02:00Z",
        "comment_author": "kcudnik",
        "comment_body": "i think this could be because of this commit: https://github.com/opencomputeproject/SAI/pull/1232/commits/d9cf2b7939b983467294c83e228ddc3363fb5782 maybe DCO requires all commits to be signed off"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-16T20:05:04Z",
        "comment_author": "SidharajU",
        "comment_body": "> i think this could be because of this commit: [d9cf2b7](https://github.com/opencomputeproject/SAI/commit/d9cf2b7939b983467294c83e228ddc3363fb5782) maybe DCO requires all commits to be signed off\r\n\r\nI always use --signoff. Not sure what/why the error is. How do we fix this issue?\r\n"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-17T13:58:48Z",
        "comment_author": "kcudnik",
        "comment_body": "the commit i mentioned don't have your sign off signature, but im not sure whether this is DCO issue or not :("
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-19T17:56:22Z",
        "comment_author": "SidharajU",
        "comment_body": "> the commit i mentioned don't have your sign off signature, but im not sure whether this is DCO issue or not :(\r\n\r\nThen how do I fix this issue? Can you manually pass it since we don't know what's the issue is?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-21T17:01:17Z",
        "comment_author": "SidharajU",
        "comment_body": "@kcudnik @rlhui  Any update? Who can help fix this unknown issue? Or we an manually approve this error?"
    },
    {
        "number": 1232,
        "repo": "sai",
        "comment_at": "2021-07-21T18:28:29Z",
        "comment_author": "kcudnik",
        "comment_body": "its all signed off now "
    },
    {
        "number": 1232,
        "repo": "sai",
        "review_at": "2021-05-18T22:11:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1232,
        "repo": "sai",
        "review_at": "2021-06-15T16:42:36Z",
        "review_author": "SidharajU"
    },
    {
        "number": 1232,
        "repo": "sai",
        "review_at": "2021-07-01T19:12:00Z",
        "review_author": "jleveque"
    },
    {
        "number": 1232,
        "repo": "sai",
        "latestReview_at": "2021-07-01T19:12:00Z",
        "latestReview_author": "jleveque",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1232,
        "repo": "sai",
        "latestReview_at": "2021-05-18T22:11:01Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-05-18T06:14:13Z",
        "comment_author": "rlhui",
        "comment_body": "@rck-innovium , @marian-pritsak  - would you like to review this? Thanks."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-05-19T15:22:47Z",
        "comment_author": "rlhui",
        "comment_body": "@Israel-Meilik - please help review/approve.  Thanks."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-05-21T15:34:15Z",
        "comment_author": "rlhui",
        "comment_body": "@skraza - please help review, thanks."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-05-26T16:55:19Z",
        "comment_author": "ashutosh-agrawal",
        "comment_body": "> Tunnel id is for encapsulation not decapsulation\r\n\r\n@caizhenghui-juniper local_sid entry has tunnel id for decap and nexthop entry will have tunnel id for encap. SAI application can use appropriate tunnel_id to set both encap/decap attributes for features like ttl/qos modes."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-05-26T18:03:52Z",
        "comment_author": "caizhenghui-juniper",
        "comment_body": "@ashutosh-agrawal ok, got it. "
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-15T00:25:25Z",
        "comment_author": "abdosi",
        "comment_body": "Based on community meeting discussion there were 2 major points:\r\n\r\n1> No need to address Backward Compatibility for SRv6 since feature has evolve lot when SAI api were design intially.\r\n2> All the TODO enhancements will be done as part of subsequent PR's \r\n\r\nThere were agreement to approve/merge this PR as there was no outstanding issue."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-15T00:26:08Z",
        "comment_author": "abdosi",
        "comment_body": "@ashutosh-agrawal Can you please add details in PR description above. We can merge after that.\r\n"
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-16T18:45:12Z",
        "comment_author": "ashutosh-agrawal",
        "comment_body": "> @ashutosh-agrawal Can you please add details in PR description above. We can merge after that.\r\n\r\n@abdosi In the PR description, I've added a list of items which were deferred (as discussed in the SRv6 WG)."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-24T02:05:54Z",
        "comment_author": "ashutosh-agrawal",
        "comment_body": "@abdosi Please let me know if anything else needs to be done to get this PR to merge."
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-24T02:06:11Z",
        "comment_author": "abdosi",
        "comment_body": "thanks . will merge this when PR check passes"
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-06-24T14:21:31Z",
        "comment_author": "caizhenghui-juniper",
        "comment_body": "@ashutosh-agrawal do we have vslib code change which uses old segmentroute sid list in the code before moving the pointer of SAI in sonic to avoid build break?"
    },
    {
        "number": 1231,
        "repo": "sai",
        "comment_at": "2021-11-11T16:51:23Z",
        "comment_author": "zhangyanzhao",
        "comment_body": "@abdosi  are all the code PRs merged? Can you please update the code PRs by following example https://github.com/Azure/SONiC/pull/806? "
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-04-30T20:53:52Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-04-30T22:14:01Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-04-30T22:47:27Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-06T15:35:36Z",
        "review_author": "abdosi"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-06T15:39:53Z",
        "review_author": "abdosi"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-06T15:49:21Z",
        "review_author": "abdosi"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-06T16:10:04Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T00:47:21Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T00:50:54Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T15:15:20Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T15:31:25Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T15:34:07Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T17:07:26Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T17:20:51Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-12T17:56:16Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:27:18Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:29:23Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:30:55Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:34:06Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:37:53Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:39:14Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:40:33Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:41:05Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:43:18Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:44:06Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:45:50Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:47:09Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:49:26Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:52:04Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T12:55:22Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T13:00:59Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T13:02:30Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T16:31:18Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T17:33:42Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T17:45:06Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T18:16:50Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T18:20:57Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T18:29:25Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T18:32:15Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T19:32:45Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:33:51Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:37:00Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:37:34Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:37:57Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:38:57Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:39:28Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-25T20:40:07Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-26T13:03:30Z",
        "review_author": "caizhenghui-juniper"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-26T17:50:02Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-05-26T19:14:50Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-02T07:45:19Z",
        "review_author": "Israel-Meilik"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-03T08:04:47Z",
        "review_author": "pcamaril"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-03T16:35:37Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-03T17:50:19Z",
        "review_author": "caizhenghui-juniper"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T15:12:54Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T15:15:52Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:00:13Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:01:34Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:47:53Z",
        "review_author": "Israel-Meilik"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:48:02Z",
        "review_author": "skraza"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:50:36Z",
        "review_author": "Israel-Meilik"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:53:24Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:55:08Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:57:24Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T16:58:07Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T17:00:01Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T17:00:16Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-08T17:02:03Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-14T15:49:15Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1231,
        "repo": "sai",
        "review_at": "2021-06-15T00:22:50Z",
        "review_author": "abdosi"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-03T17:50:19Z",
        "latestReview_author": "caizhenghui-juniper",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-04-30T22:47:27Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-03T08:04:47Z",
        "latestReview_author": "pcamaril",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-08T16:48:02Z",
        "latestReview_author": "skraza",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-15T00:22:50Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-08T16:50:36Z",
        "latestReview_author": "Israel-Meilik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1231,
        "repo": "sai",
        "latestReview_at": "2021-06-14T15:49:15Z",
        "latestReview_author": "reshmaintel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1228,
        "repo": "sai",
        "comment_at": "2021-04-30T20:38:32Z",
        "comment_author": "msomasundaran",
        "comment_body": "resolves #1230 "
    },
    {
        "number": 1228,
        "repo": "sai",
        "comment_at": "2021-05-06T03:32:31Z",
        "comment_author": "rlhui",
        "comment_body": "@qbdwlr , @JaiOCP , @marian-pritsak , @ashutosh-agrawal - would you please help review/sign-off?"
    },
    {
        "number": 1228,
        "repo": "sai",
        "review_at": "2021-05-11T20:40:04Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1228,
        "repo": "sai",
        "review_at": "2021-05-11T21:50:01Z",
        "review_author": "msomasundaran"
    },
    {
        "number": 1228,
        "repo": "sai",
        "review_at": "2021-05-12T00:52:09Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1228,
        "repo": "sai",
        "review_at": "2021-05-12T08:06:51Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1228,
        "repo": "sai",
        "latestReview_at": "2021-05-12T00:52:09Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1228,
        "repo": "sai",
        "latestReview_at": "2021-05-12T08:06:51Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1227,
        "repo": "sai",
        "comment_at": "2021-04-30T20:37:58Z",
        "comment_author": "msomasundaran",
        "comment_body": "resolves #1229 "
    },
    {
        "number": 1227,
        "repo": "sai",
        "comment_at": "2021-05-06T03:32:47Z",
        "comment_author": "rlhui",
        "comment_body": "@qbdwlr , @JaiOCP , @marian-pritsak , @ashutosh-agrawal - would you please help review/sign-off?"
    },
    {
        "number": 1227,
        "repo": "sai",
        "review_at": "2021-05-11T20:44:56Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1227,
        "repo": "sai",
        "review_at": "2021-05-11T21:50:26Z",
        "review_author": "msomasundaran"
    },
    {
        "number": 1227,
        "repo": "sai",
        "review_at": "2021-05-12T08:05:18Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1227,
        "repo": "sai",
        "review_at": "2021-05-12T22:44:20Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1227,
        "repo": "sai",
        "latestReview_at": "2021-05-12T22:44:20Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1227,
        "repo": "sai",
        "latestReview_at": "2021-05-12T08:05:18Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "comment_at": "2021-04-22T15:20:18Z",
        "comment_author": "dgsudharsan",
        "comment_body": "Can we add the comprehensive list of FEC modes? This would avoid ambiguity and also simplify the implementation."
    },
    {
        "number": 1224,
        "repo": "sai",
        "comment_at": "2021-04-22T15:42:51Z",
        "comment_author": "dgsudharsan",
        "comment_body": "@AshokDaparthi @SathishKumarTR-Dell @mikeberesford @JaiOCP  Can we revive this PR? https://github.com/opencomputeproject/SAI/pull/920"
    },
    {
        "number": 1224,
        "repo": "sai",
        "comment_at": "2021-05-20T17:26:29Z",
        "comment_author": "mikeberesford",
        "comment_body": "Consensus from today's community meeting is that we should add a new boolean to control which of the FEC settings is used, as well as documentation of the behavior around the FEC controls. I'll work on getting the changes for both of these done in the next day or so."
    },
    {
        "number": 1224,
        "repo": "sai",
        "comment_at": "2021-05-26T04:56:59Z",
        "comment_author": "mikeberesford",
        "comment_body": "Updated documentation and added additional boolean to control extended/non-extended FEC use. Please take a look at this latest revision when you have a chance. @JaiOCP @apogedik @tarakreddy1984 @dgsudharsan "
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-06T15:42:21Z",
        "review_author": "apogedik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-06T16:18:57Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-07T08:05:19Z",
        "review_author": "tarakreddy1984"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-07T16:19:15Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-10T15:56:00Z",
        "review_author": "apogedik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-12T04:16:56Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-13T15:55:58Z",
        "review_author": "apogedik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-13T15:56:44Z",
        "review_author": "apogedik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-13T16:12:20Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-20T05:17:55Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-05-27T15:52:08Z",
        "review_author": "lguohan"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T17:01:19Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T18:26:36Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T18:26:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T19:43:05Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T21:18:35Z",
        "review_author": "motinisim"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-01T21:49:08Z",
        "review_author": "motinisim"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T16:45:55Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T16:46:16Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T16:46:28Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T16:46:41Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T16:47:28Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-02T20:18:05Z",
        "review_author": "motinisim"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-03T01:00:13Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1224,
        "repo": "sai",
        "review_at": "2021-06-03T15:18:30Z",
        "review_author": "rlhui"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-06-01T18:26:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-06-02T20:18:05Z",
        "latestReview_author": "motinisim",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-05-13T15:56:44Z",
        "latestReview_author": "apogedik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-05-07T08:05:19Z",
        "latestReview_author": "tarakreddy1984",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-05-27T15:52:08Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-06-01T19:43:05Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1224,
        "repo": "sai",
        "latestReview_at": "2021-06-03T15:18:30Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1222,
        "repo": "sai",
        "comment_at": "2021-04-22T04:10:01Z",
        "comment_author": "lguohan",
        "comment_body": "DCO?"
    },
    {
        "number": 1222,
        "repo": "sai",
        "review_at": "2021-04-22T04:09:37Z",
        "review_author": "lguohan"
    },
    {
        "number": 1222,
        "repo": "sai",
        "latestReview_at": "2021-04-22T04:09:37Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1220,
        "repo": "sai",
        "comment_at": "2021-04-15T15:13:53Z",
        "comment_author": "dgsudharsan",
        "comment_body": "@AshokDaparthi Can you please confirm that there will be no impact on the existing media_settings.json defined for dell platforms?"
    },
    {
        "number": 1220,
        "repo": "sai",
        "comment_at": "2021-04-22T03:31:54Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @rck-innovium, @kperumalbfn - would you like to sign-off this?"
    },
    {
        "number": 1220,
        "repo": "sai",
        "review_at": "2021-04-14T07:06:21Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1220,
        "repo": "sai",
        "review_at": "2021-04-22T21:53:20Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1220,
        "repo": "sai",
        "review_at": "2021-04-22T21:55:33Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1220,
        "repo": "sai",
        "review_at": "2021-04-23T04:41:26Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1220,
        "repo": "sai",
        "latestReview_at": "2021-04-14T07:06:21Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1220,
        "repo": "sai",
        "latestReview_at": "2021-04-22T21:53:20Z",
        "latestReview_author": "kperumalbfn",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1220,
        "repo": "sai",
        "latestReview_at": "2021-04-22T21:55:33Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1220,
        "repo": "sai",
        "latestReview_at": "2021-04-23T04:41:26Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1218,
        "repo": "sai",
        "review_at": "2021-04-05T20:35:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1218,
        "repo": "sai",
        "latestReview_at": "2021-04-05T20:35:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1216,
        "repo": "sai",
        "review_at": "2021-04-05T15:59:13Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1216,
        "repo": "sai",
        "review_at": "2021-04-05T16:08:19Z",
        "review_author": "abdosi"
    },
    {
        "number": 1216,
        "repo": "sai",
        "review_at": "2021-04-05T17:31:04Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1216,
        "repo": "sai",
        "latestReview_at": "2021-04-05T17:31:04Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1208,
        "repo": "sai",
        "comment_at": "2021-03-25T08:31:47Z",
        "comment_author": "kannankvs",
        "comment_body": "COMMENTS and REPLIES from [PR1191](https://github.com/opencomputeproject/SAI/pull/1191)\r\n1) <<rlhui_3rdMar2021>>@tarakreddy1984 , @JaiOCP , @itaibaz , @jasmeetbagga , @kcudnik , @marian-pritsak - would we please target to review/approve this by this week? Thanks.\r\n<<Reply>> Waiting for review to be completed.\r\n \r\n2) <<itaibaz_3rdMar2021>>instead of typedef sai_query_stats_capability should say new function sai_query_stats_capability\r\n<<Reply>> Addressed.\r\n \r\n3) <<itaibaz_3rdMar2021>>probably a typo, adds the ability to attach\r\n<<Reply>> Addressed.\r\n \r\n4) <<JaiOCP_6thMar2021>> There is a typo in the line: This API will return number of vxlan tunnels which can forward with packet action as drop.\r\n<<Reply>> Addressed.\r\n \r\n5) <<JaiOCP_6thMar2021>> Please add following line:\r\nA UDF group that will be used in ACL must be set to SAI_UDF_GROUP_GENERIC as the group type.\r\n<<Reply>> Addressed.\r\n \r\n6) <<rlhui_9thMar2021>> @tarakreddy1984 , @jasmeetbagga , @kcudnik , @marian-pritsak - gentle reminder to please review/approve.\r\n@JaiOCP , @itaibaz - thanks a lot for reviewing. if latest looks good to you, please sign off. Thanks.\r\n \r\n7) <<jasmeetbagga_9thMar2021>>\r\nFor PR 1137\r\nAdd packet allocate, free function to allow for 0 copy packet TX.  I would rephrase it as (sorry I can't seem to comment inline on the release notes). This PR enables efficient packet TX, by leveraging zero copy packet memory allocation when available.\r\nSending a packet requires allocating it first. Typically, this requires allocating from a special pool of DMAed memory.\r\nFor this a ASIC vendor SDK may support custom allocate and free functions. So mirror those in the SAI spec.\r\nWithout such a ability we are left to allocate heap memory, pass it to send_hostif_packet_fn, which then allocates from the\r\naforementioned DMA memory, copies the contents of heap memory and sends the packet along. This causes us to have an extra\r\nallocation and copy. This can induce a substantial slowdown -~30% in our measurements.\r\n\r\nThis is achieved by\r\n- Adding SAI_HOSTIF_PACKET_ATTR_ZERO_COPY_TX in sai_hostif_packet_attr_t\r\n- Adding functions sai_allocate_hostif_packet_fn, sai_free_hostif_packet_fn\r\n in saihostif.h\r\n \r\nFurthermore total DMA pool size can be queried via SAI_SWITCH_ATTR_PACKET_\r\nDMA_MEMORY_POOL_SIZE in sai_switch_attr_t on saiswitch.h\r\n<<Reply>> Addressed.\r\n \r\n8) <<rlhui_17thMar2021>>\r\n The below two were added after v1.6.3 but missing in the release notes. Additional Port Interface Types (#1098) \u2026\r\nPolicy based hash (#1074) \u2026\r\n<<Reply>> Addressed.\r\n \r\n9) <<rlhui_17thMar2021>>\r\nPlease also fix the DCO error.\r\n<<Reply>> Could not resolve it in the old PR and hence created this new PR from a fresh fork, which resolved the DCO error."
    },
    {
        "number": 1208,
        "repo": "sai",
        "comment_at": "2021-03-25T08:32:26Z",
        "comment_author": "kannankvs",
        "comment_body": "@rlhui : All comments have been addressed. There are no further comments for the last few days. Request you to signoff and merge the PR."
    },
    {
        "number": 1208,
        "repo": "sai",
        "comment_at": "2021-04-16T04:18:11Z",
        "comment_author": "kannankvs",
        "comment_body": "@rlhui , Thanks for your review and sign off. While we tried to merge the PR, we see \"opencomputeproject.SAI Expected \u2014 Waiting for status to be reported\" part of a check. There is no much information on this. Can you guide us on how do we merge the PR clearing this check. "
    },
    {
        "number": 1208,
        "repo": "sai",
        "comment_at": "2021-04-21T04:20:58Z",
        "comment_author": "rlhui",
        "comment_body": "/azp run"
    },
    {
        "number": 1208,
        "repo": "sai",
        "comment_at": "2021-04-21T04:21:07Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 1208,
        "repo": "sai",
        "review_at": "2021-04-14T04:50:00Z",
        "review_author": "rlhui"
    },
    {
        "number": 1208,
        "repo": "sai",
        "latestReview_at": "2021-04-14T04:50:00Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1207,
        "repo": "sai",
        "comment_at": "2021-03-22T06:15:12Z",
        "comment_author": "rlhui",
        "comment_body": "Update SAI version to v1.8.0"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-04-16T16:48:13Z",
        "comment_author": "lguohan",
        "comment_body": "can you remove the file .DS_Store?"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-06-02T01:29:22Z",
        "comment_author": "dipankar-ba",
        "comment_body": "Please see in-line.\r\n\r\n> We recommend to add an attribute for supporting both per SA and GLOBAL counters. Globals are aggregates for ingress and egress direction across all SAs. Per SA stats are directional per SA.\r\n> \r\n> SAI_IPSEC_ATTR_STATS_TYPE_SA , SAI_IPSEC_ATTR_STATS_TYPE_GLOBAL\r\n> \r\n> GLOBAL counters support needs an extra attribute in addition to those defined for the per SA stats in sai_ipsec_sa_stat_t\r\n\r\nAFAIK, SAI counters are always associated with an SAI object.  Any top level \"foo\" counter would be associated with SAI_SWITCH object and would have an enum named SAI_SWITCH_STAT_foo.  From your description, I do not understand which object you want these \"global\" counters for and what are counter semantics you are looking for.\r\n\r\nAlso note the hardware is not capable of having a counter at SAI_SWITCH level, since the counters are per IPsec engine and each engine may serve a subset of ports.  Normally the highest level the IPsec engine hardware counts is at port level.  If you do not expose that details in the counter API, you lose information about which port is contributing to the \"global\" counters.\r\n\r\n> \r\n> SAI_IPSEC_SA_STAT_SA_MISS (to count for STATS for invalid SA or not found SA)\r\n\r\nFrom this comment, as well as from the request for notify criteria, it seems you consider packets that cannot be decrypted by hardware as exception packets.  However, our model was there can be 3 types of IPsec packets that can match the host/switch IP address:\r\n1. Packets decrypted by hardware\r\n2. Packets decrypted by software\r\n3. Exception packets that cannot be decrypted by either\r\n\r\nTo allow software decryption, the hardware has the capability of forwarding encrypted packets to the switch software.  If there is no decryption capability in software, the switch can  install a \"system ACL\" to detect all such packets (with ESP header) and to drop and count those.  This seems a more flexible way of implementing the IPsec decryption.\r\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-06-02T01:53:35Z",
        "comment_author": "dipankar-ba",
        "comment_body": "For notifications related to SN counter, don't we need the SA_INDEX?  And in that case, do we want to send a separate notification for each event on each SA?\r\n\r\nPlease see 3 more comments in-line.\r\n\r\n> We recommend adding notifications for soft/hard limit, seq rollover etc...\r\n> /**\r\n> \r\n> * @brief Defines the conditional status for packet anomalies\r\n> \r\n> typedef struct _sai_ipsec_sa_condition_notification_t\r\n> \r\n> ```\r\n> /** Soft limit crossed */\r\n> SAI_IPSEC_CONDITION_TYPE_SOFT_LIMIT = 0,\r\n> \r\n> /** Hard limit crossed */\r\n> SAI_IPSEC_CONDITION_TYPE_HARD_LIMIT,\r\n\r\nDo the soft- and hard-limits refer to SN in the ESP header or something else?  Do we need any per-SA attributes to define these thresholds?\r\n> \r\n> /** Invalid SA */\r\n> SAI_IPSEC_CONDITION_TYPE_SA_INVALID,\r\nRefer to comment about invalid SA counter.  I think it is better to allow flexibility for IPsec decryption in software.\r\n\r\n> \r\n> /** SN rollover */\r\n> SAI_IPSEC_CONDITION_TYPE_SN_ROLLOVER,\r\n\r\nThis is for tx (encryption) SAs only - right?  Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED?  After all packets are not transmitted with rolled over SN. \r\n> ```\r\n> \r\n> } sai_ipsec_sa_condition_notification_t;\r\n> \r\n> typedef void (*sai_ipsec_sa_condition_notification_fn)(\r\n> _In_ sai_object_id_t ipsec_sa_id,\r\n> _Out_ sai_ipsec_sa_condition_notification_t *data);\r\n\r\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-06-18T15:59:02Z",
        "comment_author": "nupurjai",
        "comment_body": "> For notifications related to SN counter, don't we need the SA_INDEX? And in that case, do we want to send a separate notification for each event on each SA?\r\n> \r\n> Please see 3 more comments in-line.\r\n> \r\n> > We recommend adding notifications for soft/hard limit, seq rollover etc...\r\n> > /**\r\n> > \r\n> > * @brief Defines the conditional status for packet anomalies\r\n> > \r\n> > typedef struct _sai_ipsec_sa_condition_notification_t\r\n> > ```\r\n> > /** Soft limit crossed */\r\n> > SAI_IPSEC_CONDITION_TYPE_SOFT_LIMIT = 0,\r\n> > \r\n> > /** Hard limit crossed */\r\n> > SAI_IPSEC_CONDITION_TYPE_HARD_LIMIT,\r\n> > ```\r\n> \r\n> Do the soft- and hard-limits refer to SN in the ESP header or something else? Do we need any per-SA attributes to define these thresholds?\r\n\r\n> \r\n> > /** Invalid SA */\r\n> > SAI_IPSEC_CONDITION_TYPE_SA_INVALID,\r\n> > Refer to comment about invalid SA counter.  I think it is better to allow flexibility for IPsec decryption in software.\r\n> \r\n> > /** SN rollover */\r\n> > SAI_IPSEC_CONDITION_TYPE_SN_ROLLOVER,\r\n> \r\n> This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED? After all packets are not transmitted with rolled over SN.\r\n> \r\n> > ```\r\n> > \r\n> > } sai_ipsec_sa_condition_notification_t;\r\n> > \r\n> > typedef void (*sai_ipsec_sa_condition_notification_fn)(\r\n> > _In_ sai_object_id_t ipsec_sa_id,\r\n> > _Out_ sai_ipsec_sa_condition_notification_t *data);\r\n> > ```\r\nRE: This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED\r\nYes, That should be fine. These would be per SA and would need SA_INDEX.\r\nCan global counters indicate the INVALID_SA per port or port group? This is to indicate what hardware failed to decrypt. Software stack can maintain it's own counters. For packets that are dropped, we already have counters today.\r\n\r\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-06-18T16:34:04Z",
        "comment_author": "dipankar-ba",
        "comment_body": "> As agreed in IPSEC review meetings, there is no need to use first nibble to indicate the Next Header field.\r\n> Instead it was proposed to use separate SAs for encrypted payloads that start with UDP or IP header (IPv4/IPV6).\r\n> Assuming this description will be updated to capture the same.\r\n\r\nThis is resolved"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-06-18T16:52:13Z",
        "comment_author": "dipankar-ba",
        "comment_body": "> > For notifications related to SN counter, don't we need the SA_INDEX? And in that case, do we want to send a separate notification for each event on each SA?\r\n> > Please see 3 more comments in-line.\r\n> > > We recommend adding notifications for soft/hard limit, seq rollover etc...\r\n> > > /**\r\n> > > \r\n> > > * @brief Defines the conditional status for packet anomalies\r\n> > > \r\n> > > typedef struct _sai_ipsec_sa_condition_notification_t\r\n> > > ```\r\n> > > /** Soft limit crossed */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SOFT_LIMIT = 0,\r\n> > > \r\n> > > /** Hard limit crossed */\r\n> > > SAI_IPSEC_CONDITION_TYPE_HARD_LIMIT,\r\n> > > ```\r\n> > \r\n> > \r\n> > Do the soft- and hard-limits refer to SN in the ESP header or something else? Do we need any per-SA attributes to define these thresholds?\r\n> \r\n> > > /** Invalid SA */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SA_INVALID,\r\n> > > Refer to comment about invalid SA counter.  I think it is better to allow flexibility for IPsec decryption in software.\r\n> > \r\n> > \r\n> > > /** SN rollover */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SN_ROLLOVER,\r\n> > \r\n> > \r\n> > This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED? After all packets are not transmitted with rolled over SN.\r\n> > > ```\r\n> > > \r\n> > > } sai_ipsec_sa_condition_notification_t;\r\n> > > \r\n> > > typedef void (*sai_ipsec_sa_condition_notification_fn)(\r\n> > > _In_ sai_object_id_t ipsec_sa_id,\r\n> > > _Out_ sai_ipsec_sa_condition_notification_t *data);\r\n> > > ```\r\n> \r\n> RE: This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED\r\n> Yes, That should be fine. These would be per SA and would need SA_INDEX.\r\n> Can global counters indicate the INVALID_SA per port or port group? This is to indicate what hardware failed to decrypt. Software stack can maintain it's own counters. For packets that are dropped, we already have counters today.\r\n\r\n\r\n> > For notifications related to SN counter, don't we need the SA_INDEX? And in that case, do we want to send a separate notification for each event on each SA?\r\n> > Please see 3 more comments in-line.\r\n> > > We recommend adding notifications for soft/hard limit, seq rollover etc...\r\n> > > /**\r\n> > > \r\n> > > * @brief Defines the conditional status for packet anomalies\r\n> > > \r\n> > > typedef struct _sai_ipsec_sa_condition_notification_t\r\n> > > ```\r\n> > > /** Soft limit crossed */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SOFT_LIMIT = 0,\r\n> > > \r\n> > > /** Hard limit crossed */\r\n> > > SAI_IPSEC_CONDITION_TYPE_HARD_LIMIT,\r\n> > > ```\r\n> > \r\n> > \r\n> > Do the soft- and hard-limits refer to SN in the ESP header or something else? Do we need any per-SA attributes to define these thresholds?\r\n> \r\n> > > /** Invalid SA */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SA_INVALID,\r\n> > > Refer to comment about invalid SA counter.  I think it is better to allow flexibility for IPsec decryption in software.\r\n> > \r\n> > \r\n> > > /** SN rollover */\r\n> > > SAI_IPSEC_CONDITION_TYPE_SN_ROLLOVER,\r\n> > \r\n> > \r\n> > This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED? After all packets are not transmitted with rolled over SN.\r\n> > > ```\r\n> > > \r\n> > > } sai_ipsec_sa_condition_notification_t;\r\n> > > \r\n> > > typedef void (*sai_ipsec_sa_condition_notification_fn)(\r\n> > > _In_ sai_object_id_t ipsec_sa_id,\r\n> > > _Out_ sai_ipsec_sa_condition_notification_t *data);\r\n> > > ```\r\n> \r\n> RE: This is for tx (encryption) SAs only - right? Would it better to call this something like SAI_IPSEC_CONDITION_TYPE_SN_MAX_REACHED\r\n> Yes, That should be fine. These would be per SA and would need SA_INDEX.\r\n> Can global counters indicate the INVALID_SA per port or port group? This is to indicate what hardware failed to decrypt. Software stack can maintain it's own counters. For packets that are dropped, we already have counters today.\r\n\r\nI am not exactly sure what you mean by invalid SA/decryption failure.  Perhaps you mean IPsec packets that match one of the Security Engine's tunnel termination criteria, but do not terminate the IPsec in the Security Engine?  This is not supported in the other IPsec hardware and sounds like an implementation specific debug counter.  AFAIK, the NOS can allow such implementation-specific debug features, but outside the scope of the standard SAI API."
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-07-07T07:01:38Z",
        "comment_author": "kcudnik",
        "comment_body": "please resolve conflicts and correct possible errors"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-08-16T15:09:40Z",
        "comment_author": "kcudnik",
        "comment_body": "I made mistake on resolving conflicts:\r\n```\r\n     * @condition SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP_GRE or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_VXLAN or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_SRV6 or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_NVGRE\r\n     * @condition SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP_GRE or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_VXLAN or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_SRV6 or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP_ESP or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_IPINIP_UDP_ESP or SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_VXLAN_UDP_ESP\r\n     */\r\n    SAI_TUNNEL_ATTR_UNDERLAY_INTERFACE,\r\n```\r\n\r\nif accidently remove \"SAI_TUNNEL_ATTR_TYPE == SAI_TUNNEL_TYPE_NVGR\" @dipankar-ba  can you update? \r\n\r\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-08-26T16:23:49Z",
        "comment_author": "rlhui",
        "comment_body": "@dipankar-ba  - please resolve conflicts? Thanks."
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-08-27T00:09:52Z",
        "comment_author": "dipankar-ba",
        "comment_body": "Sorry, I had thought it had merged.  I will take a look.\n\n- Dipankar\n\n\nOn Thu, Aug 26, 2021 at 9:24 AM rlhui ***@***.***> wrote:\n\n> @dipankar-ba <https://github.com/dipankar-ba> - please resolve conflicts?\n> Thanks.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1206#issuecomment-906558367>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXMVEBU6PZHRF3QZGBTT6ZTCBANCNFSM4ZPQNHIA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>\n> .\n>\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-09-02T23:27:44Z",
        "comment_author": "dipankar-ba",
        "comment_body": "@kcudnik \r\nAfter resolving the merge conflicts, I end up with a huge number of failure of:\r\nChecking for possible enum values shift (current branch vs origin/master)\r\nMost of these are for enums in files I have not modified e.g. SAI_ACL_ACTION_TYPE_ACL_DTEL_FLOW_OP fails.  It is in saiacl.h, which I have not touched.\r\nCan you please help?"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2021-09-03T11:18:05Z",
        "comment_author": "kcudnik",
        "comment_body": "your current fail is here:\r\n```\r\nWARNING: line ends in whitespace saiport.h 2034:  \r\nWARNING: Header doesn't meet style requirements (most likely ident is not 4 or 8 spaces) saiport.h 2034:\r\n```\r\n\r\nas for ACL enum shifts, acl enums changed beginning from your PR, since march 19, and to actually fix that you would need to rebase this PR on top of master instead of having branches"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-07T19:45:24Z",
        "comment_author": "dipankar-ba",
        "comment_body": "The crypto hardware uses SAI_MACSEC_ATTR_MACSEC_AUTH_KEY for the GHASH\nfunction.  My initial draft of SAI_MACSEC did not have this, because\ntheoretically the hardware or the driver could compute it from the\nencryption key.  But during the in-person review, someone wanted it on the\ninterface, because traditionally it has been done that way in existing\ndriver interfaces.  And nobody objected to that request.\n\n- Dipankar\n\n\nOn Sat, Nov 5, 2022 at 1:58 AM Haidong Gong ***@***.***>\nwrote:\n\n> ***@***.**** commented on this pull request.\n> ------------------------------\n>\n> In meta/saiserialize.c\n> <https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495>\n> :\n>\n> > +{\n> +   return sai_deserialize_encrypt_key( buffer, sak );\n> +}\n> +\n> +int sai_serialize_macsec_auth_key(\n> +        _Out_ char *buffer,\n> +        _In_ const sai_macsec_auth_key_t auth)\n> +{\n> +   return sai_serialize_auth_key( buffer, auth );\n> +}\n> +\n> +int sai_deserialize_macsec_auth_key(\n> +        _In_ const char *buffer,\n> +        _Out_ sai_macsec_auth_key_t auth)\n> +{\n> +   return sai_deserialize_auth_key( buffer, auth );\n>\n> In the sai-ipsec subgroup meeting on July 14, it was decided to duplicate\n> the data type for IPsec because of the unfortunate naming of the MACsec\n> data type.\n>\n> Why SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is needed when MACsec Secure\n> Association created?\n> MACsec is based on 802.1AE cipher suite.\n> Data plane encryption is based on GCM-AES-128/256 or GCM-XPN-AES-128/256.\n> Data plane authentication is based on GHASH function as GCM Spec.\n> What can the MACsec crypto hardware do with an\n> SAI_MACSEC_ATTR_MACSEC_AUTH_KEY ?\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-08T11:58:00Z",
        "comment_author": "Haidong988",
        "comment_body": "> The crypto hardware uses SAI_MACSEC_ATTR_MACSEC_AUTH_KEY for the GHASH function. My initial draft of SAI_MACSEC did not have this, because theoretically the hardware or the driver could compute it from the encryption key. But during the in-person review, someone wanted it on the interface, because traditionally it has been done that way in existing driver interfaces. And nobody objected to that request. - Dipankar\r\n> [\u2026](#)\r\n> On Sat, Nov 5, 2022 at 1:58 AM Haidong Gong ***@***.***> wrote: ***@***.**** commented on this pull request. ------------------------------ In meta/saiserialize.c <[#1206 (comment)](https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495)> : > +{ + return sai_deserialize_encrypt_key( buffer, sak ); +} + +int sai_serialize_macsec_auth_key( + _Out_ char *buffer, + _In_ const sai_macsec_auth_key_t auth) +{ + return sai_serialize_auth_key( buffer, auth ); +} + +int sai_deserialize_macsec_auth_key( + _In_ const char *buffer, + _Out_ sai_macsec_auth_key_t auth) +{ + return sai_deserialize_auth_key( buffer, auth ); In the sai-ipsec subgroup meeting on July 14, it was decided to duplicate the data type for IPsec because of the unfortunate naming of the MACsec data type. Why SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is needed when MACsec Secure Association created? MACsec is based on 802.1AE cipher suite. Data plane encryption is based on GCM-AES-128/256 or GCM-XPN-AES-128/256. Data plane authentication is based on GHASH function as GCM Spec. What can the MACsec crypto hardware do with an SAI_MACSEC_ATTR_MACSEC_AUTH_KEY ? \u2014 Reply to this email directly, view it on GitHub <[#1206 (comment)](https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA> . You are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\nSo SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is H for GHASH(H,A,C) which is  calculated by E(K,0).\r\nSAI_MACSEC_ATTR_MACSEC_AUTH_KEY is not  necessary to be MANDATORY_ON_CREATE."
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-08T18:30:30Z",
        "comment_author": "dipankar-ba",
        "comment_body": "It seemed logical to give the same flags to SAI_MACSEC_SA_ATTR_SAK and\nSAI_MACSEC_ATTR_MACSEC_AUTH_KEY,\nsince the latter can be computed once at the same time SAK is available.\nWhat would be the advantage of delaying the AUTH_KEY computation?\n\n- Dipankar\n\n\nOn Tue, Nov 8, 2022 at 3:58 AM Haidong Gong ***@***.***>\nwrote:\n\n> The crypto hardware uses SAI_MACSEC_ATTR_MACSEC_AUTH_KEY for the GHASH\n> function. My initial draft of SAI_MACSEC did not have this, because\n> theoretically the hardware or the driver could compute it from the\n> encryption key. But during the in-person review, someone wanted it on the\n> interface, because traditionally it has been done that way in existing\n> driver interfaces. And nobody objected to that request. - Dipankar\n> \u2026 <#m_4630814634200061671_>\n> On Sat, Nov 5, 2022 at 1:58 AM Haidong Gong *@*.*> wrote: @.** commented\n> on this pull request. ------------------------------ In meta/saiserialize.c\n> <#1206 (comment)\n> <https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495>>\n> : > +{ + return sai_deserialize_encrypt_key( buffer, sak ); +} + +int\n> sai_serialize_macsec_auth_key( + *Out* char *buffer, + In const\n> sai_macsec_auth_key_t auth) +{ + return sai_serialize_auth_key( buffer,\n> auth ); +} + +int sai_deserialize_macsec_auth_key( + In const char buffer,\n> + Out sai_macsec_auth_key_t auth) +{ + return sai_deserialize_auth_key(\n> buffer, auth ); In the sai-ipsec subgroup meeting on July 14, it was\n> decided to duplicate the data type for IPsec because of the unfortunate\n> naming of the MACsec data type. Why SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is\n> needed when MACsec Secure Association created? MACsec is based on 802.1AE\n> cipher suite. Data plane encryption is based on GCM-AES-128/256 or\n> GCM-XPN-AES-128/256. Data plane authentication is based on GHASH function\n> as GCM Spec. What can the MACsec crypto hardware do with an\n> SAI_MACSEC_ATTR_MACSEC_AUTH_KEY ? \u2014 Reply to this email directly, view it\n> on GitHub <#1206 (comment)\n> <https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495>>,\n> or unsubscribe\n> https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA>\n> . You are receiving this because you were mentioned.Message ID: @.**>\n>\n> So SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is H for GHASH(H,A,C) which is\n> calculated by E(K,0).\n> SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is not necessary to be MANDATORY_ON_CREATE.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1206#issuecomment-1307092312>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXMFNFZUXY26OMWNHYTWHI55JANCNFSM4ZPQNHIA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-09T05:01:17Z",
        "comment_author": "Haidong988",
        "comment_body": "> It seemed logical to give the same flags to SAI_MACSEC_SA_ATTR_SAK and SAI_MACSEC_ATTR_MACSEC_AUTH_KEY, since the latter can be computed once at the same time SAK is available. What would be the advantage of delaying the AUTH_KEY computation? - Dipankar On Tue, Nov 8, 2022 at 3:58 AM Haidong Gong ***@***.***> wrote:\r\n> [\u2026](#)\r\n> The crypto hardware uses SAI_MACSEC_ATTR_MACSEC_AUTH_KEY for the GHASH function. My initial draft of SAI_MACSEC did not have this, because theoretically the hardware or the driver could compute it from the encryption key. But during the in-person review, someone wanted it on the interface, because traditionally it has been done that way in existing driver interfaces. And nobody objected to that request. - Dipankar \u2026 <#m_4630814634200061671_> On Sat, Nov 5, 2022 at 1:58 AM Haidong Gong *@*.*> wrote: @.** commented on this pull request. ------------------------------ In meta/saiserialize.c <#1206 (comment) <[#1206 (comment)](https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495)>> : > +{ + return sai_deserialize_encrypt_key( buffer, sak ); +} + +int sai_serialize_macsec_auth_key( + *Out* char *buffer, + In const sai_macsec_auth_key_t auth) +{ + return sai_serialize_auth_key( buffer, auth ); +} + +int sai_deserialize_macsec_auth_key( + In const char buffer, + Out sai_macsec_auth_key_t auth) +{ + return sai_deserialize_auth_key( buffer, auth ); In the sai-ipsec subgroup meeting on July 14, it was decided to duplicate the data type for IPsec because of the unfortunate naming of the MACsec data type. Why SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is needed when MACsec Secure Association created? MACsec is based on 802.1AE cipher suite. Data plane encryption is based on GCM-AES-128/256 or GCM-XPN-AES-128/256. Data plane authentication is based on GHASH function as GCM Spec. What can the MACsec crypto hardware do with an SAI_MACSEC_ATTR_MACSEC_AUTH_KEY ? \u2014 Reply to this email directly, view it on GitHub <#1206 (comment) <[#1206 (comment)](https://github.com/opencomputeproject/SAI/pull/1206#discussion_r1014607495)>>, or unsubscribe https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA <https://github.com/notifications/unsubscribe-auth/AN3GZXOK6SRNIBBVW5QN53LWGYOS5ANCNFSM4ZPQNHIA> . You are receiving this because you were mentioned.Message ID: @.**> So SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is H for GHASH(H,A,C) which is calculated by E(K,0). SAI_MACSEC_ATTR_MACSEC_AUTH_KEY is not necessary to be MANDATORY_ON_CREATE. \u2014 Reply to this email directly, view it on GitHub <[#1206 (comment)](https://github.com/opencomputeproject/SAI/pull/1206#issuecomment-1307092312)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AN3GZXMFNFZUXY26OMWNHYTWHI55JANCNFSM4ZPQNHIA> . You are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\nIf hardware support calc H from SAI_MACSEC_SA_ATTR_SAK, H is not needed when create MACSEC SA.\r\nMANDATORY_ON_CREATE means even hardware do not need that parameter, software still need to calculate one."
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-09T05:19:28Z",
        "comment_author": "Haidong988",
        "comment_body": "> What would be the advantage of delaying the AUTH_KEY computation?\r\n\r\nHardware crypto implement could have different architecture, it might be cipher-text based or packet flow based.\r\nIn packet flow based  implement  the crypto uint in hardware support pipeline process per cycle, support H calculation in \"Start of packet\" cycle causes no \"delaying\" or extra hardware cost.\r\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-09T17:00:55Z",
        "comment_author": "dipankar-ba",
        "comment_body": "Hi Haidong,\n\nSorry, I do not understand. Are we still talking of 2 different\nimplementation of the same AES-GCM cypher-suite?  Do you have any\nreferences that explains the 2 implementations?\n\nAlso, if we are still talking about AES-GCM, the NOS could provide the\nAUTH_KEY during the SA creation and the hardware could choose to not use it\n- right?\n\n- Dipankar\n\n\nOn Tue, Nov 8, 2022 at 9:19 PM Haidong Gong ***@***.***>\nwrote:\n\n> What would be the advantage of delaying the AUTH_KEY computation?\n>\n> Hardware crypto implement could have different architecture, it might be\n> cipher-text based or packet flow based.\n> In packet flow based implement the crypto uint in hardware support\n> pipeline process per cycle, support H calculation in \"Start of packet\"\n> cycle causes no \"delaying\" or extra hardware cost.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1206#issuecomment-1308226810>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXIK2HWSIYW4FV4SZZTWHMX6VANCNFSM4ZPQNHIA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-10T02:49:11Z",
        "comment_author": "Haidong988",
        "comment_body": "> Also, if we are still talking about AES-GCM, the NOS could provide the\r\n\r\nThere are reasons for hardware crypto implement making choice to calculate H or put it in storage like SRAM:\r\n1. session number\r\n2. speed\r\n3. architecture\r\nI could understand some PHY implement put it in storage like SRAM as input parameter for only several session there.\r\nAnd maybe there are timing or latency issue in their hardware implement to calc H especially in high frequency Clock like 800G PHY.\r\nHowever, if session number is up to K level and frequency is not high enough\uff0cthat's another story.\r\n\r\nAs you said \"hardware could choose to not use it\".\r\nThat's the point, if  hardware could choose to not use it, why it must be MANDATORY_ON_CREATE ?\r\nOr software need it for any other reason ?\r\nIt seems to me the only reason whole system need it, is some hardware could not calculate it per packet from SAK in line rate.\r\nI don't think NOS always need to calucate it every time it need a new SAK.\r\nFor system like Sonic with SAI,  it should be considered whether the driver layer is the better palce to put this parameter.\r\n\r\nIf you want to keep, that's ok to me. \r\nJust change it from \"MANDATORY_ON_CREATE | CREATE_ONLY\"  to CREATE_ONLY."
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-11T03:11:08Z",
        "comment_author": "dipankar-ba",
        "comment_body": "Hi Haidong,\n\nI do not want to do this because:\n1. CREATE_ONLY without MANDATORY_ON_CREATE does not make sense.  It does\nnot define if the NOS should provide this attribute or not.\n1. It is disruptive.  If NOS does not provide this attribute, existing\n(hardware+driver) implementations will break - requiring at least a driver\nmodification\n2. It is unnecessary - it costs little for NOS to compute the AUTH_KEY once\nand provide it to the driver\n3. The current AUTH_KEY attribute+flags work even with a (driver+hardware)\nimplementation that chooses to compute the AUTH_KEY, instead of using one\nfrom the NOS.\n\nIf you still feel strongly about this, you can submit a PR and have it\nreviewed by the community.\n\nBTW, there is no need to compute AUTH_KEY per packet - computing once for\nall packets in the SA is sufficient.  So, hardware speed has nothing to do\nwith the implementation choice.  And I cannot see why anyone will choose to\ncompute this in hardware.\n\nRegards.\n\n- Dipankar\n\n\nOn Wed, Nov 9, 2022 at 6:49 PM Haidong Gong ***@***.***>\nwrote:\n\n> Also, if we are still talking about AES-GCM, the NOS could provide the\n>\n> There are reasons for hardware crypto implement making choice to calculate\n> H or put it in storage like SRAM:\n>\n>    1. session number\n>    2. speed\n>    3. architecture\n>    I could understand some PHY implement put it in storage like SRAM as\n>    input parameter for only several session there.\n>    And maybe there are timing or latency issue in their hardware\n>    implement to calc H especially in high frequency Clock like 800G PHY.\n>    However, if session number is up to K level and frequency is not high\n>    enough\uff0cthat's another story.\n>\n> As you said \"hardware could choose to not use it\".\n> That's the point, if hardware could choose to not use it, why it must be\n> MANDATORY_ON_CREATE ?\n> Or software need it for any other reason ?\n> It seems to me the only reason whole system need it, is some hardware\n> could not calculate it per packet from SAK in line rate.\n> I don't think NOS always need to calucate it every time it need a new SAK.\n> For system like Sonic with SAI, it should be considered whether the driver\n> layer is the better palce to put this parameter.\n>\n> If you want to keep, that's ok to me.\n> Just change it from \"MANDATORY_ON_CREATE | CREATE_ONLY\" to CREATE_ONLY.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/opencomputeproject/SAI/pull/1206#issuecomment-1309695272>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AN3GZXNCZCWOZPKFZGDIZTLWHRPDFANCNFSM4ZPQNHIA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    },
    {
        "number": 1206,
        "repo": "sai",
        "comment_at": "2022-11-15T05:53:44Z",
        "comment_author": "Haidong988",
        "comment_body": "> I do not want to do this because: 1. CREATE_ONLY without MANDATORY_ON_CREATE does not make sense. It does not define if the NOS should provide this attribute or not. 1. It is disruptive. If NOS does not provide this attribute, existing (hardware+driver) implementations will break - requiring at least a driver modification 2. It is unnecessary - it costs little for NOS to compute the AUTH_KEY once and provide it to the driver 3. The current AUTH_KEY attribute+flags work even with a (driver+hardware) implementation that chooses to compute the AUTH_KEY, instead of using one from the NOS. If you still feel strongly about this, you can submit a PR and have it reviewed by the community. BTW, there is no need to compute AUTH_KEY per packet - computing once for all packets in the SA is sufficient. So, hardware speed has nothing to do with the implementation choice. And I cannot see why anyone will choose to compute this in hardware.\r\n\r\nTo 1. \u201dprovide this attribute or not\u201c should not be deciced by NOS\uff0cit should be decided by hardware if this parameter is needed. For hardware need H, it should be calculated from SAK by driver. For hardware does not need it, SAK is enough. NOS has nothing to do with H.\r\n\r\nTo 2.  As I said \"session number\" could lead to problems for both software and hardware. Hardware does not want to take the cost of SRAM for 10K session's extra parameter storage which could be calculated without any cost because the calc unit is always there. Software does not want to calculate 10K session's H from SAK when the controller or administrator switches 10K session's SAK periodically. If this must be done, only the driver of serveal PHY which need H calc it.\r\n\r\nTo 3. NOS has nothing to do with H and it must calculate it just because it may not known if the hardware could calc it. This may work with Sonic now because Sonic makes the assumption that H is always needed.\r\nI don't know how could SAI work with NOS which feels nothing about H if it is MANDATORY_ON_CREATE. \r\nIt's weird if NOS need another driver layer for SAI.\r\n\r\nTo BTW. The need is there for the cost of SRAM of 10K session's extra parameter storage in ASIC. And the speed I said means the Clock Frequency of ASIC which could be 800MHz or even GHz, in this case session number is definitely small and the lantecy/timig is critical, the trade-off is naturely for ASIC designer to choice H to be an input parameter from SRAM storage.\r\nBut that does not means \"hardware speed has nothing to do with the implementation choice\", actually they did the choice to use storage which is not must be done in ASIC implementation with frequencey below 300MHz and session number large."
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T16:50:23Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T17:02:11Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T17:08:44Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T17:09:32Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T17:21:40Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-18T17:22:27Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-21T11:37:32Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-21T22:03:39Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-22T12:50:17Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-22T17:22:23Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-22T17:39:33Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-22T19:02:33Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-23T09:30:17Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-23T22:37:43Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-06-24T09:52:59Z",
        "review_author": ""
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-06T21:29:43Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-06T23:31:54Z",
        "review_author": "nupurjai"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-07T07:01:02Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-14T15:29:09Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-16T12:56:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-16T13:00:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-19T18:47:46Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-19T18:48:29Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-19T18:49:26Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-19T18:49:53Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-29T05:39:42Z",
        "review_author": "lguohan"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-29T09:58:48Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-29T17:41:05Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-29T17:43:23Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-07-29T18:24:18Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-08-05T01:20:52Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-08-05T03:55:46Z",
        "review_author": "nupurjai"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-08-27T14:23:37Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2021-09-14T18:23:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1206,
        "repo": "sai",
        "review_at": "2022-11-05T08:58:10Z",
        "review_author": "Haidong988"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2022-11-05T08:58:10Z",
        "latestReview_author": "Haidong988",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2021-06-24T09:52:59Z",
        "latestReview_author": "",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2021-07-29T05:39:42Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2021-09-14T18:23:55Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2021-08-05T03:55:46Z",
        "latestReview_author": "nupurjai",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1206,
        "repo": "sai",
        "latestReview_at": "2021-08-27T14:23:37Z",
        "latestReview_author": "reshmaintel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-03-17T20:45:46Z",
        "comment_author": "JaiOCP",
        "comment_body": "Have you looked at PR#1173. It added following attributes\r\n/**\r\n * @brief Defines VXLAN tunnel UDP source port mode\r\n */\r\ntypedef enum _sai_tunnel_vxlan_udp_sport_mode_t\r\n{\r\n    /**\r\n     * @brief User define value\r\n     */\r\n    SAI_TUNNEL_VXLAN_UDP_SPORT_MODE_USER_DEFINED,\r\n\r\n    /**\r\n     * @brief RFC6335 Computed hash value in range 49152-65535\r\n     */\r\n    SAI_TUNNEL_VXLAN_UDP_SPORT_MODE_EPHEMERAL,\r\n} sai_tunnel_vxlan_udp_sport_mode_t;\r\n"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-03-18T02:04:23Z",
        "comment_author": "marian-pritsak",
        "comment_body": "> should we also add per tunnel attrib ?\r\n> as original attributes are both per {switch, tunnel type} and {tunnel}\r\n> otherwise, we may need to specify this mode is not per tunnel\r\n\r\nIt doesn't make sense at the moment to have it per tunnel. If anyone will come up with the use case, it can be added."
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-03-18T02:04:47Z",
        "comment_author": "marian-pritsak",
        "comment_body": "> Have you looked at PR#1173. It added following attributes\r\n> /**\r\n> \r\n> * @brief Defines VXLAN tunnel UDP source port mode\r\n>   _/\r\n>   typedef enum _sai_tunnel_vxlan_udp_sport_mode_t\r\n>   {\r\n>   /_*\r\n>   \r\n>   * @brief User define value\r\n>     */\r\n>     SAI_TUNNEL_VXLAN_UDP_SPORT_MODE_USER_DEFINED,\r\n>   \r\n>   /**\r\n>   \r\n>   * @brief RFC6335 Computed hash value in range 49152-65535\r\n>     */\r\n>     SAI_TUNNEL_VXLAN_UDP_SPORT_MODE_EPHEMERAL,\r\n>     } sai_tunnel_vxlan_udp_sport_mode_t;\r\n\r\n\"Ephemeral\" is not flexible enough"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-03-18T02:09:35Z",
        "comment_author": "marian-pritsak",
        "comment_body": "> > should we also add per tunnel attrib ?\r\n> > as original attributes are both per {switch, tunnel type} and {tunnel}\r\n> > otherwise, we may need to specify this mode is not per tunnel\r\n> \r\n> It doesn't make sense at the moment to have it per tunnel. If anyone will come up with the use case, it can be added.\r\n\r\nI misunderstood a comment - yes, it should be in both since the enum is shared"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-04-01T03:42:47Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP  - would you like to review/approve?"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-04-01T15:29:22Z",
        "comment_author": "lguohan",
        "comment_body": "/azp run"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-04-01T15:29:31Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>"
    },
    {
        "number": 1205,
        "repo": "sai",
        "comment_at": "2021-04-01T17:33:37Z",
        "comment_author": "JaiOCP",
        "comment_body": "> @JaiOCP - would you like to review/approve\r\nChanges looks good\r\n"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-03-17T03:40:24Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-03-17T03:43:31Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-03-25T16:07:12Z",
        "review_author": "lguohan"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-04-01T01:58:53Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-04-01T15:29:09Z",
        "review_author": "lguohan"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-04-01T17:18:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1205,
        "repo": "sai",
        "review_at": "2021-04-01T17:33:52Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1205,
        "repo": "sai",
        "latestReview_at": "2021-03-17T03:43:31Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1205,
        "repo": "sai",
        "latestReview_at": "2021-04-01T15:29:09Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1205,
        "repo": "sai",
        "latestReview_at": "2021-04-01T17:18:01Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1205,
        "repo": "sai",
        "latestReview_at": "2021-04-01T17:33:52Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1204,
        "repo": "sai",
        "comment_at": "2021-03-15T16:00:11Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @marian-pritsak , @lguohan , @ashutosh-agrawal  - please feel free to review, thanks.  \r\n"
    },
    {
        "number": 1204,
        "repo": "sai",
        "comment_at": "2021-03-15T16:00:36Z",
        "comment_author": "rlhui",
        "comment_body": "@SarathBug - would we please also provide a doc for this as discussed, thanks?"
    },
    {
        "number": 1204,
        "repo": "sai",
        "comment_at": "2021-03-15T16:05:18Z",
        "comment_author": "rlhui",
        "comment_body": "Adding more reviewers for this, thanks. - @eswaran, @skeesara-nokia , @michaelli10 "
    },
    {
        "number": 1204,
        "repo": "sai",
        "comment_at": "2021-04-29T23:41:33Z",
        "comment_author": "kcudnik",
        "comment_body": "@default flag is required on craete_only attrbiute"
    },
    {
        "number": 1204,
        "repo": "sai",
        "comment_at": "2021-05-14T17:29:31Z",
        "comment_author": "SarathBug",
        "comment_body": "@rlhui , @skeesara-nokia , @JaiOCP \r\n\r\nRemoved the attribute SAI_PORT_ATTR_RECYCLE_PORT_HEADER_MODE which was added initially.  \r\n\r\nReasons:\r\n1. The attribute is readonly.  HW lane is not applicable for recycle port, so CREATE_ONLY or  MANDATORY_ON_CREATE | CREATE_AND_SET cannot be used here.  Does not really help if it is not writeable.\r\n2. Could not enforce check through metadata e.g valid only for SAI_PORT_TYPE_RECYCLE because attribute SAI_PORT_ATTR_TYPE is READ_ONLY and \\@validonly check is not applicable for READ_ONLY attributes.\r\n\r\nThe PR just adds SAI_PORT_TYPE_RECYCLE in sai_port_type_t\r\n"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-15T19:01:40Z",
        "review_author": "skeesara-nokia"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-16T06:17:32Z",
        "review_author": "SarathBug"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-16T18:23:46Z",
        "review_author": "skeesara-nokia"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-16T18:27:27Z",
        "review_author": "michaelli10"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-18T17:39:14Z",
        "review_author": "rlhui"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-03-22T03:31:30Z",
        "review_author": "rlhui"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-05-14T17:10:57Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1204,
        "repo": "sai",
        "review_at": "2021-05-19T05:54:21Z",
        "review_author": "SarathBug"
    },
    {
        "number": 1204,
        "repo": "sai",
        "latestReview_at": "2021-05-14T17:10:57Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1204,
        "repo": "sai",
        "latestReview_at": "2021-03-22T03:31:30Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1204,
        "repo": "sai",
        "latestReview_at": "2021-03-16T18:23:46Z",
        "latestReview_author": "skeesara-nokia",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1204,
        "repo": "sai",
        "latestReview_at": "2021-03-16T18:27:27Z",
        "latestReview_author": "michaelli10",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1202,
        "repo": "sai",
        "comment_at": "2021-03-09T19:23:42Z",
        "comment_author": "kcudnik",
        "comment_body": "please relax saisanitycheck.c condition on 1178, add case for this scenario"
    },
    {
        "number": 1202,
        "repo": "sai",
        "comment_at": "2021-03-10T06:35:42Z",
        "comment_author": "rlhui",
        "comment_body": "@eswaranb , @skeesara-nokia  - please review, thanks."
    },
    {
        "number": 1202,
        "repo": "sai",
        "comment_at": "2021-03-12T16:53:03Z",
        "comment_author": "SarathBug",
        "comment_body": "@rlhui \r\n\r\nCan this be committed if there are no other comments?"
    },
    {
        "number": 1202,
        "repo": "sai",
        "comment_at": "2021-03-18T18:00:32Z",
        "comment_author": "rlhui",
        "comment_body": "the PR title does not match the change - \"SAI_NEIGHBOR_ENTRY_ATTR_ENCAP_INDEX \" was repeated?"
    },
    {
        "number": 1202,
        "repo": "sai",
        "comment_at": "2021-03-19T02:38:46Z",
        "comment_author": "SarathBug",
        "comment_body": "> Can the PR title be corrected?\r\n\r\n@rlhui, Thanks for the comment. Corrected it."
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-09T19:21:10Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-10T05:04:25Z",
        "review_author": "SarathBug"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-10T07:55:29Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-10T23:27:03Z",
        "review_author": "eswaranb"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-17T09:22:25Z",
        "review_author": "skeesara-nokia"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-18T18:03:29Z",
        "review_author": "rlhui"
    },
    {
        "number": 1202,
        "repo": "sai",
        "review_at": "2021-03-22T03:34:53Z",
        "review_author": "rlhui"
    },
    {
        "number": 1202,
        "repo": "sai",
        "latestReview_at": "2021-03-10T23:27:03Z",
        "latestReview_author": "eswaranb",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1202,
        "repo": "sai",
        "latestReview_at": "2021-03-10T07:55:29Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1202,
        "repo": "sai",
        "latestReview_at": "2021-03-22T03:34:53Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1202,
        "repo": "sai",
        "latestReview_at": "2021-03-17T09:22:25Z",
        "latestReview_author": "skeesara-nokia",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1200,
        "repo": "sai",
        "comment_at": "2021-03-10T06:23:11Z",
        "comment_author": "lguohan",
        "comment_body": "can you setup the pipeline?"
    },
    {
        "number": 1200,
        "repo": "sai",
        "comment_at": "2021-03-11T06:55:34Z",
        "comment_author": "liushilongbuaa",
        "comment_body": "> can you setup the pipeline?\r\n\r\nalready set up.\r\nafter merge of the PR in sonic component, I will setup pipeline."
    },
    {
        "number": 1200,
        "repo": "sai",
        "review_at": "2021-03-10T06:22:41Z",
        "review_author": "lguohan"
    },
    {
        "number": 1200,
        "repo": "sai",
        "latestReview_at": "2021-03-10T06:22:41Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1199,
        "repo": "sai",
        "comment_at": "2021-03-09T00:20:59Z",
        "comment_author": "dipankar-ba",
        "comment_body": "This was reported on https://github.com/opencomputeproject/SAI/issues/1196\r\n"
    },
    {
        "number": 1199,
        "repo": "sai",
        "review_at": "2021-03-09T06:09:15Z",
        "review_author": "BRCM-DevOps"
    },
    {
        "number": 1199,
        "repo": "sai",
        "review_at": "2021-03-09T06:11:15Z",
        "review_author": "SarathBug"
    },
    {
        "number": 1199,
        "repo": "sai",
        "latestReview_at": "2021-03-09T06:11:15Z",
        "latestReview_author": "SarathBug",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1199,
        "repo": "sai",
        "latestReview_at": "2021-03-09T06:09:15Z",
        "latestReview_author": "BRCM-DevOps",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1198,
        "repo": "sai",
        "comment_at": "2021-03-05T05:09:25Z",
        "comment_author": "jasmeetbagga",
        "comment_body": "Note this is a replica of pull request #1155 \r\n@rlhui @lguohan "
    },
    {
        "number": 1198,
        "repo": "sai",
        "comment_at": "2021-03-09T06:25:21Z",
        "comment_author": "ritahui",
        "comment_body": "@kcudnik , @JaiOCP - please help sign off. Thanks."
    },
    {
        "number": 1198,
        "repo": "sai",
        "review_at": "2021-03-09T09:20:41Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1198,
        "repo": "sai",
        "review_at": "2021-03-09T17:48:36Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1198,
        "repo": "sai",
        "latestReview_at": "2021-03-09T09:20:41Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1198,
        "repo": "sai",
        "latestReview_at": "2021-03-09T17:48:36Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1195,
        "repo": "sai",
        "comment_at": "2021-02-25T19:18:17Z",
        "comment_author": "mikeberesford",
        "comment_body": "@JaiOCP @lguohan would you take a look and see if this covers what we discussed today (and help tag others that should review?)"
    },
    {
        "number": 1195,
        "repo": "sai",
        "comment_at": "2021-03-02T05:49:51Z",
        "comment_author": "mikeberesford",
        "comment_body": "@rlhui are there others I should be tagging for review here?"
    },
    {
        "number": 1195,
        "repo": "sai",
        "comment_at": "2021-03-03T07:06:10Z",
        "comment_author": "rlhui",
        "comment_body": "> @rlhui are there others I should be tagging for review here?\r\n\r\n@marian-pritsak , @ashutosh-agrawal - please help review as well? Thanks.\r\n\r\n"
    },
    {
        "number": 1195,
        "repo": "sai",
        "comment_at": "2021-03-15T21:29:31Z",
        "comment_author": "mikeberesford",
        "comment_body": "@lguohan any objections to the revised wording? If not, I think this can be merged."
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-02-19T20:29:07Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-04T16:06:52Z",
        "review_author": "lguohan"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-04T16:49:43Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-04T16:58:54Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-04T17:06:26Z",
        "review_author": "konne88"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-04T17:51:35Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-09T06:48:32Z",
        "review_author": "rlhui"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-09T20:27:11Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-10T02:41:16Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-10T02:41:50Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-10T03:16:06Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1195,
        "repo": "sai",
        "review_at": "2021-03-11T16:10:57Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1195,
        "repo": "sai",
        "latestReview_at": "2021-03-04T17:06:26Z",
        "latestReview_author": "konne88",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1195,
        "repo": "sai",
        "latestReview_at": "2021-03-10T03:16:06Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1195,
        "repo": "sai",
        "latestReview_at": "2021-03-11T16:10:57Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1195,
        "repo": "sai",
        "latestReview_at": "2021-02-19T20:29:07Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1195,
        "repo": "sai",
        "latestReview_at": "2021-03-09T06:48:32Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1194,
        "repo": "sai",
        "comment_at": "2021-02-19T18:29:33Z",
        "comment_author": "kcudnik",
        "comment_body": "```\r\nWARNING: Word 'DNAPT' is misspelled or is acronym, add to acronyms.txt? saiswitch.h 2277:     * @brief Available DNAPT entries\r\nWARNING: Word 'NAPT' is misspelled or is acronym, add to acronyms.txt? saiswitch.h 2285:     * @brief Available Double NAPT entries\r\nWARNING: Word 'SNAPT' is misspelled or is acronym, add to acronyms.txt? saiswitch.h 2269:     * @brief Available SNAPT entries\r\n```\r\nplease add words to acronyms.txt"
    },
    {
        "number": 1194,
        "repo": "sai",
        "comment_at": "2021-03-10T06:10:07Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @marian-pritsak or @mattyk  - please start reviewing this at earliest. Thanks."
    },
    {
        "number": 1194,
        "repo": "sai",
        "comment_at": "2021-03-16T19:46:07Z",
        "comment_author": "rlhui",
        "comment_body": "We might need a similar attribute for SAI_NAT_TYPE_DESTINATION_NAT_POOL as well?"
    },
    {
        "number": 1194,
        "repo": "sai",
        "comment_at": "2021-03-16T20:14:07Z",
        "comment_author": "kperumalbfn",
        "comment_body": "> We might need a similar attribute for SAI_NAT_TYPE_DESTINATION_NAT_POOL as well?\r\n\r\n@rlhui We can add separate attribute for DNAT_POOL as well."
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-09T19:24:10Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-11T12:01:16Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-11T16:05:56Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-16T19:57:32Z",
        "review_author": "rlhui"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-16T20:12:41Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-17T06:03:48Z",
        "review_author": "rlhui"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-17T18:46:46Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1194,
        "repo": "sai",
        "review_at": "2021-03-22T03:19:17Z",
        "review_author": "rlhui"
    },
    {
        "number": 1194,
        "repo": "sai",
        "latestReview_at": "2021-03-09T19:24:10Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1194,
        "repo": "sai",
        "latestReview_at": "2021-03-11T16:05:56Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1194,
        "repo": "sai",
        "latestReview_at": "2021-03-22T03:19:17Z",
        "latestReview_author": "rlhui",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1194,
        "repo": "sai",
        "latestReview_at": "2021-03-11T12:01:16Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-02-18T16:54:10Z",
        "comment_author": "rlhui",
        "comment_body": "@JaiOCP , @marian-pritsak , @ashutosh-agrawal - would you like to review/sign-off this?  Thanks."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-02-18T16:56:55Z",
        "comment_author": "rlhui",
        "comment_body": "@j-bos  - thanks. possible to also upload the ppt to https://github.com/opencomputeproject/SAI/tree/master/doc/ECMP?"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-02-18T16:58:06Z",
        "comment_author": "rlhui",
        "comment_body": "@j-bos  - please check the DCO error if this can be resolved."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-02-19T12:55:56Z",
        "comment_author": "rck-innovium",
        "comment_body": "Since we do not have an explicit capability check,  can you spell out the mechanism to know whether a SAI implementation supports this capability. Say, if SAI_SWITCH_ATTR_MAX_NUMBER_OF_FORWARDING_CLASSES is 0?"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-02-23T20:26:42Z",
        "comment_author": "j-bos",
        "comment_body": "> Since we do not have an explicit capability check, can you spell out the mechanism to know whether a SAI implementation supports this capability. Say, if SAI_SWITCH_ATTR_MAX_NUMBER_OF_FORWARDING_CLASSES is 0?\r\n\r\nThe most direct would be an enum-capability for next-hop group type (class-based). Though, I think a check if SAI_SWITCH_ATTR_MAX_NUMBER_OF_FORWARDING_CLASSES is supported and non-zero would be reasonable as well."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-03-10T06:49:46Z",
        "comment_author": "rlhui",
        "comment_body": "@lguohan  - would you like to review? Thanks."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-04-28T05:37:45Z",
        "comment_author": "rlhui",
        "comment_body": "@marian-pritsak , please also help review, thanks."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-07-06T04:24:21Z",
        "comment_author": "j-bos",
        "comment_body": "> @j-bos - please check the DCO error if this can be resolved.\r\n\r\nResolved"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-07-06T07:47:20Z",
        "comment_author": "kcudnik",
        "comment_body": "please resolve conflicts "
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-04T18:37:00Z",
        "comment_author": "abdosi",
        "comment_body": "@j-bos Are you working on update using new object ?"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-10T14:45:29Z",
        "comment_author": "j-bos",
        "comment_body": "> @j-bos Are you working on update using new object ?\r\n\r\n@abdosi I have added some changes for that and can accept review comments. I am working on updating the documentation now."
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-26T16:29:12Z",
        "comment_author": "kcudnik",
        "comment_body": "/azp run"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-26T16:29:16Z",
        "comment_author": "azure-pipelines",
        "comment_body": "<samp>\nPull request contains merge conflicts.<br>\r\n\n</samp>"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-26T17:04:10Z",
        "comment_author": "kcudnik",
        "comment_body": "please resolve conflicts"
    },
    {
        "number": 1193,
        "repo": "sai",
        "comment_at": "2021-08-26T19:35:51Z",
        "comment_author": "j-bos",
        "comment_body": "> Please update the pipeline with CBF and ECMP stage indicated as optional.\r\n\r\nDone"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-02-19T10:48:36Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-02-23T18:59:50Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-02-23T19:01:56Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-02-23T20:23:59Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-03-15T10:49:30Z",
        "review_author": "TACappleman"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-03-15T16:40:30Z",
        "review_author": "TACappleman"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-04-15T16:00:42Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-07-20T10:01:43Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-07-20T14:41:17Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-07-22T15:20:10Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-07-22T15:33:56Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-07-22T15:59:38Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-13T16:38:05Z",
        "review_author": "TACappleman"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-17T16:15:55Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-17T16:27:00Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-19T15:02:30Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-19T15:02:39Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-19T15:03:22Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-19T15:04:09Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-20T08:35:41Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-23T14:32:55Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-24T17:19:38Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-24T19:09:06Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-25T06:45:49Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T15:20:10Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T15:20:39Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T16:02:31Z",
        "review_author": "ashutosh-agrawal"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T16:04:27Z",
        "review_author": "kperumalbfn"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T16:08:19Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T16:47:47Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T18:20:46Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T18:34:00Z",
        "review_author": "abanu-ms"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T18:53:19Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T18:54:16Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:06:34Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:13:45Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:35:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:42:44Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:44:51Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "review_at": "2021-08-26T19:49:40Z",
        "review_author": "j-bos"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T16:02:31Z",
        "latestReview_author": "ashutosh-agrawal",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T19:35:05Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T16:04:27Z",
        "latestReview_author": "kperumalbfn",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T16:08:19Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T16:47:47Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-13T16:38:05Z",
        "latestReview_author": "TACappleman",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1193,
        "repo": "sai",
        "latestReview_at": "2021-08-26T18:34:00Z",
        "latestReview_author": "abanu-ms",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1192,
        "repo": "sai",
        "comment_at": "2021-03-02T05:49:25Z",
        "comment_author": "mikeberesford",
        "comment_body": "@rlhui would you let me know if there are others I should be tagging for review here?"
    },
    {
        "number": 1192,
        "repo": "sai",
        "comment_at": "2021-03-03T07:06:56Z",
        "comment_author": "rlhui",
        "comment_body": "@marian-pritsak - please help review? Thanks."
    },
    {
        "number": 1192,
        "repo": "sai",
        "review_at": "2021-02-17T22:03:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1192,
        "repo": "sai",
        "review_at": "2021-02-23T18:49:48Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1192,
        "repo": "sai",
        "review_at": "2021-03-04T16:38:29Z",
        "review_author": "lguohan"
    },
    {
        "number": 1192,
        "repo": "sai",
        "latestReview_at": "2021-03-04T16:38:29Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1192,
        "repo": "sai",
        "latestReview_at": "2021-02-17T22:03:31Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1192,
        "repo": "sai",
        "latestReview_at": "2021-02-23T18:49:48Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T20:26:17Z",
        "comment_author": "itaibaz",
        "comment_body": "Hi, the current commit for allowempty infrastructure looks fine\r\nThe question is, whether we also want to go over all SAI header files, and mark needed list with allowemptry true\r\nFor example, SAI_PORT_ATTR_INGRESS_MIRROR_SESSION\r\nThis will require going over each list in header files, and considering the use case, and probably might require feedback from more community members about use case\r\nThis can be done in this commit, or as a separate PR, which you can lead or I can lead, let me know what you think"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T20:43:11Z",
        "comment_author": "kcudnik",
        "comment_body": "that depends should be default value, currently when \"default empty\" is present automatically allowempty will be set to true, otherwise it will require explicit tag"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T21:01:49Z",
        "comment_author": "itaibaz",
        "comment_body": "I'm not sure it's correct to allow all lists to be empty\r\nI quickly went over SAI headers, and saw several examples\r\n\r\nFor example, \r\n    /**\r\n     * @brief Hardware Lane list\r\n     *\r\n     * @type sai_u32_list_t\r\n     * @flags MANDATORY_ON_CREATE | CREATE_ONLY | KEY\r\n     */\r\n    SAI_PORT_ATTR_HW_LANE_LIST,\r\nSeems when you create a port you always have to supply at least one HW lane\r\n\r\nAnother example :\r\n    /**\r\n     * @brief Destination/Analyzer/Monitor Port List.\r\n     *\r\n     * @type sai_object_list_t\r\n     * @flags MANDATORY_ON_CREATE | CREATE_AND_SET\r\n     * @objects SAI_OBJECT_TYPE_PORT, SAI_OBJECT_TYPE_LAG, SAI_OBJECT_TYPE_SYSTEM_PORT\r\n     * @condition SAI_MIRROR_SESSION_ATTR_MONITOR_PORTLIST_VALID == true\r\n     */\r\n    SAI_MIRROR_SESSION_ATTR_MONITOR_PORTLIST,\r\nif port list is valid, I think list should contain at least one object\r\n\r\nAnother example : \r\n    /**\r\n     * @brief UDF Mask\r\n     *\r\n     * Default to 2 bytes, value 0xFF, 0xFF\r\n     *\r\n     * The count in the list must be equal to the UDF byte length.\r\n     * The mask only applies to extracted UDF when it is used for hash,\r\n     * it does not apply to the extracted UDF when it is used for ACL.\r\n     *\r\n     * @type sai_u8_list_t\r\n     * @flags CREATE_AND_SET\r\n     * @default const\r\n     */\r\n    SAI_UDF_ATTR_HASH_MASK,\r\nSeems the mask always is not empty (as empty mask would mean zero length UDF which is just not functional)\r\n\r\nI think for backward compatibility, we can use default true, if allow empty is not specified, so we don't \"lock\" any existing behavior\r\nBut still, we do need to \"lock\" some specific lists where allow empty just doesn't make sense (or at least, to me...)\r\n"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T21:23:02Z",
        "comment_author": "kcudnik",
        "comment_body": "yes, but those attributes by default have allowemtpty=false"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T21:40:43Z",
        "comment_author": "itaibaz",
        "comment_body": "so my point was -\r\neither we have a default of false if allownull is not present (same as today), and explicitly open it for several attributes where it's needed. This can be done in a separate PR. Even without PR, it's today's situation which is not correct but seems nobody was using it up until now, so wouldn't break any SAI vendor.\r\nor we have a default of true if not present, and block very few specific attribs\r\nThere are more attribs we will need to open in first approach than attribs we will need to lock in second approach, but I am fine with both, and again, I can lead that in separate PR"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T22:08:06Z",
        "comment_author": "kcudnik",
        "comment_body": "ok agree"
    },
    {
        "number": 1190,
        "repo": "sai",
        "comment_at": "2021-02-03T22:57:45Z",
        "comment_author": "itaibaz",
        "comment_body": "Thanks, so all look fine\r\nAfter this is merged, I will review all list metadata and suggest any PR if I think something is needed"
    },
    {
        "number": 1190,
        "repo": "sai",
        "review_at": "2021-02-03T22:57:04Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1190,
        "repo": "sai",
        "latestReview_at": "2021-02-03T22:57:04Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1189,
        "repo": "sai",
        "comment_at": "2021-02-01T12:21:14Z",
        "comment_author": "liat-grozovik",
        "comment_body": "@kcudnik appreciate your review"
    },
    {
        "number": 1189,
        "repo": "sai",
        "review_at": "2021-02-01T12:34:09Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1189,
        "repo": "sai",
        "latestReview_at": "2021-02-01T12:34:09Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1186,
        "repo": "sai",
        "comment_at": "2021-02-18T16:53:44Z",
        "comment_author": "JaiOCP",
        "comment_body": "@marian-pritsak @dgsudharsan Please help review"
    },
    {
        "number": 1186,
        "repo": "sai",
        "comment_at": "2021-02-25T22:11:24Z",
        "comment_author": "JaiOCP",
        "comment_body": "@lguohan @reshmaintel @rlhui Please approve"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-01-28T13:54:53Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-10T21:01:36Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-10T21:03:23Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-11T16:25:15Z",
        "review_author": "lguohan"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-12T04:19:56Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-18T16:51:14Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-18T16:52:32Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-19T21:39:40Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-25T16:58:28Z",
        "review_author": "lguohan"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-25T22:10:21Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-02-25T22:10:31Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-03-04T16:05:02Z",
        "review_author": "lguohan"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-03-04T16:08:32Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1186,
        "repo": "sai",
        "review_at": "2021-03-05T21:15:36Z",
        "review_author": "reshmaintel"
    },
    {
        "number": 1186,
        "repo": "sai",
        "latestReview_at": "2021-02-10T21:01:36Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1186,
        "repo": "sai",
        "latestReview_at": "2021-03-04T16:05:02Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1186,
        "repo": "sai",
        "latestReview_at": "2021-03-04T16:08:32Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1186,
        "repo": "sai",
        "latestReview_at": "2021-02-19T21:39:40Z",
        "latestReview_author": "mikeberesford",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1186,
        "repo": "sai",
        "latestReview_at": "2021-03-05T21:15:36Z",
        "latestReview_author": "reshmaintel",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1185,
        "repo": "sai",
        "comment_at": "2021-02-22T04:47:38Z",
        "comment_author": "rlhui",
        "comment_body": "@marian-pritsak , @JaiOCP  - adding you as reviewers for this."
    },
    {
        "number": 1185,
        "repo": "sai",
        "comment_at": "2021-02-24T04:26:31Z",
        "comment_author": "rlhui",
        "comment_body": "One comment from discussion of this is to remove pre-ingress for port acl in the PR."
    },
    {
        "number": 1185,
        "repo": "sai",
        "comment_at": "2021-02-24T04:30:32Z",
        "comment_author": "rlhui",
        "comment_body": "@marian-pritsak , @JaiOCP , @rck-innovium, @ashutosh-agrawal - would you like to review/sign-off this. "
    },
    {
        "number": 1185,
        "repo": "sai",
        "review_at": "2021-02-22T09:43:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1185,
        "repo": "sai",
        "review_at": "2021-03-08T19:27:40Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1185,
        "repo": "sai",
        "review_at": "2021-03-08T19:33:22Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1185,
        "repo": "sai",
        "review_at": "2021-03-16T18:06:38Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1185,
        "repo": "sai",
        "latestReview_at": "2021-02-22T09:43:55Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1185,
        "repo": "sai",
        "latestReview_at": "2021-03-16T18:06:38Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1185,
        "repo": "sai",
        "latestReview_at": "2021-03-08T19:33:22Z",
        "latestReview_author": "JaiOCP",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1185,
        "repo": "sai",
        "latestReview_at": "2021-03-08T19:27:40Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1184,
        "repo": "sai",
        "review_at": "2021-01-24T14:19:52Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1184,
        "repo": "sai",
        "review_at": "2021-01-24T15:50:39Z",
        "review_author": "lguohan"
    },
    {
        "number": 1184,
        "repo": "sai",
        "review_at": "2021-01-24T16:19:38Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1184,
        "repo": "sai",
        "review_at": "2021-01-24T16:19:50Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1184,
        "repo": "sai",
        "review_at": "2021-01-24T16:22:48Z",
        "review_author": "lguohan"
    },
    {
        "number": 1184,
        "repo": "sai",
        "latestReview_at": "2021-01-24T16:19:50Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-01-21T17:06:52Z",
        "comment_author": "kcudnik",
        "comment_body": "just to point some of my thoughts on versioning: https://github.com/ravi861/SAI/pull/1#issuecomment-727950214"
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-02-17T18:03:20Z",
        "comment_author": "ravi861",
        "comment_body": "@lguohan @kcudnik can we please merge this or are there more comments?"
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-03-13T01:07:34Z",
        "comment_author": "ravi861",
        "comment_body": "@lguohan Please let me know if you are waiting on something for merging this."
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-04-06T18:41:49Z",
        "comment_author": "kcudnik",
        "comment_body": "just noticed, why this file is in main dir? it should be in inc/ "
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-04-07T18:31:09Z",
        "comment_author": "ravi861",
        "comment_body": "> just noticed, why this file is in main dir? it should be in inc/\r\n\r\nI didn't really have a preference. I kept it here since the file isn't really a SAI module and inc mostly includes those. Would you like it to move into inc?"
    },
    {
        "number": 1183,
        "repo": "sai",
        "comment_at": "2021-04-07T19:44:29Z",
        "comment_author": "kcudnik",
        "comment_body": "i think it would make sense to have that file in inc/"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T17:01:08Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T17:01:40Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T17:07:11Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T17:07:50Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T17:08:42Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:07:18Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:07:25Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:07:38Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:08:04Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:10:10Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T18:28:35Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-21T19:08:30Z",
        "review_author": "ravi861"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-01-26T18:26:39Z",
        "review_author": "lguohan"
    },
    {
        "number": 1183,
        "repo": "sai",
        "review_at": "2021-02-01T12:31:07Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1183,
        "repo": "sai",
        "latestReview_at": "2021-01-26T18:26:39Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1183,
        "repo": "sai",
        "latestReview_at": "2021-02-01T12:31:07Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1182,
        "repo": "sai",
        "comment_at": "2021-01-19T22:15:19Z",
        "comment_author": "ngoc-do",
        "comment_body": "All seem fine. Could you please merge it Kamil?"
    },
    {
        "number": 1182,
        "repo": "sai",
        "review_at": "2021-01-19T20:37:57Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1182,
        "repo": "sai",
        "latestReview_at": "2021-01-19T20:37:57Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1181,
        "repo": "sai",
        "comment_at": "2021-02-16T17:53:41Z",
        "comment_author": "rlhui",
        "comment_body": "@itaibaz , @phshaikh - would you like to sign off this? Thanks."
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-14T22:23:34Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-14T22:49:30Z",
        "review_author": "qbdwlr"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-14T22:56:38Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-14T22:57:34Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-14T22:57:50Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-19T20:33:30Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-01-20T21:12:21Z",
        "review_author": "phshaikh"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-02-16T17:56:30Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-02-16T18:17:26Z",
        "review_author": "phshaikh"
    },
    {
        "number": 1181,
        "repo": "sai",
        "review_at": "2021-02-17T09:12:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1181,
        "repo": "sai",
        "latestReview_at": "2021-02-16T17:56:30Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1181,
        "repo": "sai",
        "latestReview_at": "2021-02-17T09:12:01Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1181,
        "repo": "sai",
        "latestReview_at": "2021-02-16T18:17:26Z",
        "latestReview_author": "phshaikh",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1179,
        "repo": "sai",
        "comment_at": "2021-01-20T17:44:29Z",
        "comment_author": "rlhui",
        "comment_body": "@marian-pritsak - would you like to review this for MLNX?"
    },
    {
        "number": 1179,
        "repo": "sai",
        "comment_at": "2021-03-04T16:30:52Z",
        "comment_author": "rlhui",
        "comment_body": "@rck-innovium please help review/approve, thanks."
    },
    {
        "number": 1179,
        "repo": "sai",
        "comment_at": "2021-03-09T20:36:10Z",
        "comment_author": "JaiOCP",
        "comment_body": "@rlhui Please merge"
    },
    {
        "number": 1179,
        "repo": "sai",
        "comment_at": "2021-03-16T19:00:44Z",
        "comment_author": "rlhui",
        "comment_body": "> Hi Jai,\r\n> \r\n> We need the below understanding to be documented:\r\n> \r\n> There are multiple SAI attributes/stat-id (viz., SAI_PORT_ATTR_PRBS_RX_STATE, SAI_PORT_ATTR_PRBS_RX_STATUS, SAI_PORT_PRBS_RX_STATUS_LOCK_WITH_ERRORS) for PORT PRBS status. It depends on the underlying ASIC as to which of these attributes are applicable. The suggestion was that the application would first query SAI_PORT_ATTR_PRBS_RX_STATE. If the SAI implementation returns that the attribute is unsupported, the application would then fallback to query the existing SAI_PORT_ATTR_PRBS_RX_STATUS and SAI_PORT_PRBS_RX_STATUS_LOCK_WITH_ERRORS.\r\n\r\n@rck-innovium  - do you agree/approve this PR?"
    },
    {
        "number": 1179,
        "repo": "sai",
        "comment_at": "2021-03-17T04:55:38Z",
        "comment_author": "rck-innovium",
        "comment_body": "\r\n> @rck-innovium - do you agree/approve this PR?\r\n\r\nYes. Jai has said that he will document the NOS expectation in the release nots."
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-07T15:12:58Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-14T16:30:33Z",
        "review_author": "lguohan"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-20T19:02:55Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-21T16:58:57Z",
        "review_author": "lguohan"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-28T00:31:20Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-28T13:58:12Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-28T16:03:34Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-01-28T16:40:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T16:37:47Z",
        "review_author": "lguohan"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T20:28:34Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T21:08:29Z",
        "review_author": "lguohan"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T21:29:28Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T21:35:23Z",
        "review_author": "lguohan"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-04T21:37:07Z",
        "review_author": "mikeberesford"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-11T11:38:51Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-11T11:47:18Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-16T18:17:54Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-16T18:21:18Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1179,
        "repo": "sai",
        "review_at": "2021-03-17T04:56:27Z",
        "review_author": "rck-innovium"
    },
    {
        "number": 1179,
        "repo": "sai",
        "latestReview_at": "2021-03-04T21:35:23Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1179,
        "repo": "sai",
        "latestReview_at": "2021-01-28T16:40:28Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1179,
        "repo": "sai",
        "latestReview_at": "2021-03-17T04:56:27Z",
        "latestReview_author": "rck-innovium",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1179,
        "repo": "sai",
        "latestReview_at": "2021-03-04T21:37:07Z",
        "latestReview_author": "mikeberesford",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1178,
        "repo": "sai",
        "comment_at": "2021-02-04T17:54:49Z",
        "comment_author": "bandaru-viswanath",
        "comment_body": "@kcudnik Can this be merged in ?"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2020-12-23T10:46:08Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2020-12-23T11:13:38Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-03T20:11:23Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T04:28:48Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T11:36:02Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T11:36:19Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T11:39:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T11:45:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-04T11:47:55Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-07T16:41:22Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-07T16:41:33Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-07T20:24:28Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-08T04:31:58Z",
        "review_author": "bandaru-viswanath"
    },
    {
        "number": 1178,
        "repo": "sai",
        "review_at": "2021-01-08T07:49:23Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1178,
        "repo": "sai",
        "latestReview_at": "2021-01-08T07:49:23Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2020-12-11T21:54:05Z",
        "comment_author": "JaiOCP",
        "comment_body": "> I think we need to add a short comment about precedence of specific tunnel ECN settings over switch tunnel type settings\r\n\r\nDone\r\nhttps://github.com/opencomputeproject/SAI/pull/1173/commits/1ed0f2e544818c598b455b3046e159689e5fbfa4\r\n"
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2021-01-07T02:19:19Z",
        "comment_author": "rlhui",
        "comment_body": "@kcudnik , @itaibaz , would you please sign-off? Thanks."
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2021-01-13T23:54:08Z",
        "comment_author": "JaiOCP",
        "comment_body": "@itaibaz Please approve this PR. I have another set of changes on top this coming."
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2021-01-20T17:32:24Z",
        "comment_author": "rlhui",
        "comment_body": "@itaibaz  - reminder if there's anything needed from your end on this PR, or you'd sign off?  Thanks."
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2021-01-20T20:23:56Z",
        "comment_author": "itaibaz",
        "comment_body": "> @itaibaz - reminder if there's anything needed from your end on this PR, or you'd sign off? Thanks.\r\n\r\nThere are 2 open comments from Marian, that needs to be addressed before we can sign off"
    },
    {
        "number": 1173,
        "repo": "sai",
        "comment_at": "2021-02-19T23:21:46Z",
        "comment_author": "JaiOCP",
        "comment_body": "@rlhui Please merge this PR"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-09T23:46:57Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-09T23:48:30Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-10T08:07:58Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-10T16:17:02Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-10T16:23:07Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:33:40Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:38:05Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:42:30Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:43:49Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:52:14Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-11T21:52:30Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-12T08:59:29Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2020-12-17T23:16:01Z",
        "review_author": "dgsudharsan"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-07T15:15:04Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-14T01:12:06Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-14T02:07:09Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-14T02:08:10Z",
        "review_author": "itaibaz"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-27T22:47:57Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-01-27T22:52:06Z",
        "review_author": "JaiOCP"
    },
    {
        "number": 1173,
        "repo": "sai",
        "review_at": "2021-02-11T16:06:25Z",
        "review_author": "marian-pritsak"
    },
    {
        "number": 1173,
        "repo": "sai",
        "latestReview_at": "2021-01-14T02:08:10Z",
        "latestReview_author": "itaibaz",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1173,
        "repo": "sai",
        "latestReview_at": "2020-12-17T23:16:01Z",
        "latestReview_author": "dgsudharsan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1173,
        "repo": "sai",
        "latestReview_at": "2021-01-07T15:15:04Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1173,
        "repo": "sai",
        "latestReview_at": "2021-02-11T16:06:25Z",
        "latestReview_author": "marian-pritsak",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T02:09:18Z",
        "review_author": "lguohan"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T12:43:19Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T19:17:34Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T20:58:35Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T20:58:50Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T20:59:03Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-09T20:59:18Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-10T10:28:35Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-21T04:47:32Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1172,
        "repo": "sai",
        "review_at": "2020-12-21T15:16:49Z",
        "review_author": "lguohan"
    },
    {
        "number": 1172,
        "repo": "sai",
        "latestReview_at": "2020-12-21T04:47:32Z",
        "latestReview_author": "prafull-brcm",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1172,
        "repo": "sai",
        "latestReview_at": "2020-12-21T15:16:49Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1172,
        "repo": "sai",
        "latestReview_at": "2020-12-10T10:28:35Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1171,
        "repo": "sai",
        "comment_at": "2020-12-09T12:41:48Z",
        "comment_author": "kcudnik",
        "comment_body": "Fix aspell \"sysfs\", and also this seems like a information related only to gearbox not generic, other vendors can put any information they want there."
    },
    {
        "number": 1171,
        "repo": "sai",
        "comment_at": "2020-12-10T23:44:51Z",
        "comment_author": "lguohan",
        "comment_body": "@sujinmkang can you add the keyword into dictionary."
    },
    {
        "number": 1171,
        "repo": "sai",
        "comment_at": "2021-01-04T11:52:41Z",
        "comment_author": "kcudnik",
        "comment_body": "> WARNING: Word 'SysFS' is misspelled saiswitch.h 1447:     * Example: Like PCI location, I2C address, MDIO bus SysFS information etc.\r\n\r\njust add SysFS to aspell dictionary in meta dir"
    },
    {
        "number": 1171,
        "repo": "sai",
        "comment_at": "2021-01-14T16:53:14Z",
        "comment_author": "rlhui",
        "comment_body": "@prafull-brcm , @apogedik - would you please help review/approve?  Thanks."
    },
    {
        "number": 1171,
        "repo": "sai",
        "review_at": "2020-12-10T23:43:48Z",
        "review_author": "lguohan"
    },
    {
        "number": 1171,
        "repo": "sai",
        "review_at": "2021-01-04T18:35:32Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1171,
        "repo": "sai",
        "review_at": "2021-01-15T04:36:04Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1171,
        "repo": "sai",
        "review_at": "2021-02-09T06:47:01Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1171,
        "repo": "sai",
        "latestReview_at": "2020-12-10T23:43:48Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1171,
        "repo": "sai",
        "latestReview_at": "2021-01-04T18:35:32Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1171,
        "repo": "sai",
        "latestReview_at": "2021-02-09T06:47:01Z",
        "latestReview_author": "prafull-brcm",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1169,
        "repo": "sai",
        "comment_at": "2020-12-08T09:12:04Z",
        "comment_author": "kcudnik",
        "comment_body": "We discussed about this whether we want to separate attributes, or add a flag \"@dynamic\" for existing attribute. There are pros and cons for both of them, we didn't decided yet for that. Will let you know.\r\n\r\n@lguohan yfi"
    },
    {
        "number": 1169,
        "repo": "sai",
        "comment_at": "2020-12-08T21:11:35Z",
        "comment_author": "qbdwlr",
        "comment_body": "I think it makes sense to have a separate operational vs configuration attribute to avoid multiple writers (SAI and MKA) to the same attribute.\r\nThere is no precedent in this SAI MACsec definition for including the keywords \"INGRESS\" and \"EGRESS\" even though there are other attributes that are specific to a single direction.  I don't think changing the naming is warranted as the comments make the usage clear and this will keep the naming convention consistent.\r\nSince there is no longer a scenario for their values to change post-creation, I would suggest updating the configuration attributes to CREATE_ONLY.\r\n\r\n  "
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-09T18:43:19Z",
        "review_author": "lguohan"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-09T18:43:25Z",
        "review_author": "lguohan"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-10T02:43:39Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-10T08:16:37Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-10T17:45:09Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-10T17:48:01Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-10T17:51:31Z",
        "review_author": "kcudnik"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2020-12-21T04:42:30Z",
        "review_author": "prafull-brcm"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2021-01-07T16:11:12Z",
        "review_author": "lguohan"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2021-04-01T05:42:22Z",
        "review_author": "abdosi"
    },
    {
        "number": 1169,
        "repo": "sai",
        "review_at": "2021-04-03T00:02:28Z",
        "review_author": "dipankar-ba"
    },
    {
        "number": 1169,
        "repo": "sai",
        "latestReview_at": "2021-04-01T05:42:22Z",
        "latestReview_author": "abdosi",
        "latestReview_state": "COMMENTED"
    },
    {
        "number": 1169,
        "repo": "sai",
        "latestReview_at": "2021-01-07T16:11:12Z",
        "latestReview_author": "lguohan",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1169,
        "repo": "sai",
        "latestReview_at": "2020-12-10T17:51:31Z",
        "latestReview_author": "kcudnik",
        "latestReview_state": "APPROVED"
    },
    {
        "number": 1169,
        "repo": "sai",
        "latestReview_at": "2020-12-21T04:42:30Z",
        "latestReview_author": "prafull-brcm",
        "latestReview_state": "APPROVED"
    }
]